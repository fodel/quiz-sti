[
  {
    "id": 5001,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quel symbole doit précéder le nom de toutes les variables en PHP ?",
    "options": [
      "&",
      "%",
      "$",
      "@"
    ],
    "reponse": [
      "$"
    ],
    "explication": "Toutes les variables en PHP commencent par le symbole dollar (`$`), par exemple `$nom_variable`."
  },
  {
    "id": 5002,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quel opérateur est utilisé pour la concaténation de chaînes de caractères ?",
    "options": [
      "`+`",
      "`.`",
      "`&`",
      "`,`"
    ],
    "reponse": [
      "`.`"
    ],
    "explication": "En PHP, le point (`.`) est utilisé pour assembler (concaténer) deux chaînes de caractères."
  },
  {
    "id": 5003,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction est utilisée pour afficher du texte à l'écran ?",
    "options": [
      "`print()`",
      "`display()`",
      "`echo`",
      "`alert()`"
    ],
    "reponse": [
      "`echo`"
    ],
    "explication": "`echo` est une instruction du langage utilisée pour afficher une ou plusieurs chaînes de caractères."
  },
  {
    "id": 5004,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction retourne la longueur (nombre de caractères) d'une chaîne ?",
    "options": [
      "`count()`",
      "`strlen()`",
      "`length()`",
      "`str_length()`"
    ],
    "reponse": [
      "`strlen()`"
    ],
    "explication": "La fonction `strlen()` (string length) est utilisée pour obtenir le nombre de caractères dans une chaîne."
  },
  {
    "id": 5005,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quel opérateur arithmétique retourne le reste d'une division ?",
    "options": [
      "`/`",
      "`*`",
      "`%`",
      "`rem`"
    ],
    "reponse": [
      "`%`"
    ],
    "explication": "L'opérateur modulo (`%`) calcule le reste de la division entière d'un nombre par un autre."
  },
  {
    "id": 5006,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quel opérateur de comparaison signifie 'égal à' (comparaison de valeur) ?",
    "options": [
      "`=`",
      "`===`",
      "`==`",
      "`<>`"
    ],
    "reponse": [
      "`==`"
    ],
    "explication": "L'opérateur `==` vérifie si deux valeurs sont égales, même si leurs types sont différents (ex: `10 == '10'` est vrai)."
  },
  {
    "id": 5007,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quel opérateur de comparaison signifie 'différent de' ?",
    "options": [
      "`!=`",
      "`!==`",
      "`<>`",
      "`><`"
    ],
    "reponse": [
      "`<>`",
      "`!=`"
    ],
    "explication": "L'opérateur `<>` (ainsi que `!=`) est utilisé pour vérifier si deux valeurs ne sont pas égales."
  },
  {
    "id": 5008,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quel opérateur logique signifie 'ET' ?",
    "options": [
      "`||`",
      "`AND`",
      "`&`",
      "`&&`"
    ],
    "reponse": [
      "`&&`"
    ],
    "explication": "L'opérateur `&&` est le 'ET' logique. L'expression est vraie seulement si les deux conditions sont vraies."
  },
  {
    "id": 5009,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quel opérateur logique signifie 'OU' ?",
    "options": [
      "`|`",
      "`OR`",
      "`||`",
      "`ou`"
    ],
    "reponse": [
      "`||`"
    ],
    "explication": "L'opérateur `||` est le 'OU' logique. L'expression est vraie si au moins une des conditions est vraie."
  },
  {
    "id": 5010,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quel opérateur logique signifie la négation ('NON') ?",
    "options": [
      "`~`",
      "`!`",
      "`NOT`",
      "`-`"
    ],
    "reponse": [
      "`!`"
    ],
    "explication": "L'opérateur `!` inverse la valeur de vérité d'une condition (le vrai devient faux, et vice-versa)."
  },
  {
    "id": 5011,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction retourne le nombre d'éléments dans un tableau ?",
    "options": [
      "`size()`",
      "`strlen()`",
      "`count()`",
      "`length()`"
    ],
    "reponse": [
      "`count()`"
    ],
    "explication": "La fonction `count()` est utilisée pour compter le nombre d'éléments présents dans un tableau."
  },
  {
    "id": 5012,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction est utilisée pour créer un tableau ?",
    "options": [
      "`new Array()`",
      "`create_array()`",
      "`[]`",
      "`array()`"
    ],
    "reponse": [
      "`array()`"
    ],
    "explication": "La construction `array()` est utilisée pour créer et initialiser un nouveau tableau."
  },
  {
    "id": 5013,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction convertit une chaîne de caractères en minuscules ?",
    "options": [
      "`strtolower()`",
      "`str_to_lower()`",
      "`lowercase()`",
      "`string_lower()`"
    ],
    "reponse": [
      "`strtolower()`"
    ],
    "explication": "La fonction `strtolower()` prend une chaîne en argument et retourne la même chaîne avec tous les caractères en minuscules."
  },
  {
    "id": 5014,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction convertit une chaîne de caractères en MAJUSCULES ?",
    "options": [
      "`strtoupper()`",
      "`str_to_upper()`",
      "`uppercase()`",
      "`string_upper()`"
    ],
    "reponse": [
      "`strtoupper()`"
    ],
    "explication": "La fonction `strtoupper()` prend une chaîne en argument et retourne la même chaîne avec tous les caractères en majuscules."
  },
  {
    "id": 5015,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction supprime les espaces au début et à la fin d'une chaîne ?",
    "options": [
      "`strip()`",
      "`clean()`",
      "`trim()`",
      "`str_space_remove()`"
    ],
    "reponse": [
      "`trim()`"
    ],
    "explication": "La fonction `trim()` est très utile pour nettoyer les données saisies par un utilisateur en retirant les espaces superflus."
  },
  {
    "id": 5016,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle superglobale est utilisée pour récupérer les données envoyées via la méthode POST d'un formulaire ?",
    "options": [
      "`$_GET`",
      "`$_REQUEST`",
      "`$_SERVER`",
      "`$_POST`"
    ],
    "reponse": [
      "`$_POST`"
    ],
    "explication": "La variable superglobale `$_POST` est un tableau associatif contenant les données envoyées au script via la méthode HTTP POST."
  },
  {
    "id": 5017,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle superglobale est utilisée pour récupérer les données envoyées dans l'URL ?",
    "options": [
      "`$_URL`",
      "`$_GET`",
      "`$_POST`",
      "`$_QUERY`"
    ],
    "reponse": [
      "`$_GET`"
    ],
    "explication": "La variable superglobale `$_GET` est un tableau associatif contenant les données envoyées au script via les paramètres de l'URL."
  },
  {
    "id": 5018,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction permet de vérifier si une variable a été définie et n'est pas `NULL` ?",
    "options": [
      "`exists()`",
      "`defined()`",
      "`not_null()`",
      "`isset()`"
    ],
    "reponse": [
      "`isset()`"
    ],
    "explication": "La fonction `isset()` est cruciale pour vérifier si une variable (comme une donnée de formulaire) a bien été envoyée avant de l'utiliser."
  },
  {
    "id": 5019,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction arrête l'exécution du script et affiche un message ?",
    "options": [
      "`stop()`",
      "`exit()`",
      "`die()`",
      "`end()`"
    ],
    "reponse": [
      "`die()`"
    ],
    "explication": "La fonction `die()` (ou son alias `exit()`) termine immédiatement le script, affichant souvent un message d'erreur."
  },
  {
    "id": 5020,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle instruction est utilisée pour inclure le contenu d'un autre fichier PHP, provoquant une erreur fatale si le fichier est introuvable ?",
    "options": [
      "`include()`",
      "`import()`",
      "`require()`",
      "`load()`"
    ],
    "reponse": [
      "`require()`"
    ],
    "explication": "`require` est utilisé pour les fichiers essentiels (comme la configuration). Si le fichier manque, le script s'arrête."
  },
  {
    "id": 5021,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction retourne un nombre entier aléatoire ?",
    "options": [
      "`random()`",
      "`rand()`",
      "`random_int()`",
      "`generate_random()`"
    ],
    "reponse": [
      "`rand()`"
    ],
    "explication": "La fonction `rand()` génère un nombre entier pseudo-aléatoire. On peut lui donner des bornes (`rand(min, max)`)."
  },
  {
    "id": 5022,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction mathématique retourne la valeur absolue d'un nombre (ex: -5 devient 5) ?",
    "options": [
      "`abs()`",
      "`absolute()`",
      "`positive()`",
      "`round()`"
    ],
    "reponse": [
      "`abs()`"
    ],
    "explication": "La fonction `abs()` retourne la magnitude d'un nombre sans son signe."
  },
  {
    "id": 5023,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction mathématique retourne la racine carrée d'un nombre ?",
    "options": [
      "`root()`",
      "`sqrt()`",
      "`square_root()`",
      "`pow()`"
    ],
    "reponse": [
      "`sqrt()`"
    ],
    "explication": "La fonction `sqrt()` (square root) calcule la racine carrée d'un nombre."
  },
  {
    "id": 5024,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction mathématique arrondit un nombre à virgule à l'entier le plus proche ?",
    "options": [
      "`ceil()`",
      "`floor()`",
      "`round()`",
      "`trunc()`"
    ],
    "reponse": [
      "`round()`"
    ],
    "explication": "La fonction `round()` arrondit un nombre à l'entier le plus proche selon les règles mathématiques standards."
  },
  {
    "id": 5025,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction retourne le timestamp Unix actuel (nombre de secondes depuis le 1er Janvier 1970) ?",
    "options": [
      "`date()`",
      "`now()`",
      "`time()`",
      "`strtotime()`"
    ],
    "reponse": [
      "`time()`"
    ],
    "explication": "La fonction `time()` est la base pour de nombreuses manipulations de date, en fournissant le timestamp courant."
  },
  {
    "id": 5026,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction est utilisée pour formater un timestamp ou la date actuelle en une chaîne lisible (ex: '2024-08-23') ?",
    "options": [
      "`date()`",
      "`format_date()`",
      "`time()`",
      "`strtotime()`"
    ],
    "reponse": [
      "`date()`"
    ],
    "explication": "La fonction `date()` prend un format en paramètre (ex: `'Y-m-d'`) pour afficher la date comme souhaité."
  },
  {
    "id": 5027,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction tente de convertir une date écrite en toutes lettres  en un timestamp ?",
    "options": [
      "`date_parse()`",
      "`time()`",
      "`date()`",
      "`strtotime()`"
    ],
    "reponse": [
      "`strtotime()`"
    ],
    "explication": "La fonction `strtotime()` (string to time) est très puissante pour interpréter des dates textuelles."
  },
  {
    "id": 5028,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction permet de valider si une date est correcte (ex: le 30 Février n'existe pas) ?",
    "options": [
      "`date_validate()`",
      "`checkdate()`",
      "`is_date()`",
      "`date()`"
    ],
    "reponse": [
      "`checkdate()`"
    ],
    "explication": "`checkdate(mois, jour, annee)` retourne `true` si la date est valide, `false` sinon."
  },
  {
    "id": 5029,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction est utilisée pour établir la connexion à une base de données MySQL ?",
    "options": [
      "`mysqli_query()`",
      "`mysqli_connect()`",
      "`mysql_open()`",
      "`db_connect()`"
    ],
    "reponse": [
      "`mysqli_connect()`"
    ],
    "explication": "La fonction `mysqli_connect()` est la première étape pour interagir avec une base de données. Elle retourne un objet de connexion."
  },
  {
    "id": 5030,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction est utilisée pour fermer la connexion à une base de données MySQL ?",
    "options": [
      "`mysqli_disconnect()`",
      "`mysqli_end()`",
      "`mysqli_close()`",
      "`db_close()`"
    ],
    "reponse": [
      "`mysqli_close()`"
    ],
    "explication": "Il est important de fermer la connexion avec `mysqli_close()` après avoir terminé les opérations pour libérer les ressources."
  },
  {
    "id": 5031,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction est utilisée pour exécuter une requête SQL sur la base de données ?",
    "options": [
      "`mysqli_run()`",
      "`mysqli_exec()`",
      "`mysqli_sql()`",
      "`mysqli_query()`"
    ],
    "reponse": [
      "`mysqli_query()`"
    ],
    "explication": "La fonction `mysqli_query()` prend l'objet de connexion et la chaîne de requête SQL en paramètres."
  },
  {
    "id": 5032,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction retourne le nombre de lignes affectées par une requête `INSERT`, `UPDATE`, ou `DELETE` ?",
    "options": [
      "`mysqli_num_rows()`",
      "`mysqli_affected_rows()`",
      "`mysqli_count_rows()`",
      "`mysqli_changed_rows()`"
    ],
    "reponse": [
      "`mysqli_affected_rows()`"
    ],
    "explication": "La fonction `mysqli_affected_rows()` est utilisée pour vérifier le succès d'une requête de modification de données."
  },
  {
    "id": 5033,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction retourne le nombre de lignes dans le résultat d'une requête `SELECT` ?",
    "options": [
      "`mysqli_num_rows()`",
      "`mysqli_affected_rows()`",
      "`mysqli_result_count()`",
      "`count()`"
    ],
    "reponse": [
      "`mysqli_num_rows()`"
    ],
    "explication": "Après un `SELECT`, `mysqli_num_rows()` permet de savoir combien de lignes ont été retournées."
  },
  {
    "id": 5034,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction retourne une ligne de résultat sous forme de tableau numérique (indexé par 0, 1, 2...) ?",
    "options": [
      "`mysqli_fetch_array()`",
      "`mysqli_fetch_row()`",
      "`mysqli_fetch_assoc()`",
      "`mysqli_get_row()`"
    ],
    "reponse": [
      "`mysqli_fetch_row()`"
    ],
    "explication": "La fonction `mysqli_fetch_row()` récupère une ligne de résultat et la retourne comme un tableau indexé numériquement."
  },
  {
    "id": 5035,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction retourne une ligne de résultat sous forme de tableau associatif et/ou numérique ?",
    "options": [
      "`mysqli_fetch_array()`",
      "`mysqli_fetch_row()`",
      "`mysqli_fetch_object()`",
      "`mysqli_get_array()`"
    ],
    "reponse": [
      "`mysqli_fetch_array()`"
    ],
    "explication": "La fonction `mysqli_fetch_array()` est polyvalente et peut retourner un tableau avec des clés numériques, des clés textuelles (associatives), ou les deux."
  },
  {
    "id": 5036,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction est utilisée pour obtenir le message d'erreur de la dernière opération MySQLi ?",
    "options": [
      "`mysqli_message()`",
      "`mysqli_last_error()`",
      "`mysqli_error()`",
      "`mysqli_get_error()`"
    ],
    "reponse": [
      "`mysqli_error()`"
    ],
    "explication": "La fonction `mysqli_error()` est essentielle pour le débogage des requêtes qui ne fonctionnent pas comme prévu."
  },
  {
    "id": 5037,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction compare deux chaînes  ?",
    "options": [
      "`str_compare()`",
      "`strcmp()`",
      "`string_compare()`",
      "`compare()`"
    ],
    "reponse": [
      "`strcmp()`"
    ],
    "explication": "`strcmp()` retourne < 0 si la première chaîne est plus petite, > 0 si elle est plus grande, et 0 si elles sont égales."
  },
  {
    "id": 5038,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction extrait une partie d'une chaîne ?",
    "options": [
      "`substr()`",
      "`substring()`",
      "`slice()`",
      "`extract()`"
    ],
    "reponse": [
      "`substr()`"
    ],
    "explication": "La fonction `substr()` permet d'extraire une sous-chaîne en spécifiant une position de départ et une longueur."
  },
  {
    "id": 5039,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction retourne le caractère associé à un code ASCII ?",
    "options": [
      "`ascii_to_char()`",
      "`character()`",
      "`ord()`",
      "`chr()`"
    ],
    "reponse": [
      "`chr()`"
    ],
    "explication": "La fonction `chr()` prend un entier (code ASCII) et retourne le caractère correspondant."
  },
  {
    "id": 5040,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction retourne le code ASCII d'un caractère ?",
    "options": [
      "`char_to_ascii()`",
      "`ascii()`",
      "`ord()`",
      "`chr()`"
    ],
    "reponse": [
      "`ord()`"
    ],
    "explication": "La fonction `ord()` prend un caractère et retourne son code ASCII sous forme d'entier."
  },
  {
    "id": 5041,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quels sont des opérateurs de comparaison valides en PHP ?",
    "options": [
      "`==`",
      "`<>`",
      "`>=`",
      "`=`"
    ],
    "reponse": [
      "`==`",
      "`<>`",
      "`>=`"
    ],
    "explication": "`==` (égal), `<>` (différent), et `>=` (supérieur ou égal) sont des opérateurs de comparaison. `=` est l'opérateur d'assignation."
  },
  {
    "id": 5042,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Lesquelles de ces fonctions sont liées à la manipulation de chaînes de caractères ?",
    "options": [
      "`strlen`",
      "`strpos`",
      "`count`",
      "`substr`"
    ],
    "reponse": [
      "`strlen`",
      "`strpos`",
      "`substr`"
    ],
    "explication": "`strlen`, `strpos` et `substr` opèrent sur des chaînes. `count` opère sur des tableaux."
  },
  {
    "id": 5043,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelles sont des fonctions mathématiques disponibles en PHP ?",
    "options": [
      "`abs`",
      "`sqrt`",
      "`round`",
      "`sum`"
    ],
    "reponse": [
      "`abs`",
      "`sqrt`",
      "`round`"
    ],
    "explication": "`abs`, `sqrt`, et `round` sont des fonctions mathématiques. `sum` n'est pas listée, on utiliserait `array_sum` pour les tableaux."
  },
  {
    "id": 5044,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelles sont les superglobales pour récupérer des données externes ?",
    "options": [
      "`$_GET`",
      "`$_POST`",
      "`$_SESSION`",
      "`$_FILES`"
    ],
    "reponse": [
      "`$_GET`",
      "`$_POST`"
    ],
    "explication": "`$_GET` pour les données de l'URL et `$_POST` pour les données de formulaire."
  },
  {
    "id": 5045,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelles fonctions permettent de modifier la casse (majuscules/minuscules) d'une chaîne ?",
    "options": [
      "`strtolower`",
      "`strtoupper`",
      "`trim`",
      "`str_replace`"
    ],
    "reponse": [
      "`strtolower`",
      "`strtoupper`"
    ],
    "explication": "`strtolower` et `strtoupper` sont spécifiquement conçues pour changer la casse, tandis que les autres ont des fonctions différentes."
  },
  {
    "id": 5046,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelles fonctions sont directement liées aux tableaux ?",
    "options": [
      "`count`",
      "`array`",
      "`strlen`",
      "`isset`"
    ],
    "reponse": [
      "`count`",
      "`array`"
    ],
    "explication": "`array()` est utilisé pour créer un tableau, et `count()` pour en compter les éléments."
  },
  {
    "id": 5047,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelles fonctions sont utilisées pour la gestion des dates et du temps ?",
    "options": [
      "`date`",
      "`time`",
      "`strtotime`",
      "`round`"
    ],
    "reponse": [
      "`date`",
      "`time`",
      "`strtotime`"
    ],
    "explication": "`date`, `time`, et `strtotime` sont des fonctions de base pour manipuler les dates et les timestamps. `round` est une fonction mathématique."
  },
  {
    "id": 5048,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quels sont des opérateurs arithmétiques valides ?",
    "options": [
      "`+`",
      "`-`",
      "`*`",
      "`=`"
    ],
    "reponse": [
      "`+`",
      "`-`",
      "`*`"
    ],
    "explication": "L'addition, la soustraction et la multiplication sont des opérateurs arithmétiques. `=` est l'opérateur d'assignation."
  },
  {
    "id": 5049,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelles fonctions sont essentielles pour une interaction de base avec une base de données MySQLi ?",
    "options": [
      "`mysqli_connect`",
      "`mysqli_query`",
      "`mysqli_close`",
      "`isset`"
    ],
    "reponse": [
      "`mysqli_connect`",
      "`mysqli_query`",
      "`mysqli_close`"
    ],
    "explication": "Le cycle de vie de base d'une interaction BDD est : se connecter, exécuter une requête, puis fermer la connexion."
  },
  {
    "id": 5050,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelles fonctions peuvent être utilisées pour le contrôle de script et la gestion des variables ?",
    "options": [
      "`die`",
      "`isset`",
      "`require`",
      "`strlen`"
    ],
    "reponse": [
      "`die`",
      "`isset`",
      "`require`"
    ],
    "explication": "`die` arrête le script, `isset` vérifie une variable, et `require` inclut un fichier. `strlen` est pour les chaînes."
  },
  {
    "id": 5051,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelles fonctions permettent de travailler avec les codes ASCII ?",
    "options": [
      "`chr`",
      "`ord`",
      "`ascii`",
      "`char`"
    ],
    "reponse": [
      "`chr`",
      "`ord`"
    ],
    "explication": "`chr` convertit un code en caractère, et `ord` convertit un caractère en code."
  },
  {
    "id": 5052,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelles fonctions retournent une nouvelle chaîne basée sur une chaîne d'entrée ?",
    "options": [
      "`str_replace`",
      "`strtolower`",
      "`strtoupper`",
      "`trim`"
    ],
    "reponse": [
      "`str_replace`",
      "`strtolower`",
      "`strtoupper`",
      "`trim`"
    ],
    "explication": "Toutes ces fonctions sont immuables : elles ne modifient pas la chaîne originale mais en retournent une nouvelle, modifiée."
  },
  {
    "id": 5053,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelles sont des expressions logiques valides en PHP ?",
    "options": [
      "`$a && $b`",
      "`$a || $b`",
      "`!$a`",
      "`$a . $b`"
    ],
    "reponse": [
      "`$a && $b`",
      "`$a || $b`",
      "`!$a`"
    ],
    "explication": "Les trois premières sont des opérations logiques. La dernière est une concaténation de chaînes."
  },
  {
    "id": 5054,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelles opérations de comparaison numérique sont correctes ?",
    "options": [
      "`$a < $b`",
      "`$a <= $b`",
      "`$a => $b`",
      "`$a > $b`"
    ],
    "reponse": [
      "`$a < $b`",
      "`$a <= $b`",
      "`$a > $b`"
    ],
    "explication": "Les opérateurs de comparaison valides sont `<` (inférieur), `<=` (inférieur ou égal), et `>` (supérieur). `=>` est utilisé pour les tableaux associatifs."
  },
  {
    "id": 5055,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelles fonctions sont utilisées pour les tableaux ?",
    "options": [
      "`array`",
      "`count`",
      "`rand`",
      "`substr`"
    ],
    "reponse": [
      "`array`",
      "`count`"
    ],
    "explication": "`array()` et `count()` sont les deux fonctions de base pour la manipulation de tableaux listées dans le document."
  },
  {
    "id": 5056,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction utiliser pour afficher la chaîne `'Terminé'` et arrêter le script ?\n```php\n...('Terminé');\n```",
    "options": [],
    "reponse": [
      "die"
    ],
    "explication": "La fonction `die()` est un alias de `exit()` et est souvent utilisée pour terminer un script en cas d'erreur ou à un point final logique."
  },
  {
    "id": 5057,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quel opérateur est utilisé pour assembler les chaînes `$a` et `$b` ?\n```php\n$c = $a ... $b;\n```",
    "options": [],
    "reponse": [
      "."
    ],
    "explication": "Le point (`.`) est l'opérateur de concaténation en PHP."
  },
  {
    "id": 5058,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle superglobale est utilisée pour accéder au paramètre `id` dans l'URL `page.php?id=123` ?\n```php\n$id = ...['id'];\n```",
    "options": [],
    "reponse": [
      "$_GET"
    ],
    "explication": "Les paramètres passés dans l'URL sont accessibles via le tableau superglobal `$_GET`."
  },
  {
    "id": 5059,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Comment s'appelle l'opérateur qui calcule le reste de `10` divisé par `3` ?\n```php\n$reste = 10 ... 3; // $reste vaut 1\n```",
    "options": [],
    "reponse": [
      "%"
    ],
    "explication": "L'opérateur modulo (`%`) donne le reste d'une division entière."
  },
  {
    "id": 5060,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction permet de s'assurer que la variable `$_POST['nom']` a bien été envoyée ?\n```php\nif ( ...($_POST['nom']) ) { ... }\n```",
    "options": [],
    "reponse": [
      "isset"
    ],
    "explication": "`isset()` est la fonction standard pour vérifier l'existence d'une variable ou d'une clé de tableau avant de l'utiliser."
  },
  {
    "id": 5061,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\n$x = 5;\n$y = '5';\nif ($x == $y) {\n  echo 'A';\n}\nif ($x === $y) { \n  echo 'B';\n}\n```\nQue va afficher ce code ?",
    "options": [
      "`A`",
      "`B`",
      "`AB`",
      "Rien"
    ],
    "reponse": [
      "`A`"
    ],
    "explication": "La comparaison `==` est vraie car les valeurs sont les mêmes après conversion de type. La comparaison stricte `===` est fausse car les types (entier et chaîne) sont différents."
  },
  {
    "id": 5062,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\n$ch = 'PHP: Hypertext Preprocessor';\necho strpos($ch, 'P');\n```\nQuel est le résultat ?",
    "options": [
      "`1`",
      "`false`",
      "`0`",
      "`2`"
    ],
    "reponse": [
      "`0`"
    ],
    "explication": "`strpos()` est sensible à la casse et retourne la position de la première occurrence. Comme la chaîne commence par 'P', la position est 0 (le premier caractère)."
  },
  {
    "id": 5063,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\n$dateStr = '2025-01-01';\n$ts = strtotime($dateStr);\necho date('d/m/Y', $ts);\n```\nQuelle sera la sortie ?",
    "options": [
      "`2025-01-01`",
      "`01-01-2025`",
      "`01/01/2025`",
      "Un timestamp numérique"
    ],
    "reponse": [
      "`01/01/2025`"
    ],
    "explication": "`strtotime()` convertit la date en timestamp. `date()` prend ce timestamp et le formate selon le modèle `d/m/Y` (jour/mois/année)."
  },
  {
    "id": 5064,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\n$val = (int) '10.8';\necho $val;\n```\nQuel est le résultat ?",
    "options": [
      "`10.8`",
      "`11`",
      "`10`",
      "`0`"
    ],
    "reponse": [
      "`10`"
    ],
    "explication": "Le transtypage `(int)` tronque la partie décimale, il n'arrondit pas. La valeur devient l'entier 10."
  },
  {
    "id": 5065,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\n$result = mysqli_query($conn, 'SELECT * FROM users');\necho mysqli_num_rows($result);\n```\nQue fait ce code ?",
    "options": [
      "Il affiche le nombre de colonnes dans la table `users`",
      "Il affiche le nombre de lignes retournées par la requête `SELECT`",
      "Il exécute une boucle sur les utilisateurs",
      "Il affiche une erreur"
    ],
    "reponse": [
      "Il affiche le nombre de lignes retournées par la requête `SELECT`"
    ],
    "explication": "`mysqli_query()` exécute la requête, et `mysqli_num_rows()` compte le nombre de lignes dans l'objet de résultat retourné."
  },
  {
    "id": 5066,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\n$a = true;\n$b = false;\necho ($a || $b) && !$b;\n```\nQuel sera le résultat affiché (1 pour vrai, rien pour faux) ?",
    "options": [
      "`1`",
      "Rien",
      "Une erreur",
      "`0`"
    ],
    "reponse": [
      "`1`"
    ],
    "explication": "L'expression est évaluée comme `(true || false) && !false`, ce qui devient `true && true`, et le résultat final est `true`. `echo` affiche `1` pour `true`."
  },
  {
    "id": 5067,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "Quelle est la différence entre `mysqli_fetch_row()` et `mysqli_fetch_array()` ?",
    "options": [
      "Aucune",
      "`fetch_row` retourne un tableau indexé, `fetch_array` peut retourner un tableau indexé ET/OU associatif",
      "`fetch_array` est plus rapide",
      "`fetch_row` retourne un objet, `fetch_array` un tableau"
    ],
    "reponse": [
      "`fetch_row` retourne un tableau indexé, `fetch_array` peut retourner un tableau indexé ET/OU associatif"
    ],
    "explication": "`mysqli_fetch_row()` retourne `$ligne[0]`, `$ligne[1]`, etc. `mysqli_fetch_array()` peut aussi retourner `$ligne['nom_colonne']`."
  },
  {
    "id": 5068,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\n$ch = 'école';\necho strlen($ch);\n```\nQuel est le résultat le plus probable ?",
    "options": [
      "`5`",
      "`6` ou plus",
      "`4`",
      "Une erreur"
    ],
    "reponse": [
      "`6` ou plus"
    ],
    "explication": "`strlen()` compte les octets (bytes), pas les caractères. En UTF-8, les caractères accentués comme 'é' occupent plusieurs octets, donc le résultat sera supérieur à 5."
  },
  {
    "id": 5069,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\n$prix = $_GET['prix']; // vaut '150.5'\n$prix_arrondi = round($prix);\n```\nQuelle sera la valeur de `$prix_arrondi` ?",
    "options": [
      "`150`",
      "`151`",
      "`150.5`",
      "Une erreur de type"
    ],
    "reponse": [
      "`151`"
    ],
    "explication": "PHP convertit automatiquement la chaîne `'150.5'` en nombre pour la fonction `round()`. `150.5` est arrondi à l'entier supérieur, soit 151."
  },
  {
    "id": 5070,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "Que fait la fonction `checkdate(2, 30, 2023)` ?",
    "options": [
      "Elle retourne `true` (vrai)",
      "Elle retourne `false` (faux)",
      "Elle retourne un timestamp",
      "Elle génère une erreur fatale"
    ],
    "reponse": [
      "`false` (faux)"
    ],
    "explication": "La fonction `checkdate(mois, jour, annee)` vérifie la validité d'une date. Comme il n'y a pas de 30 février, elle retourne `false`."
  },
  {
    "id": 5071,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "Complétez le code pour afficher 'Existe' si la clé `user` est présente dans le tableau `$_POST`.\n```php\nif ( ...($_POST['user']) ) {\n  echo 'Existe';\n}\n```",
    "options": [],
    "reponse": [
      "isset"
    ],
    "explication": "La fonction `isset()` est le moyen correct de vérifier si une clé existe dans un tableau (comme `$_POST` ou `$_GET`) avant de l'utiliser."
  },
  {
    "id": 5072,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "Quelle fonction est utilisée pour extraire les 3 premiers caractères de la chaîne `$ch` ?\n```php\n$ch = 'abcdef';\n$debut = ...( $ch, 0, 3 ); // $debut vaut 'abc'\n```",
    "options": [],
    "reponse": [
      "substr"
    ],
    "explication": "La fonction `substr()` extrait une sous-chaîne. Ses arguments sont la chaîne, la position de départ, et la longueur."
  },
  {
    "id": 5073,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "Complétez le code pour remplacer tous les espaces par des tirets dans la chaîne `$titre`.\n```php\n$url_slug = ...(' ', '-', $titre);\n```",
    "options": [],
    "reponse": [
      "str_replace"
    ],
    "explication": "`str_replace()` est la fonction standard pour remplacer toutes les occurrences d'une sous-chaîne par une autre."
  },
  {
    "id": 5074,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "Quelle fonction faut-il utiliser pour afficher la date de demain dans un format lisible ?\n```php\necho date('Y-m-d', ...('tomorrow'));\n```",
    "options": [],
    "reponse": [
      "strtotime"
    ],
    "explication": "`strtotime('tomorrow')` génère le timestamp de demain, qui est ensuite formaté par la fonction `date()`."
  },
  {
    "id": 5075,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "Complétez le code pour établir une connexion à la base de données `testdb` sur le serveur local avec l'utilisateur `root`.\n```php\n$conn = ...('localhost', 'root', '', 'testdb');\n```",
    "options": [],
    "reponse": [
      "mysqli_connect"
    ],
    "explication": "La fonction `mysqli_connect()` prend l'hôte, l'utilisateur, le mot de passe et le nom de la base de données comme paramètres."
  },
  {
    "id": 5076,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "avance",
    "question": "```php\n$query = \"SELECT nom FROM users WHERE id = 1\";\n$result = mysqli_query($conn, $query);\n// Quelle fonction utiliser pour obtenir la première ligne du résultat ?\n$ligne = ...($result);\n```",
    "options": [],
    "reponse": [
      "mysqli_fetch_array",
      "`mysqli_fetch_row`"
    ],
    "explication": "`mysqli_fetch_array()` (ou `mysqli_fetch_row`) est utilisée dans une boucle pour parcourir les lignes d'un résultat de requête `SELECT`."
  },
  {
    "id": 5077,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "avance",
    "question": "Complétez le code avec la fonction qui permet d'arrêter l'exécution du script et d'afficher un message d'erreur si la connexion à la base de données échoue.\n```php\n$conn = mysqli_connect('localhost', 'user', 'pass', 'db');\nif (!$conn) {\n  ...('Erreur de connexion !');\n}\n```",
    "options": [],
    "reponse": [
      "die"
    ],
    "explication": "La fonction `die()` est couramment utilisée pour gérer les erreurs critiques. Si la variable `$conn` est fausse (ce qui indique un échec de connexion), `die()` affiche le message et termine immédiatement le script."
  },
  {
    "id": 5078,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "avance",
    "question": "```php\n$str = '0';\nif ($str == 0) { echo 'A'; }\nif ($str === 0) { echo 'B'; }\n```\nQue va afficher ce code ?",
    "options": [
      "`A`",
      "`B`",
      "`AB`",
      "Rien"
    ],
    "reponse": [
      "`A`"
    ],
    "explication": "L’opérateur == compare uniquement les valeurs, tandis que l’opérateur === compare à la fois les valeurs et les types."
  },
  {
    "id": 5079,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "avance",
    "question": "Écrivez une seule ligne de code qui récupère la valeur de `id` depuis l'URL, la convertit en entier, et la stocke dans la variable `$id`.",
    "options": [],
    "reponse": [
      "$id = (int)$_GET['id'];"
    ],
    "explication": "Cela combine la récupération depuis la superglobale `$_GET` avec un transtypage (`(int)`) pour assurer que la valeur est bien un nombre entier."
  },
  {
    "id": 5080,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "avance",
    "question": "```php\n$result = mysqli_query($conn, \"DELETE FROM users WHERE status = 'inactive'\");\n```\nQuelle fonction utiliser pour savoir combien d'utilisateurs ont été supprimés ?",
    "options": [
      "`mysqli_num_rows($result)`",
      "`count($result)`",
      "`mysqli_affected_rows($conn)`",
      "Impossible de le savoir"
    ],
    "reponse": [
      "`mysqli_affected_rows($conn)`"
    ],
    "explication": "Après une requête `DELETE`, `UPDATE`, ou `INSERT`, `mysqli_affected_rows()` retourne le nombre de lignes qui ont été modifiées. `mysqli_num_rows()` est pour les `SELECT`."
  },
  {
    "id": 5081,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\n$valeur = 'ABC';\nif (strcmp($valeur, 'abc') == 0) {\n  echo 'Identique';\n}\n```\nQue va afficher ce code ?",
    "options": [
      "`Identique`",
      "Rien",
      "Une erreur",
      "`0`"
    ],
    "reponse": [
      "Rien"
    ],
    "explication": "La fonction `strcmp()` est sensible à la casse. 'ABC' et 'abc' sont considérées comme différentes, donc la fonction ne retourne pas 0."
  },
  {
    "id": 5082,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "Quelle est la manière correcte de récupérer une valeur numérique depuis `$_GET['id']` pour l'utiliser dans un calcul ?",
    "options": [
      "`$id = $_GET['id'];`",
      "`$id = (int)$_GET['id'];`",
      "`$id = str_to_int($_GET['id']);`",
      "`$id = $_GET['id'] + 0;`"
    ],
    "reponse": [
      "`$id = (int)$_GET['id'];`"
    ],
    "explication": "Les données provenant de `$_GET` sont toujours des chaînes. Il est essentiel de les convertir explicitement en entier avec `(int)` pour garantir des calculs corrects et la sécurité."
  },
  {
    "id": 5083,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\n$result = mysqli_query($conn, \"INSERT INTO logs (action) VALUES ('click')\");\n```\nQue retourne `$result` en cas de succès pour une requête `INSERT` ?",
    "options": [
      "Le nombre de lignes insérées",
      "L'ID de la nouvelle ligne",
      "Un objet de résultat",
      "Le booléen `true`"
    ],
    "reponse": [
      "Le booléen `true`"
    ],
    "explication": "Pour les requêtes `INSERT`, `UPDATE`, `DELETE`, `mysqli_query()` retourne `true` en cas de succès et `false` en cas d'échec."
  },
  {
    "id": 5084,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\necho date('Y-m-d', 0);\n```\nQuelle date sera affichée (en supposant un fuseau horaire UTC) ?",
    "options": [
      "La date actuelle",
      "Une date en 1970",
      "Une erreur",
      "Rien"
    ],
    "reponse": [
      "Une date en 1970"
    ],
    "explication": "Le timestamp `0` correspond au début de l'époque Unix, soit le 1er Janvier 1970. La fonction `date()` formatera ce moment précis."
  },
  {
    "id": 5085,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\n$nom = $_POST['nom']; // Contient '  Ali  '\n$nom_propre = strtoupper(trim($nom));\n```\nQuelles opérations sont effectuées sur la variable `$nom` ?",
    "options": [
      "Conversion en majuscules",
      "Suppression des espaces au début et à la fin",
      "Vérification de son existence",
      "Remplacement des espaces par des tirets"
    ],
    "reponse": [
      "Conversion en majuscules",
      "Suppression des espaces au début et à la fin"
    ],
    "explication": "Le code exécute deux fonctions en cascade : `trim()` pour nettoyer la chaîne, puis `strtoupper()` pour la mettre en majuscules."
  },
  {
    "id": 5086,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "avance",
    "question": "```php\n$result = mysqli_query($conn, 'SELECT nom FROM users');\nwhile ($ligne = mysqli_fetch_row($result)) {\n  echo $ligne[0];\n}\n```\nQue fait cette boucle ?",
    "options": [
      "Elle affiche le nom de chaque utilisateur, un par un",
      "Elle n'affiche que le nom du premier utilisateur",
      "Elle affiche le nombre total d'utilisateurs",
      "Elle génère une erreur"
    ],
    "reponse": [
      "Elle affiche le nom de chaque utilisateur, un par un"
    ],
    "explication": "C'est la boucle standard pour parcourir un jeu de résultats MySQL. À chaque itération, `mysqli_fetch_row()` récupère la ligne suivante jusqu'à ce qu'il n'y en ait plus."
  },
  {
    "id": 5087,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "avance",
    "question": "Quel est le rôle principal de la requête SQL dans le code suivant ?\n```php\n$id = $_GET['id'];\n$query = \"SELECT * FROM produits WHERE id = $id\";\n$result = mysqli_query($conn, $query);\n```",
    "options": [
      "Insérer un nouveau produit dans la base de données",
      "Mettre à jour les informations d’un produit",
      "Supprimer un produit de la base",
      "Récupérer les informations d’un produit spécifique"
    ],
    "reponse": [
      "Récupérer les informations d’un produit spécifique"
    ],
    "explication": "La requête SQL utilise `SELECT * FROM produits WHERE id = $id` pour rechercher et extraire les données du produit dont l’identifiant correspond à la valeur donnée."
  },
  {
    "id": 5088,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "avance",
    "question": "```php\n$val = 0;\nif (isset($val)) { echo 'Defini'; }\n```\nQue va afficher ce code ?",
    "options": [
      "`Defini`",
      "`Vide`",
      "`DefiniVide`",
      "Rien"
    ],
    "reponse": [
      "`Defini`"
    ],
    "explication": "La fonction `isset($val)` retourne vrai car la variable `$val` existe et est définie, même si sa valeur est `0`. Le code affichera donc `Defini`."
  },
  {
    "id": 5089,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "avance",
    "question": "Écrivez une seule ligne de code en PHP qui permet d'inclure le fichier `header.php` et qui provoque une erreur si ce fichier est introuvable.",
    "options": [],
    "reponse": [
      "`require 'header.php';`"
    ],
    "explication": "L'instruction `require` inclut le fichier spécifié. Si le fichier `header.php` est manquant, PHP génère une erreur fatale et le script s'arrête."
  },
  {
    "id": 5090,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "avance",
    "question": "```php\n$ch = 'abc';\nif (strpos($ch, 'a')) {\n  echo 'Trouvé';\n}\n```\nQue va afficher ce code ?",
    "options": [
      "`Trouvé`",
      "Rien",
      "Une erreur",
      "`false`"
    ],
    "reponse": [
      "Rien"
    ],
    "explication": "Piège classique ! `strpos()` retourne `0` car 'a' est au début. En PHP, `0` est évalué comme `false` dans une condition `if`. La bonne pratique est de vérifier avec `strpos(...) !== false`."
  },
  {
    "id": 5091,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "avance",
    "question": "Quelle fonction doit être utilisée avant une boucle `mysqli_fetch_array` pour vérifier s'il y a au moins une ligne à lire ?",
    "options": [],
    "reponse": [
      "`mysqli_num_rows()`"
    ],
    "explication": "Il est courant de vérifier avec `if (mysqli_num_rows($result) > 0)` avant de tenter de parcourir les résultats pour éviter d'exécuter du code inutilement."
  },
  {
    "id": 5092,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "avance",
    "question": "```php\n$t = array('a', 'b', 'c');\necho count($t);\n```\nQue va afficher ce code ?",
    "options": [
      "`2`",
      "`3`",
      "`4`",
      "`Erreur`"
    ],
    "reponse": [
      "`3`"
    ],
    "explication": "La fonction `count()` retourne le nombre d’éléments présents dans un tableau. Ici, le tableau `$t` contient trois éléments, donc `count($t)` affiche `3`."
  },
  {
    "id": 5093,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "avance",
    "question": "Écrivez la syntaxe PHP pour transtyper la variable `$valeur` en un booléen.",
    "options": [],
    "reponse": [
      "`(bool)$valeur`"
    ],
    "explication": "Le transtypage `(bool)` convertit une valeur en sa représentation booléenne (`true` ou `false`) selon les règles de PHP (`0`, `''`, `null` deviennent `false`)."
  },
  {
    "id": 5094,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "avance",
    "question": "```php\n$query = \"UPDATE stats SET vues = vues + 1 WHERE id = 1\";\nmysqli_query($conn, $query);\nif (mysqli_affected_rows($conn) == 1) {\n  echo 'Succès';\n}\n```\nÀ quoi sert la condition `if` ?",
    "options": [
      "À vérifier si la requête a été exécutée sans erreur de syntaxe",
      "À vérifier si la table `stats` existe",
      "À vérifier si exactement une ligne a bien été modifiée dans la base de données",
      "À vérifier si l'ID 1 existe"
    ],
    "reponse": [
      "À vérifier si exactement une ligne a bien été modifiée dans la base de données"
    ],
    "explication": "`mysqli_affected_rows()` est le moyen le plus fiable de confirmer qu'une requête `UPDATE` ou `DELETE` a bien eu l'effet escompté sur les données."
  },
  {
    "id": 5095,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "avance",
    "question": "Si l’URL est `page.php?nom=Ali&age=20`, que va afficher le code suivant ?\n```php\necho $_GET['nom'] . \" a \" . $_GET['age'] . \" ans\";\n```",
    "options": [
      "`Ali a 20 ans`",
      "`nom a age ans`",
      "`Ali20`",
      "`Erreur`"
    ],
    "reponse": [
      "`Ali a 20 ans`"
    ],
    "explication": "La superglobale `$_GET` permet de récupérer les valeurs passées dans l’URL. L’opérateur `.` sert à concaténer des chaînes de caractères en PHP. Ici, `$_GET['nom']` vaut `Ali` et `$_GET['age']` vaut `20`, donc le code affiche `Ali a 20 ans`."
  },
  {
    "id": 5096,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quel transtypage est utilisé pour convertir une valeur en un nombre à virgule flottante ?",
    "options": [
      "`(int)`",
      "`(string)`",
      "`(float)`",
      "`(bool)`"
    ],
    "reponse": [
      "`(float)`"
    ],
    "explication": "Le transtypage `(float)` force la conversion d'une variable en un nombre à virgule flottante (un réel)."
  },
  {
    "id": 5097,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quel transtypage est utilisé pour convertir une valeur en une chaîne de caractères ?",
    "options": [
      "`(int)`",
      "`(string)`",
      "`(float)`",
      "`(array)`"
    ],
    "reponse": [
      "`(string)`"
    ],
    "explication": "Le transtypage `(string)` force la conversion d'une variable en une chaîne de caractères."
  },
  {
    "id": 5098,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quel transtypage est utilisé pour convertir une valeur en un booléen (`true` ou `false`) ?",
    "options": [
      "`(int)`",
      "`(string)`",
      "`(float)`",
      "`(bool)`"
    ],
    "reponse": [
      "`(bool)`"
    ],
    "explication": "Le transtypage `(bool)` force la conversion d'une variable en un booléen."
  },
  {
    "id": 5099,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Pour comparer si `$a` est strictement supérieur à `$b`, quel opérateur utilise-t-on ?",
    "options": [
      "`>`",
      "`>=`",
      "`<>`",
      "`==`"
    ],
    "reponse": [
      "`>`"
    ],
    "explication": "L'opérateur `>` vérifie si la valeur de gauche est strictement supérieure à celle de droite."
  },
  {
    "id": 5100,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction est utilisée pour trouver la position de la première occurrence d'une sous-chaîne ?",
    "options": [
      "`strlen()`",
      "`strpos()`",
      "`substr()`",
      "`str_replace()`"
    ],
    "reponse": [
      "`strpos()`"
    ],
    "explication": "`strpos()` recherche une sous-chaîne et retourne son index de départ (ou `false` si non trouvée)."
  },
  {
    "id": 5101,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "```php\n$valeur = 10 % 4;\n```\nQuelle sera la valeur de `$valeur` ?",
    "options": [
      "`2.5`",
      "`2`",
      "`3`",
      "`40`"
    ],
    "reponse": [
      "`2`"
    ],
    "explication": "L'opérateur modulo (`%`) retourne le reste de la division entière. 10 divisé par 4 égale 2, avec un reste de 2."
  },
  {
    "id": 5102,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "```php\n$nom = 'Amine';\necho 'Bonjour ' . $nom;\n```\nQuel est l'effet du point (`.`) ?",
    "options": [
      "Il ajoute un point final",
      "Il assemble les deux chaînes",
      "C'est une erreur de syntaxe",
      "Il compare les deux chaînes"
    ],
    "reponse": [
      "Il assemble les deux chaînes"
    ],
    "explication": "Le point (`.`) est l'opérateur de concaténation en PHP, utilisé pour joindre des chaînes de caractères."
  },
  {
    "id": 5103,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quels opérateurs sont des opérateurs logiques ?",
    "options": [
      "`&&`",
      "`||`",
      "`!`",
      "`%`"
    ],
    "reponse": [
      "`&&`",
      "`||`",
      "`!`"
    ],
    "explication": "`&&` (ET), `||` (OU), et `!` (NON) sont des opérateurs logiques. `%` est l'opérateur arithmétique modulo."
  },
  {
    "id": 5104,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Si `isset($var)` retourne `false`, que cela signifie-t-il ?",
    "options": [
      "La variable `$var` est égale à `false`",
      "La variable `$var` est égale à `0`",
      "La variable `$var` n'a pas été déclarée ou sa valeur est `NULL`",
      "La variable `$var` est une chaîne vide"
    ],
    "reponse": [
      "La variable `$var` n'a pas été déclarée ou sa valeur est `NULL`"
    ],
    "explication": "`isset()` est une fonction qui vérifie spécifiquement si une variable existe et a une valeur autre que `NULL`."
  },
  {
    "id": 5105,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction faut-il utiliser pour obtenir le caractère `A` à partir de son code ASCII `65` ?\n```php\necho ... (65);\n```",
    "options": [],
    "reponse": [
      "chr"
    ],
    "explication": "La fonction `chr()` prend un entier (code ASCII) et retourne le caractère correspondant."
  },
  {
    "id": 5106,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction faut-il utiliser pour obtenir le code ASCII du caractère `'B'` ?\n```php\necho ...( 'B' );\n```",
    "options": [],
    "reponse": [
      "ord"
    ],
    "explication": "La fonction `ord()` prend un caractère et retourne sa valeur ASCII sous forme d'entier."
  },
  {
    "id": 5107,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "```php\n$tableau = array('a', 'b', 'c');\necho count($tableau);\n```\nQuel sera le résultat ?",
    "options": [
      "`2`",
      "`3`",
      "`'abc'`",
      "Une erreur"
    ],
    "reponse": [
      "`3`"
    ],
    "explication": "La fonction `count()` retourne le nombre d'éléments présents dans un tableau."
  },
  {
    "id": 5108,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Lesquelles de ces fonctions sont liées à la base de données MySQLi ?",
    "options": [
      "`mysqli_connect`",
      "`mysqli_query`",
      "`strlen`",
      "`mysqli_close`"
    ],
    "reponse": [
      "`mysqli_connect`",
      "`mysqli_query`",
      "`mysqli_close`"
    ],
    "explication": "Les fonctions préfixées par `mysqli_` sont utilisées pour interagir avec une base de données MySQL. `strlen` est pour les chaînes."
  },
  {
    "id": 5109,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction est l'opposé de `strtolower()` ?",
    "options": [],
    "reponse": [
      "`strtoupper()`"
    ],
    "explication": "Tandis que `strtolower()` met en minuscules, `strtoupper()` met tous les caractères d'une chaîne en majuscules."
  },
  {
    "id": 5110,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quel est le but de la fonction `mysqli_error()` ?",
    "options": [
      "Générer une erreur volontairement",
      "Se connecter à la base de données",
      "Retourner le texte de la dernière erreur MySQL survenue",
      "Fermer la connexion en cas d'erreur"
    ],
    "reponse": [
      "Retourner le texte de la dernière erreur MySQL survenue"
    ],
    "explication": "La fonction `mysqli_error()` est un outil de débogage essentiel pour comprendre pourquoi une requête a échoué."
  },
  {
    "id": 5111,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quel opérateur est utilisé pour affecter la valeur `10` à la variable `$age` ?\n```php\n$age ... 10;\n```",
    "options": [],
    "reponse": [
      "="
    ],
    "explication": "L'opérateur d'assignation `=` est utilisé pour donner une valeur à une variable. Il ne faut pas le confondre avec `==` qui est un opérateur de comparaison."
  },
  {
    "id": 5112,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "```php\necho 10 * 5;\n```\nQuel est le résultat ?",
    "options": [
      "`105`",
      "`15`",
      "`50`",
      "Une erreur"
    ],
    "reponse": [
      "`50`"
    ],
    "explication": "L'opérateur `*` effectue une multiplication arithmétique."
  },
  {
    "id": 5113,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Comment s'appelle le processus de conversion d'une variable d'un type à un autre, par exemple avec `(int)` ?",
    "options": [
      "La concaténation",
      "L'assignation",
      "Le transtypage (casting)",
      "L'itération"
    ],
    "reponse": [
      "Le transtypage (casting)"
    ],
    "explication": "Le transtypage (ou 'casting') force une variable à être traitée comme un type différent, par exemple `(int)` pour un entier ou `(string)` pour une chaîne."
  },
  {
    "id": 5114,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quelle fonction est la plus appropriée pour récupérer le nom de l'utilisateur depuis l'URL `index.php?user=ali` ?",
    "options": [
      "`$_POST['user']`",
      "`$_GET['user']`",
      "`$_REQUEST['user']`",
      "`$URL['user']`"
    ],
    "reponse": [
      "`$_GET['user']`"
    ],
    "explication": "Les paramètres passés dans l'URL (la 'query string') sont toujours accessibles via la superglobale `$_GET`."
  },
  {
    "id": 5115,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "```php\n$a = true;\n$b = false;\n$result = $a && $b;\n```\nQuelle est la valeur de la variable `$result` après l’exécution de ce code ?",
    "options": [
      "`true`",
      "`false`",
      "`1`",
      "`0`"
    ],
    "reponse": [
      "`false`"
    ],
    "explication": "L’opérateur logique `&&` retourne `true` uniquement si les deux conditions sont vraies. Comme `$a` est `true` et `$b` est `false`, le résultat est `false`."
  },
  {
    "id": 5116,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\n$ch = '10 pommes';\n$nb = (int)$ch;\necho $nb + 5;\n```\nQuel est le résultat ?",
    "options": [
      "`15`",
      "`10`",
      "`NaN`",
      "Une erreur"
    ],
    "reponse": [
      "`15`"
    ],
    "explication": "Lors du transtypage en entier, PHP lit les chiffres au début de la chaîne et ignore le reste. `$ch` devient donc l'entier `10`. `10 + 5` donne `15`."
  },
  {
    "id": 5117,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\n$result = mysqli_query($conn, \"SELECT nom, prenom FROM users\");\n$ligne = mysqli_fetch_array($result);\n```\nComment accéder à la valeur de la colonne `nom` ?",
    "options": [
      "`$ligne[0]`",
      "`$ligne['nom']`",
      "Les deux sont possibles",
      "Aucun des deux"
    ],
    "reponse": [
      "Les deux sont possibles"
    ],
    "explication": "Par défaut, `mysqli_fetch_array()` retourne un tableau qui est à la fois indexé numériquement (`0`, `1`, ...) et associativement (par nom de colonne)."
  },
  {
    "id": 5118,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\n$result = mysqli_query($conn, \"SELECT nom, prenom FROM users\");\n$ligne = mysqli_fetch_row($result);\n```\nComment accéder à la valeur de la colonne `nom` ?",
    "options": [
      "`$ligne[0]`",
      "`$ligne['nom']`",
      "Les deux sont possibles",
      "Aucun des deux"
    ],
    "reponse": [
      "`$ligne[0]`"
    ],
    "explication": "`mysqli_fetch_row()` retourne exclusivement un tableau indexé numériquement. La première colonne (`nom`) est donc à l'index `0`."
  },
  {
    "id": 5119,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "Que se passe-t-il si l’instruction suivante est exécutée et que le fichier `header.php` n’existe pas ?\n```php\nrequire 'header.php';\n```",
    "options": [
      "PHP ignore l’instruction et continue",
      "PHP affiche seulement un avertissement (warning)",
      "PHP génère une erreur fatale et arrête l’exécution du script",
      "Rien ne se passe"
    ],
    "reponse": [
      "PHP génère une erreur fatale et arrête l’exécution du script"
    ],
    "explication": "L’instruction `require` inclut un fichier PHP obligatoire. Si le fichier n’existe pas, PHP génère une erreur fatale (`Fatal error`) et le script s’arrête."
  },
  {
    "id": 5120,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\n$query = \"UPDATE users SET active = 0 WHERE id = 5\";\nmysqli_query($conn, $query);\n```\nQuelles fonctions sont utiles pour vérifier si la mise à jour a réussi ?",
    "options": [
      "`mysqli_affected_rows($conn)`",
      "`mysqli_error($conn)`",
      "`mysqli_num_rows($result)`",
      "`isset($query)`"
    ],
    "reponse": [
      "`mysqli_affected_rows($conn)`",
      "`mysqli_error($conn)`"
    ],
    "explication": "`mysqli_affected_rows()` permet de vérifier si au moins une ligne a été modifiée. `mysqli_error()` permet de voir s'il y a eu une erreur SQL."
  },
  {
    "id": 5121,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "Quel sera le résultat affiché par ce code ?\n```php\n<?php\n$ch1 = \"Bonjour\";\n$ch2 = \"bonjour\";\n\n$result = strcmp($ch1, $ch2);\necho $result;\n?>\n```",
    "options": [
      "0",
      "Un nombre positif",
      "Un nombre négatif",
      "Une erreur de syntaxe"
    ],
    "reponse": [
      "Un nombre négatif"
    ],
    "explication": "La fonction `strcmp()` compare deux chaînes en tenant compte de la casse. Ici, la majuscule 'B' de `$ch1` a un code ASCII inférieur à la minuscule 'b' de `$ch2`, donc `strcmp()` retourne un nombre négatif."
  },
  {
    "id": 5125,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "Quel sera le résultat affiché par ce code PHP ?\n```php\n$result = (true || false) && (!false && true) || false;\n\nif ($result) {\n    echo \"Vrai\";\n} else {\n    echo \"Faux\";\n}\n```",
    "options": [
      "`Vrai`",
      "`Faux`",
      "`1`",
      "`0`"
    ],
    "reponse": [
      "`Vrai`"
    ],
    "explication": "`(true || false)` vaut `true`. Ensuite, `(!false && true)` vaut `true`. Donc `true && true` vaut `true`. Enfin, `true || false` reste `true`. La condition `if ($result)` est donc vraie, et le code affiche `Vrai`."
  },
  {
    "id": 5123,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\n$t = array('x' => 10, 'y' => 20);\necho count($t);\n```\nQuel est le résultat ?",
    "options": [
      "`1`",
      "`2`",
      "`0`",
      "Une erreur"
    ],
    "reponse": [
      "`2`"
    ],
    "explication": "La fonction `count()` fonctionne de la même manière pour les tableaux associatifs (clés textuelles) et les tableaux indexés (clés numériques)."
  },
  {
    "id": 5124,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "Quelle est la meilleure façon de gérer une connexion à la base de données qui pourrait échouer ?",
    "options": [
      "Ignorer l'erreur",
      "```php\n$conn = mysqli_connect(...) or die('Erreur de connexion');\n```",
      "```php\n$conn = mysqli_connect(...);\necho 'Connecté';\n```",
      "Recharger la page"
    ],
    "reponse": [
      "```php\n$conn = mysqli_connect(...) or die('Erreur de connexion');\n```"
    ],
    "explication": "L'idiome `... or die(...)` est une manière concise de tenter une opération et d'arrêter le script avec un message d'erreur si elle échoue. C'est crucial pour la connexion à la BDD."
  },
  {
    "id": 5125,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "Quelle sera la valeur retournée par cette fonction ?\n```php\ncheckdate(2, 31, 2023);\n```",
    "options": [],
    "reponse": [
      "false"
    ],
    "explication": "`checkdate(mois, jour, année)` vérifie la validité d'une date.  le 31 février n'existe pas. La fonction retourne donc `false`."
  },
  {
    "id": 5126,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "avance",
    "question": "Quel sera le résultat affiché par ce code PHP ?\n```php\n$a = (10 + 6) * 2 - 8 / 4;\necho $a;\n```",
    "options": [
      "`28`",
      "`30`",
      "`32`",
      "`34`"
    ],
    "reponse": [
      "`30`"
    ],
    "explication": "Les parenthèses sont évaluées en premier : `(10 + 6) = 16`. Ensuite `16 * 2 = 32`. Puis la division `8 / 4 = 2`. Enfin `32 - 2 = 30`. Le code affiche donc `30`."
  },
  {
    "id": 5127,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "avance",
    "question": "```php\n$ch = 'info';\n$ch[0] = 'I';\necho $ch;\n```\nQue va afficher ce code ?",
    "options": [
      "`info`",
      "`Info`",
      "Une erreur",
      "`I`"
    ],
    "reponse": [
      "`Info`"
    ],
    "explication": "En PHP, les chaînes de caractères peuvent être traitées comme des tableaux de caractères. On peut donc accéder et modifier un caractère par son index."
  },
  {
    "id": 5128,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "avance",
    "question": "Quel sera le comportement de ce code PHP si la requête contient une erreur de syntaxe SQL ?\n```php\n$conn = mysqli_connect(\"localhost\", \"root\", \"\", \"test\");\n$query = \"INSER INTO users (nom) VALUES ('Alice')\"; \n$result = mysqli_query($conn, $query);\n\nif (!$result) {\n    echo mysqli_error($conn);\n}\n```",
    "options": [
      "Le script affiche une erreur SQL générée par MySQL",
      "Le script affiche 'false'",
      "Le script ne fait rien",
      "Le script affiche 'true'"
    ],
    "reponse": [
      "Le script affiche une erreur SQL générée par MySQL"
    ],
    "explication": "La requête contient une faute (`INSER` au lieu de `INSERT`). `mysqli_query()` retourne donc `false`. Le `if (!$result)` est exécuté et `mysqli_error($conn)` affiche le message d'erreur SQL produit par le serveur MySQL."
  },
  {
    "id": 5129,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "avance",
    "question": "Considérons le tableau associatif suivant :\n```php\n$personne = array(\n    \"nom\" => \"Alice\",\n    \"age\" => 25,\n    \"ville\" => \"Paris\"\n);\n```\nQuelles instructions afficheront `Alice` ?",
    "options": [
      "`echo $personne['nom'];`",
      "`echo $personne[0];`",
      "`echo $personne[\"nom\"];`",
      "`echo $personne[nom];`"
    ],
    "reponse": [
      "`echo $personne['nom'];`",
      "`echo $personne[\"nom\"];`"
    ],
    "explication": "Dans un tableau associatif PHP déclaré avec `array()`, la clé `nom` doit être utilisée sous forme de chaîne (`'nom'` ou `\"nom\"`). L’accès par indice numérique (`0`) n’est pas valide ici, et `nom` sans guillemets provoque un avertissement."
  },
  {
    "id": 5130,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "avance",
    "question": "Complétez le code pour afficher le nombre d’éléments du tableau `$t`.\n```php\n$t = array('a', 'b', 'c');\necho ...( $t );\n```",
    "options": [],
    "reponse": [
      "count"
    ],
    "explication": "La fonction `count()` permet de retourner le nombre d’éléments dans un tableau. Ici, elle renvoie `3` car le tableau contient trois valeurs."
  },
  {
    "id": 5131,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quel sera le résultat affiché par ce code PHP ?\n```php\n$val = \"12.5\";\necho (float)$val;\n```",
    "options": [
      "`12`",
      "`12.5`",
      "`\"12.5\"`",
      "`Erreur`"
    ],
    "reponse": [
      "`12.5`"
    ],
    "explication": "Le transtypage `(float)` convertit la chaîne numérique `\"12.5\"` en nombre réel. Le code affiche donc `12.5`."
  },
  {
    "id": 5132,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quel sera le résultat affiché par ce code PHP ?\n```php\n$val = 1234;\n$str = (string)$val;\necho $str[0];\n```",
    "options": [
      "`1`",
      "`1234`",
      "`$str`",
      "`Erreur`"
    ],
    "reponse": [
      "`1`"
    ],
    "explication": "Le transtypage `(string)` convertit la valeur entière `1234` en chaîne de caractères `\"1234\"`. L’expression `$str[0]` renvoie le premier caractère de la chaîne, soit `1`."
  },
  {
    "id": 5133,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "Quel sera le résultat affiché par ce code PHP ?\n```php\n$val = \"\";\nif ((bool)$val) {\n    echo \"true\";\n} else {\n    echo \"false\";\n}\n```",
    "options": [
      "`true`",
      "`false`",
      "`\"\"`",
      "`Erreur`"
    ],
    "reponse": [
      "`false`"
    ],
    "explication": "En PHP, une chaîne vide `\"\"` convertie en booléen donne `false`. La condition `if` n’est donc pas satisfaite et le code exécute le bloc `else`, affichant `false`."
  },
  {
    "id": 5134,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "```php\n$a = 7;\n$b = 10;\n$result = $a > $b;\n```\nQuelle est la valeur de `$result` après l’exécution de ce code ?",
    "options": [
      "`true`",
      "`false`",
      "`7`",
      "`10`"
    ],
    "reponse": [
      "`false`"
    ],
    "explication": "L’opérateur `>` retourne `true` uniquement si `$a` est strictement supérieur à `$b`. Comme `7` n’est pas supérieur à `10`, `$result` vaut `false`."
  },
  {
    "id": 5135,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "```php\n$texte = \"Bonjour le monde\";\n$pos = strpos($texte, \"monde\");\necho $pos;\n```\nQue va afficher ce code ?",
    "options": [
      "`0`",
      "`7`",
      "`Bonjour`",
      "`false`"
    ],
    "reponse": [
      "`8`"
    ],
    "explication": "La fonction `strpos()` retourne la position de la première occurrence de la sous-chaîne recherchée. Dans \"Bonjour le monde\", la sous-chaîne \"monde\" commence à l’index 8 (les positions commencent à 0)."
  },
  {
    "id": 5136,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "```php\n$valeur = 7 % 10;\n```\nQuelle sera la valeur de `$valeur` ?",
    "options": [
      "`0`",
      "`7`",
      "`3`",
      "`10`"
    ],
    "reponse": [
      "`7`"
    ],
    "explication": "L'opérateur modulo (`%`) retourne le reste de la division entière. Comme 7 est plus petit que 10, la division donne 0 reste 7, donc le résultat est `7`."
  },
  {
    "id": 5137,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "debutant",
    "question": "```php\n$prenom = 'Ali';\n$nom = 'Ben Salah';\necho 'Bonjour ' . $prenom . ' ' . $nom;\n```\nQue va afficher ce code ?",
    "options": [
      "`Bonjour Ali Ben Salah`",
      "`Bonjour prenom nom`",
      "`Ali Ben Salah`",
      "`Erreur de syntaxe`"
    ],
    "reponse": [
      "`Bonjour Ali Ben Salah`"
    ],
    "explication": "L’opérateur `.` en PHP permet de concaténer des chaînes. Ici, `'Bonjour '`, `$prenom` et `$nom` sont assemblés pour afficher : `Bonjour Ali Ben Salah`."
  },
  {
    "id": 5138,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\n$a = true;\n$b = false;\n$c = true;\n$result = !$a || $b && $c;\n```\nQuelle est la valeur de la variable `$result` après l’exécution de ce code ?",
    "options": [
      "`true`",
      "`false`",
      "`1`",
      "`0`"
    ],
    "reponse": [
      "`false`"
    ],
    "explication": "L’opérateur `!` a la plus haute priorité, suivi de `&&`, puis de `||`. L’expression est donc évaluée comme `(!$a) || ($b && $c)`. Ici, `!$a` vaut `false`, et `$b && $c` vaut `false`, donc `$result` est `false`."
  },
  {
    "id": 5139,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\nif (!isset($_GET['id'])) {\n    die('ID manquant');\n}\necho \"ID reçu : \" . $_GET['id'];\n```\nQue se passe-t-il si l’URL est simplement `page.php` sans paramètre `id` ?",
    "options": [
      "Le script affiche : `ID reçu :`",
      "Le script affiche : `ID manquant` puis s'arrête",
      "Le script génère une erreur de syntaxe",
      "Le script continue sans rien afficher"
    ],
    "reponse": [
      "Le script affiche : `ID manquant` puis s'arrête"
    ],
    "explication": "L’instruction `isset($_GET['id'])` retourne `false` si le paramètre `id` est absent. Comme la condition est vraie, `die('ID manquant')` est exécuté : le message s’affiche et le script s’arrête immédiatement."
  },
  {
    "id": 5140,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "Quel caractère sera affiché par ce code ?\n```php\n$lettre = 'A';\n$code = ord($lettre);\necho chr($code + 3);\n```",
    "options": [],
    "reponse": [
      "`D`"
    ],
    "explication": "`ord('A')` retourne 65 (le code ASCII de 'A'). On ajoute 3 → 68, et `chr(68)` correspond au caractère 'D'."
  },
  {
    "id": 5141,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\necho abs(-15);\n```\nQuel sera le résultat affiché ?",
    "options": ["-15", "15", "0", "Erreur"],
    "reponse": ["15"],
    "explication": "La fonction `abs()` retourne la valeur absolue d’un nombre. Ici, `-15` devient `15`."
  },
  {
    "id": 5142,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "```php\necho sqrt(81);\n```\nQue va afficher ce code ?",
    "options": ["8", "9", "81", "Erreur"],
    "reponse": ["9"],
    "explication": "`sqrt(81)` calcule la racine carrée de 81, qui vaut 9."
  },
  {
    "id": 5143,
    "type": "choix_multiple",
    "theme": "PHP",
    "niveau": "avance",
    "question": "Quelles expressions retournent la valeur `true` ?",
    "options": [
      "`3 < 5 && 2 == 2`",
      "`10 <= 7 || 4 > 2`",
      "`!false`",
      "`7 % 2 == 0`"
    ],
    "reponse": [
      "`3 < 5 && 2 == 2`",
      "`10 <= 7 || 4 > 2`",
      "`!false`"
    ],
    "explication": "`3 < 5 && 2 == 2` est vrai, `10 <= 7` est faux mais `4 > 2` est vrai donc l’OR est vrai, et `!false` vaut `true`. `7 % 2 == 0` est faux car 7 % 2 = 1."
  },
  {
    "id": 5144,
    "type": "zone_saisie",
    "theme": "PHP",
    "niveau": "intermediaire",
    "question": "Écrivez une seule ligne de code qui retourne la longueur de la chaîne `'Informatique'`.",
    "options": [],
    "reponse": ["strlen('Informatique');"],
    "explication": "La fonction `strlen()` retourne le nombre de caractères d’une chaîne. Ici, `'Informatique'` contient 12 caractères."
  },
  {
    "id": 5145,
    "type": "choix_simple",
    "theme": "PHP",
    "niveau": "avance",
    "question": "```php\n$texte = \"Bonjour\";\necho strtoupper($texte);\n```\nQue va afficher ce code ?",
    "options": ["bonjour", "BONJOUR", "Bonjour", "Erreur"],
    "reponse": ["BONJOUR"],
    "explication": "La fonction `strtoupper()` convertit tous les caractères d’une chaîne en majuscules."
  } 
]