[
  {
    "id": 3001,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quel sélecteur cible TOUS les éléments d'une page HTML ?",
    "options": [
      "`<all>`",
      "`.`",
      "`*`",
      "`#`"
    ],
    "reponse": [
      "`*`"
    ],
    "explication": "Le sélecteur universel `*` est utilisé pour sélectionner chaque élément sur la page, sans exception."
  },
  {
    "id": 3002,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Comment cible-t-on un élément unique grâce à son attribut `id='titre'` ?",
    "options": [
      "`.titre`",
      "`titre`",
      "`*titre`",
      "`#titre`"
    ],
    "reponse": [
      "`#titre`"
    ],
    "explication": "En CSS, le préfixe dièse (`#`) est utilisé pour sélectionner un élément par son `id` unique."
  },
  {
    "id": 3003,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Comment cible-t-on tous les éléments ayant la classe `important` ?",
    "options": [
      "`#important`",
      "`*important`",
      "`.important`",
      "`important`"
    ],
    "reponse": [
      "`.important`"
    ],
    "explication": "En CSS, le préfixe point (`.`) est utilisé pour sélectionner tous les éléments qui partagent le même nom de classe."
  },
  {
    "id": 3004,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété est utilisée pour changer la couleur du texte ?",
    "options": [
      "`font-color`",
      "`text-color`",
      "`color`",
      "`font-style`"
    ],
    "reponse": [
      "`color`"
    ],
    "explication": "La propriété `color` définit la couleur de premier plan du contenu textuel d'un élément."
  },
  {
    "id": 3005,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété définit la couleur d'arrière-plan d'un élément ?",
    "options": [
      "`color`",
      "`background-color`",
      "`bg-color`",
      "`fill`"
    ],
    "reponse": [
      "`background-color`"
    ],
    "explication": "La propriété `background-color` est utilisée pour appliquer une couleur de fond à n'importe quel élément."
  },
  {
    "id": 3006,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété permet de définir la largeur d'un élément ?",
    "options": [
      "`height`",
      "`size`",
      "`width`",
      "`box-width`"
    ],
    "reponse": [
      "`width`"
    ],
    "explication": "La propriété `width` contrôle la largeur de la zone de contenu d'un élément."
  },
  {
    "id": 3007,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété permet de définir la hauteur d'un élément ?",
    "options": [
      "`width`",
      "`size`",
      "`height`",
      "`box-height`"
    ],
    "reponse": [
      "`height`"
    ],
    "explication": "La propriété `height` contrôle la hauteur de la zone de contenu d'un élément."
  },
  {
    "id": 3008,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété est une super-propriété pour définir les marges extérieures d'un élément ?",
    "options": [
      "`padding`",
      "`border`",
      "`margin`",
      "`spacing`"
    ],
    "reponse": [
      "`margin`"
    ],
    "explication": "La propriété `margin` est utilisée pour créer de l'espace autour d'un élément, à l'extérieur de ses bordures."
  },
  {
    "id": 3009,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété est une super-propriété pour définir la marge intérieure  d'un élément ?",
    "options": [
      "`margin`",
      "`padding`",
      "`inner-space`",
      "`spacing`"
    ],
    "reponse": [
      "`padding`"
    ],
    "explication": "La propriété `padding` est utilisée pour créer de l'espace autour du contenu, à l'intérieur des bordures d'un élément."
  },
  {
    "id": 3010,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété est utilisée pour spécifier la famille de police (ex: Arial, Times New Roman) ?",
    "options": [
      "`font-style`",
      "`font-weight`",
      "`text-font`",
      "`font-family`"
    ],
    "reponse": [
      "`font-family`"
    ],
    "explication": "La propriété `font-family` permet de définir une liste de polices par ordre de préférence."
  },
  {
    "id": 3011,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété contrôle la taille du texte ?",
    "options": [
      "`text-size`",
      "`font-size`",
      "`font-height`",
      "`size`"
    ],
    "reponse": [
      "`font-size`"
    ],
    "explication": "La propriété `font-size` définit la taille de la police, généralement en pixels (`px`) ou en pourcentages (`%`)."
  },
  {
    "id": 3012,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Pour mettre un texte en gras, quelle propriété utilise-t-on avec la valeur `bold` ?",
    "options": [
      "`font-style`",
      "`text-transform`",
      "`font-weight`",
      "`bold`"
    ],
    "reponse": [
      "`font-weight`"
    ],
    "explication": "La propriété `font-weight` contrôle l'épaisseur du texte. La valeur `bold` le met en gras."
  },
  {
    "id": 3013,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Pour mettre un texte en italique, quelle propriété utilise-t-on avec la valeur `italic` ?",
    "options": [
      "`font-style`",
      "`font-weight`",
      "`text-decoration`",
      "`italic`"
    ],
    "reponse": [
      "`font-style`"
    ],
    "explication": "La propriété `font-style` avec la valeur `italic` permet d'afficher le texte en italique."
  },
  {
    "id": 3014,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété contrôle l'alignement horizontal du texte ?",
    "options": [
      "`text-align`",
      "`horizontal-align`",
      "`align`",
      "`position`"
    ],
    "reponse": [
      "`text-align`"
    ],
    "explication": "La propriété `text-align` est utilisée pour aligner le contenu textuel (`left`, `center`, `right`, `justify`)."
  },
  {
    "id": 3015,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété permet de créer des coins arrondis pour un élément ?",
    "options": [
      "`corner-radius`",
      "`border-round`",
      "`border-radius`",
      "`round-corners`"
    ],
    "reponse": [
      "`border-radius`"
    ],
    "explication": "La propriété `border-radius` est utilisée pour arrondir les coins des bordures d'un élément."
  },
  {
    "id": 3016,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété est une super-propriété pour définir la couleur, le style et la largeur des bordures ?",
    "options": [
      "`border-style`",
      "`outline`",
      "`border`",
      "`borders`"
    ],
    "reponse": [
      "`border`"
    ],
    "explication": "La propriété `border` est une super-propriété qui permet de définir toutes les propriétés de la bordure en une seule ligne."
  },
  {
    "id": 3017,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété définit le style d'une bordure (par exemple `solid`) ?",
    "options": [
      "`border-type`",
      "`border-look`",
      "`border-style`",
      "`border`"
    ],
    "reponse": [
      "`border-style`"
    ],
    "explication": "La propriété `border-style` est essentielle pour qu'une bordure soit visible. Sans style, la bordure n'apparaît pas."
  },
  {
    "id": 3018,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété définit la couleur d'une bordure ?",
    "options": [
      "`color`",
      "`border-color`",
      "`outline-color`",
      "`border`"
    ],
    "reponse": [
      "`border-color`"
    ],
    "explication": "La propriété `border-color` permet de spécifier la couleur des quatre bordures d'un élément."
  },
  {
    "id": 3019,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété définit l'épaisseur d'une bordure ?",
    "options": [
      "`border-thickness`",
      "`border-width`",
      "`width`",
      "`border`"
    ],
    "reponse": [
      "`border-width`"
    ],
    "explication": "La propriété `border-width` contrôle l'épaisseur des bordures, souvent définie en pixels (`px`)."
  },
  {
    "id": 3020,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Comment sélectionner tous les paragraphes (`<p>`) qui ont la classe `article` ?",
    "options": [
      "`p .article`",
      "`p#article`",
      "`p, .article`",
      "`p.article`"
    ],
    "reponse": [
      "`p.article`"
    ],
    "explication": "La syntaxe `element.class` permet de sélectionner un élément spécifique qui possède une classe donnée, sans espace entre les deux."
  },
  {
    "id": 3021,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Comment cible-t-on un lien `<a>` qui n'a pas encore été visité ?",
    "options": [
      "`a:hover`",
      "`a:visited`",
      "`a:link`",
      "`a:active`"
    ],
    "reponse": [
      "`a:link`"
    ],
    "explication": "La pseudo-classe `:link` s'applique spécifiquement aux liens hypertextes qui ne figurent pas dans l'historique de navigation de l'utilisateur."
  },
  {
    "id": 3022,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Comment cible-t-on un lien `<a>` qui a déjà été visité ?",
    "options": [
      "`a:hover`",
      "`a:visited`",
      "`a:link`",
      "`a:active`"
    ],
    "reponse": [
      "`a:visited`"
    ],
    "explication": "La pseudo-classe `:visited` permet de styliser différemment les liens que l'utilisateur a déjà consultés."
  },
  {
    "id": 3023,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle pseudo-classe s'applique lorsqu'un utilisateur passe le curseur de sa souris sur un élément ?",
    "options": [
      "`:hover`",
      "`:visited`",
      "`:link`",
      "`:active`"
    ],
    "reponse": [
      "`:hover`"
    ],
    "explication": "La pseudo-classe `:hover` est très couramment utilisée pour créer des effets interactifs au survol de la souris."
  },
  {
    "id": 3024,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle pseudo-classe s'applique au moment où un utilisateur clique sur un lien ?",
    "options": [
      "`:hover`",
      "`:visited`",
      "`:link`",
      "`:active`"
    ],
    "reponse": [
      "`:active`"
    ],
    "explication": "La pseudo-classe `:active` s'applique pendant la courte période entre le moment où l'utilisateur appuie sur le bouton de la souris et le relâchement."
  },
  {
    "id": 3025,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété contrôle le type de puce pour un `<li>` (par exemple `circle`, `square`) ?",
    "options": [
      "`list-style`",
      "`list-style-position`",
      "`list-style-type`",
      "`list-style-image`"
    ],
    "reponse": [
      "`list-style-type`"
    ],
    "explication": "La propriété `list-style-type` permet de choisir parmi de nombreux types de marqueurs pour les listes."
  },
  {
    "id": 3026,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété permet d'utiliser une image comme puce pour une liste ?",
    "options": [
      "`list-style`",
      "`list-style-image`",
      "`list-style-type`",
      "`background-image`"
    ],
    "reponse": [
      "`list-style-image`"
    ],
    "explication": "La propriété `list-style-image` remplace le marqueur par défaut par une image, spécifiée via `url()`."
  },
  {
    "id": 3027,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété permet de mettre un texte entièrement en majuscules avec la valeur `uppercase` ?",
    "options": [
      "`text-transform`",
      "`font-style`",
      "`text-decoration`",
      "`font-weight`"
    ],
    "reponse": [
      "`text-transform`"
    ],
    "explication": "La propriété `text-transform: uppercase;` force l'affichage de tout le texte en majuscules."
  },
  {
    "id": 3028,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété permet de mettre un texte entièrement en minuscules avec la valeur `lowercase` ?",
    "options": [
      "`font-style`",
      "`text-transform`",
      "`text-decoration`",
      "`case`"
    ],
    "reponse": [
      "`text-transform`"
    ],
    "explication": "La propriété `text-transform: lowercase;` force l'affichage de tout le texte en minuscules."
  },
  {
    "id": 3029,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété définit le comportement d'affichage d'un élément (`inline`, `block`, etc.) ?",
    "options": [
      "`position`",
      "`float`",
      "`display`",
      "`layout`"
    ],
    "reponse": [
      "`display`"
    ],
    "explication": "La propriété `display` est fondamentale en CSS. Elle contrôle la manière dont un élément s'affiche et interagit avec les autres."
  },
  {
    "id": 3030,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété est utilisée pour faire 'flotter' un élément à gauche ou à droite ?",
    "options": [
      "`position`",
      "`align`",
      "`float`",
      "`display`"
    ],
    "reponse": [
      "`float`"
    ],
    "explication": "La propriété `float` permet de sortir un élément du flux normal pour le placer sur le côté, le texte environnant s'enroulant autour."
  },
  {
    "id": 3031,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété définit le type de positionnement (`static`, `relative`, `absolute`, etc.) ?",
    "options": [
      "`float`",
      "`position`",
      "`display`",
      "`layout`"
    ],
    "reponse": [
      "`position`"
    ],
    "explication": "La propriété `position` détermine comment un élément est placé dans le document, souvent avec `top`, `bottom`, `left`, et `right`."
  },
  {
    "id": 3032,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Pour un élément positionné, quelle propriété contrôle sa distance par rapport au haut ?",
    "options": [
      "`top`",
      "`margin-top`",
      "`padding-top`",
      "`y-position`"
    ],
    "reponse": [
      "`top`"
    ],
    "explication": "La propriété `top` ne fonctionne que sur les éléments dont la `position` n'est pas `static`."
  },
  {
    "id": 3033,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété contrôle le niveau de transparence d'un élément ?",
    "options": [
      "`transparency`",
      "`visibility`",
      "`opacity`",
      "`alpha`"
    ],
    "reponse": [
      "`opacity`"
    ],
    "explication": "La propriété `opacity` accepte une valeur entre `0.0` (transparent) et `1.0` (opaque)."
  },
  {
    "id": 3034,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété ajoute une ombre portée à la boîte d'un élément ?",
    "options": [
      "`text-shadow`",
      "`shadow`",
      "`box-shadow`",
      "`border-shadow`"
    ],
    "reponse": [
      "`box-shadow`"
    ],
    "explication": "La propriété `box-shadow` permet d'appliquer une ou plusieurs ombres à la boîte d'un élément."
  },
  {
    "id": 3035,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété ajoute une ombre portée directement au texte ?",
    "options": [
      "`text-shadow`",
      "`font-shadow`",
      "`box-shadow`",
      "`shadow`"
    ],
    "reponse": [
      "`text-shadow`"
    ],
    "explication": "La propriété `text-shadow` applique une ombre au contenu textuel d'un élément, pas à sa boîte."
  },
  {
    "id": 3036,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété définit si les bordures d'un tableau sont fusionnées ou séparées ?",
    "options": [
      "`border-style`",
      "`table-layout`",
      "`border-collapse`",
      "`border-spacing`"
    ],
    "reponse": [
      "`border-collapse`"
    ],
    "explication": "La propriété `border-collapse` avec la valeur `collapse` permet de fusionner les bordures des cellules adjacentes."
  },
  {
    "id": 3037,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété permet d'appliquer une image en arrière-plan ?",
    "options": [
      "`image-background`",
      "`background`",
      "`background-image`",
      "`src`"
    ],
    "reponse": [
      "`background-image`"
    ],
    "explication": "La propriété `background-image` est utilisée avec `url()` pour spécifier le chemin vers l'image."
  },
  {
    "id": 3038,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété contrôle la répétition d'une image d'arrière-plan ?",
    "options": [
      "`repeat`",
      "`background-repeat`",
      "`background-style`",
      "`image-repeat`"
    ],
    "reponse": [
      "`background-repeat`"
    ],
    "explication": "La propriété `background-repeat` peut prendre des valeurs comme `repeat`, `no-repeat`, `repeat-x` ou `repeat-y`."
  },
  {
    "id": 3039,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété contrôle la taille d'une image d'arrière-plan ?",
    "options": [
      "`background-size`",
      "`image-size`",
      "`size`",
      "`background`"
    ],
    "reponse": [
      "`background-size`"
    ],
    "explication": "La propriété `background-size` permet de contrôler les dimensions de l'image de fond (`cover`, `contain`, etc.)."
  },
  {
    "id": 3040,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété permet de faire pivoter, incliner ou redimensionner un élément ?",
    "options": [
      "`animation`",
      "`transition`",
      "`transform`",
      "`filter`"
    ],
    "reponse": [
      "`transform`"
    ],
    "explication": "La propriété `transform` applique une transformation 2D ou 3D avec des fonctions comme `rotate()`, `scale()`, `skew()` ou `translate()`."
  },
  {
    "id": 3041,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété est une super-propriété pour définir une transition animée ?",
    "options": [
      "`transition`",
      "`animation`",
      "`animate`",
      "`transform`"
    ],
    "reponse": [
      "`transition`"
    ],
    "explication": "La propriété `transition` permet de définir une animation douce lors du changement de l'état d'une propriété CSS."
  },
  {
    "id": 3042,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété définit la durée d'une transition ou d'une animation ?",
    "options": [
      "`animation-time`",
      "`duration`",
      "`transition-duration`",
      "`time`"
    ],
    "reponse": [
      "`transition-duration`"
    ],
    "explication": "La propriété `transition-duration` spécifie le temps que doit durer l'effet, généralement en secondes (s)."
  },
  {
    "id": 3043,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle règle est utilisée pour définir les étapes clés d'une animation ?",
    "options": [
      "`@animation`",
      "`@keyframes`",
      "`@steps`",
      "`@animate`"
    ],
    "reponse": [
      "`@keyframes`"
    ],
    "explication": "La règle `@keyframes` permet de définir le style d'un élément à différents moments de l'animation, de `0%` (ou `from`) à `100%` (ou `to`)."
  },
  {
    "id": 3044,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété lie une règle `@keyframes` à un sélecteur ?",
    "options": [
      "`animation`",
      "`animation-link`",
      "`animation-name`",
      "`keyframe-name`"
    ],
    "reponse": [
      "`animation-name`"
    ],
    "explication": "La propriété `animation-name` doit correspondre au nom que vous avez donné à votre animation dans la règle `@keyframes`."
  },
  {
    "id": 3045,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété définit le nombre de fois qu'une animation doit se répéter ?",
    "options": [
      "`animation-repeat`",
      "`animation-loop`",
      "`animation-count`",
      "`animation-iteration-count`"
    ],
    "reponse": [
      "`animation-iteration-count`"
    ],
    "explication": "La propriété `animation-iteration-count` peut être un nombre ou le mot-clé `infinite` pour une répétition sans fin."
  },
  {
    "id": 3046,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété permet d'appliquer un filtre visuel comme un flou ou un niveau de gris ?",
    "options": [
      "`transform`",
      "`effect`",
      "`filter`",
      "`image-style`"
    ],
    "reponse": [
      "`filter`"
    ],
    "explication": "La propriété `filter` applique des effets graphiques, en utilisant des fonctions comme `blur()`, `grayscale()` ou `invert()`."
  },
  {
    "id": 3047,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété contrôle ce qui se passe lorsque le contenu dépasse la taille de sa boîte ?",
    "options": [
      "`overflow`",
      "`clip`",
      "`display`",
      "`container`"
    ],
    "reponse": [
      "`overflow`"
    ],
    "explication": "La propriété `overflow` peut prendre des valeurs comme `hidden` (cache le surplus) ou `scroll` (ajoute des barres de défilement)."
  },
  {
    "id": 3048,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Comment sélectionner tous les `<h1>` ET tous les `<h2>` avec une seule règle CSS ?",
    "options": [
      "`h1 h2`",
      "`h1.h2`",
      "`h1, h2`",
      "`h1 + h2`"
    ],
    "reponse": [
      "`h1, h2`"
    ],
    "explication": "La virgule (`,`) sert de séparateur pour appliquer un même style à plusieurs sélecteurs différents."
  },
  {
    "id": 3049,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelles propriétés sont des super-propriétés ?",
    "options": [
      "`font`",
      "`border`",
      "`background`",
      "`color`"
    ],
    "reponse": [
      "`font`",
      "`border`",
      "`background`"
    ],
    "explication": "Les super-propriétés (`font`, `border`, `background`, etc.) combinent plusieurs propriétés en une seule. `color` n'est pas une super-propriété."
  },
  {
    "id": 3050,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle fonction de `transform` déplace un élément sans affecter les autres ?",
    "options": [
      "`rotate()`",
      "`scale()`",
      "`translate()`",
      "`skew()`"
    ],
    "reponse": [
      "`translate()`"
    ],
    "explication": "La fonction `translate()` permet de déplacer un élément sur les axes X et Y par rapport à sa position d'origine."
  },
  {
    "id": 3051,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "```css\np {\n  color: blue;\n}\n.article {\n  color: red;\n}\n```\nQuelle sera la couleur d'un `<p class='article'>` ?",
    "options": [
      "Bleu",
      "Rouge",
      "Violet (mélange)",
      "Noir (défaut)"
    ],
    "reponse": [
      "Rouge"
    ],
    "explication": "Un sélecteur de classe (`.article`) est plus spécifique (plus prioritaire) qu'un sélecteur de type (`p`). Par conséquent, la règle de la classe l'emporte."
  },
  {
    "id": 3052,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "```css\n#titre {\n  color: green;\n}\np.important {\n  color: orange;\n}\n```\nQuelle sera la couleur de &ltp id='titre' class='important'&gt ?",
    "options": [
      "Vert",
      "Orange",
      "Noir",
      "Dépend de l'ordre"
    ],
    "reponse": [
      "Vert"
    ],
    "explication": "Un sélecteur d'ID (`#titre`) a la plus haute spécificité parmi les sélecteurs simples. Sa règle est donc prioritaire sur toutes les autres."
  },
  {
    "id": 3053,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Que signifie la règle `padding: 10px 20px;` ?",
    "options": [
      "`10px` en haut/bas, `20px` à gauche/droite",
      "`10px` à gauche/droite, `20px` en haut/bas",
      "`10px` pour tous les côtés",
      "`20px` pour tous les côtés"
    ],
    "reponse": [
      "`10px` en haut/bas, `20px` à gauche/droite"
    ],
    "explication": "Lorsque deux valeurs sont fournies, la première s'applique aux marges verticales (haut/bas) et la seconde aux marges horizontales (gauche/droite)."
  },
  {
    "id": 3054,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Que signifie `margin: 10px 20px 30px 40px;` ?",
    "options": [
      "Haut, Bas, Gauche, Droite",
      "Haut, Droite, Bas, Gauche",
      "Gauche, Droite, Haut, Bas",
      "Haut, Gauche, Bas, Droite"
    ],
    "reponse": [
      "Haut, Droite, Bas, Gauche"
    ],
    "explication": "Lorsque quatre valeurs sont fournies, elles s'appliquent dans l'ordre des aiguilles d'une montre : top, right, bottom, left (TRBL)."
  },
  {
    "id": 3055,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Quelle est la différence entre `display: inline` et `display: inline-block` ?",
    "options": [
      "Aucune, elles sont identiques",
      "`inline-block` permet de définir `width` et `height`, contrairement à `inline`",
      "`inline` permet des marges verticales, contrairement à `inline-block`",
      "`inline-block` crée un retour à la ligne"
    ],
    "reponse": [
      "`inline-block` permet de définir `width` et `height`, contrairement à `inline`"
    ],
    "explication": "`inline-block` se comporte comme `inline` (ne crée pas de retour à la ligne) mais accepte les propriétés de dimension `width` et `height` comme un `block`."
  },
  {
    "id": 3056,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Un élément avec `position: absolute;` est positionné par rapport à quoi ?",
    "options": [
      "Le haut de la page",
      "Le coin de l'écran",
      "Son parent le plus proche qui a une `position` autre que `static`",
      "Son parent direct"
    ],
    "reponse": [
      "Son parent le plus proche qui a une `position` autre que `static`"
    ],
    "explication": "Un élément absolu cherche un 'contexte de positionnement'. S'il ne trouve aucun parent `relative`, `absolute`, ou `fixed`, il se positionne par rapport à `<body>`."
  },
  {
    "id": 3057,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Quelle est la différence entre `position: absolute` et `position: fixed` ?",
    "options": [
      "Il n'y en a pas",
      "`fixed` est positionné par rapport à la fenêtre et ne bouge pas au défilement",
      "`absolute` ne bouge pas au défilement",
      "`fixed` est positionné par rapport à son parent"
    ],
    "reponse": [
      "`fixed` est positionné par rapport à la fenêtre et ne bouge pas au défilement"
    ],
    "explication": "Un élément `fixed` reste ancré à la même position dans la fenêtre du navigateur, même si la page défile. Un élément `absolute` défile avec la page."
  },
  {
    "id": 3058,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Un `div` a `width: 200px; padding: 20px; border: 5px solid;`. Quelle sera sa largeur totale occupée à l'écran ?",
    "options": [
      "`200px`",
      "`220px`",
      "`225px`",
      "`250px`"
    ],
    "reponse": [
      "`250px`"
    ],
    "explication": "Par défaut, la largeur totale est la somme de `width` + `padding` gauche/droit + `border` gauche/droit. Soit `200 + (20*2) + (5*2) = 250px`."
  },
  {
    "id": 3059,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "```css\n.carte:hover {\n  transform: scale(1.1);\n  transition: transform 0.3s;\n}\n```\nQue produit ce code ?",
    "options": [
      "La carte grandit de 10% instantanément au survol",
      "La carte grandit de 10% progressivement en 0.3 secondes au survol",
      "La carte tourne sur elle-même en 0.3s",
      "La carte devient 10% plus petite"
    ],
    "reponse": [
      "La carte grandit de 10% progressivement en 0.3 secondes au survol"
    ],
    "explication": "`:hover` déclenche le `transform: scale(1.1)` (agrandissement de 10%). La propriété `transition` anime ce changement sur une durée de 0.3s."
  },
  {
    "id": 3060,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "```css\nfont: bold 16px Arial;\n```\nDe quelle type de propriété s'agit-il ?",
    "options": [
      "Une propriété standard",
      "Une super-propriété",
      "Une propriété invalide",
      "Une pseudo-classe"
    ],
    "reponse": [
      "Une super-propriété"
    ],
    "explication": "`font` est une super-propriété qui permet de définir `font-weight`, `font-size` et `font-family` (entre autres) en une seule ligne."
  },
  {
    "id": 3061,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "```css\n.parent {\n  position: relative;\n}\n.enfant {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n```\nQuel est le résultat de ce code ?",
    "options": [
      "L'enfant est centré verticalement",
      "L'enfant est parfaitement centré (horizontalement et verticalement) dans le parent",
      "L'enfant est placé au milieu de la page",
      "L'enfant est décalé de 50%"
    ],
    "reponse": [
      "L'enfant est parfaitement centré (horizontalement et verticalement) dans le parent"
    ],
    "explication": "C'est une technique classique de centrage. `top: 50%` et `left: 50%` déplacent l'enfant au centre du parent. `transform: translate(-50%, -50%)` le recale de la moitié de sa propre taille pour un centrage parfait."
  },
  {
    "id": 3062,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "```css\n.box {\n  transition: background-color 0.5s ease;\n}\n.box:hover {\n  background-color: red;\n}\n```\nQue se passe-t-il lorsque l’utilisateur survole l’élément `.box` ?",
    "options": [
      "La couleur de fond devient rouge de manière progressive en 0.5s",
      "La couleur de fond devient rouge instantanément",
      "La couleur du texte change en rouge",
      "Rien ne se passe"
    ],
    "reponse": [
      "La couleur de fond devient rouge de manière progressive en 0.5s"
    ],
    "explication": "La propriété `transition` permet d’appliquer un effet progressif lors du passage de la souris. Ici, la couleur d’arrière-plan change vers le rouge en 0.5 seconde avec un effet d’accélération normal (`ease`)."
  },
  {
    "id": 3063,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Écrivez la super-propriété `animation` pour une animation nommée `glisse` qui dure 3 secondes et attend 1 seconde avant de démarrer.",
    "options": [],
    "reponse": [
      "`animation: glisse 3s 1s;`"
    ],
    "explication": "La super-propriété `animation` permet de définir `animation-name`, `animation-duration`, et `animation-delay` en une seule ligne."
  },
  {
    "id": 3064,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Quelle est la différence entre `background-size: cover` et `background-size: contain` ?",
    "options": [
      "`cover` déforme l'image, `contain` non",
      "`cover` remplit le conteneur, `contain` affiche toute l'image",
      "`contain` remplit le conteneur, `cover` affiche toute l'image",
      "Il n'y a pas de différence"
    ],
    "reponse": [
      "`cover` remplit le conteneur, `contain` affiche toute l'image"
    ],
    "explication": "`cover` est idéal pour les fonds d'écran. `contain` est parfait pour afficher des logos ou des images qui ne doivent jamais être rognées."
  },
  {
    "id": 3065,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Écrivez la super-propriété `border` pour une bordure de 2 pixels, solide et noire.",
    "options": [],
    "reponse": [
      "`border: 2px solid black;`"
    ],
    "explication": "La super-propriété `border` permet de définir la largeur (`width`), le style (`style`) et la couleur (`color`) en une seule ligne."
  },
  {
    "id": 3066,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Un `<p>` a `margin-bottom: 20px;`. Le `<div>` qui le suit a `margin-top: 30px;`. Quel sera l'espace vertical entre les deux ?",
    "options": [
      "`50px` (20 + 30)",
      "`30px`",
      "`20px`",
      "`10px` (30 - 20)"
    ],
    "reponse": [
      "`30px`"
    ],
    "explication": "C'est le principe de la 'fusion des marges' (margin collapsing). Lorsque deux marges verticales adjacentes se rencontrent, seule la plus grande des deux est conservée."
  },
  {
    "id": 3067,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "```css\n.element {\n  position: sticky;\n  top: 0;\n}\n```\nQuel sera le comportement de cet élément ?",
    "options": [
      "Il sera fixé en haut de la page",
      "Il défile normalement puis se 'colle' en haut de la fenêtre quand on l'atteint",
      "Il sera positionné en haut de son parent `relative`",
      "Le code est invalide"
    ],
    "reponse": [
      "Il défile normalement puis se 'colle' en haut de la fenêtre quand on l'atteint"
    ],
    "explication": "`position: sticky` est un hybride entre `relative` et `fixed`. L'élément reste dans le flux jusqu'à ce qu'il atteigne le seuil défini (ici `top: 0`), puis il se fixe."
  },
  {
    "id": 3068,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Quelle est la syntaxe pour une ombre de boîte (`box-shadow`) décalée de 5px vers la droite, 10px vers le bas, avec un flou de 15px et de couleur noire ?",
    "options": [],
    "reponse": [
      "`box-shadow: 5px 10px 15px black;`"
    ],
    "explication": "La syntaxe de `box-shadow` est : décalage horizontal, décalage vertical, rayon de flou (optionnel), et couleur."
  },
  {
    "id": 3069,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "```css\n.box {\n  transform: scale(1.5) rotate(45deg);\n}\n```\nQuel est l’effet produit sur l’élément `.box` ?",
    "options": [
      "Il est agrandi de 50% et pivoté de 45°",
      "Il est uniquement pivoté de 45°",
      "Il est uniquement agrandi de 50%",
      "Il est déplacé de 45px vers la droite"
    ],
    "reponse": [
      "Il est agrandi de 50% et pivoté de 45°"
    ],
    "explication": "La propriété `transform` permet d’appliquer des transformations 2D ou 3D. Ici, `scale(1.5)` agrandit l’élément de 50% et `rotate(45deg)` l’oriente de 45°."
  },
  {
    "id": 3070,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Quelle est la syntaxe pour faire tourner un élément de 90 degrés dans le sens anti-horaire ?",
    "options": [],
    "reponse": [
      "`transform: rotate(-90deg);`"
    ],
    "explication": "La fonction `rotate()` de la propriété `transform` accepte des degrés (`deg`). Une valeur négative indique une rotation dans le sens anti-horaire."
  },
  {
    "id": 3071,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelles sont des propriétés de boîtes (`box`) ?",
    "options": [
      "`width`",
      "`height`",
      "`padding`",
      "`color`"
    ],
    "reponse": [
      "`width`",
      "`height`",
      "`padding`"
    ],
    "explication": "`width`, `height`, `padding` et `margin` sont des propriétés fondamentales du modèle de boîte. `color` est une propriété de texte."
  },
  {
    "id": 3072,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelles sont des valeurs possibles pour la propriété `position` ?",
    "options": [
      "`static`",
      "`relative`",
      "`absolute`",
      "`block`"
    ],
    "reponse": [
      "`static`",
      "`relative`",
      "`absolute`"
    ],
    "explication": "`static`, `relative`, `absolute`, `fixed`, et `sticky` sont des valeurs pour la propriété `position`. `block` est une valeur pour `display`."
  },
  {
    "id": 3073,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelles sont des propriétés de texte ?",
    "options": [
      "`color`",
      "`text-align`",
      "`text-shadow`",
      "`box-shadow`"
    ],
    "reponse": [
      "`color`",
      "`text-align`",
      "`text-shadow`"
    ],
    "explication": "`color`, `text-align`, `text-shadow` et `text-transform` sont des propriétés de mise en forme du texte. `box-shadow` s'applique à la boîte de l'élément."
  },
  {
    "id": 3074,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété définit la position des puces d'une liste (à l'intérieur ou à l'extérieur de la boîte) ?",
    "options": [
      "`list-style-type`",
      "`list-style-position`",
      "`list-style`",
      "`marker-position`"
    ],
    "reponse": [
      "`list-style-position`"
    ],
    "explication": "La propriété `list-style-position` avec les valeurs `inside` ou `outside` contrôle si le marqueur est inclus dans le flux de texte de l'élément."
  },
  {
    "id": 3075,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété de tableau est utilisée pour optimiser l'affichage en définissant comment les colonnes sont calculées ?",
    "options": [
      "`border-collapse`",
      "`table-style`",
      "`table-layout`",
      "`display`"
    ],
    "reponse": [
      "`table-layout`"
    ],
    "explication": "La propriété `table-layout` peut être `auto` ou `fixed`. `fixed` est souvent plus rapide car la largeur des colonnes dépend de l'en-tête et non de tout le contenu."
  },
  {
    "id": 3076,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle est la valeur par défaut de la propriété `position` pour tous les éléments ?",
    "options": [
      "`relative`",
      "`absolute`",
      "`static`",
      "`fixed`"
    ],
    "reponse": [
      "`static`"
    ],
    "explication": "Par défaut, tous les éléments sont en `position: static`, ce qui signifie qu'ils suivent le flux normal de la page. Les propriétés `top`, `left`, etc. n'ont aucun effet sur eux."
  },
  {
    "id": 3077,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelles sont des valeurs valides pour la propriété `text-align` en CSS ?",
    "options": [
      "`left`",
      "`center`",
      "`justify`",
      "`top`"
    ],
    "reponse": [
      "`left`",
      "`center`",
      "`justify`"
    ],
    "explication": "La propriété `text-align` permet de définir l’alignement horizontal du texte. Les valeurs valides incluent `left`, `right`, `center`, `justify`. La valeur `top` n’est pas valide car elle concerne une position verticale."
  },
  {
    "id": 3078,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle valeur de `text-transform` met la première lettre de chaque mot en majuscule ?",
    "options": [
      "`uppercase`",
      "`capitalize`",
      "`title-case`",
      "`lowercase`"
    ],
    "reponse": [
      "`capitalize`"
    ],
    "explication": "La valeur `capitalize` est utilisée pour styliser un texte comme un titre, en mettant en majuscule l'initiale de chaque mot."
  },
  {
    "id": 3079,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle valeur de `background-repeat` répète l'image uniquement horizontalement ?",
    "options": [
      "`repeat`",
      "`repeat-y`",
      "`no-repeat`",
      "`repeat-x`"
    ],
    "reponse": [
      "`repeat-x`"
    ],
    "explication": "`repeat-x` répète l'image de fond le long de l'axe X (horizontal), tandis que `repeat-y` le fait le long de l'axe Y (vertical)."
  },
  {
    "id": 3080,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quels sélecteurs ciblent un élément par son attribut ?",
    "options": [
      "`#id`",
      "`[attr]`",
      "`[attr=valeur]`",
      "`.class`"
    ],
    "reponse": [
      "`[attr]`",
      "`[attr=valeur]`"
    ],
    "explication": "Les sélecteurs entre crochets `[]` sont des sélecteurs d'attribut. `#id` et `.class` sont des raccourcis pour les attributs `id` et `class`."
  },
  {
    "id": 3081,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle est la super-propriété pour toutes les propriétés `list-style-*` ?",
    "options": [
      "`list`",
      "`marker`",
      "`list-style`",
      "`ul-style`"
    ],
    "reponse": [
      "`list-style`"
    ],
    "explication": "La super-propriété `list-style` permet de définir le type, l'image et la position des marqueurs de liste en une seule déclaration."
  },
  {
    "id": 3082,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle est la super-propriété pour `background-color`, `background-image`, etc. ?",
    "options": [
      "`background`",
      "`bg`",
      "`background-all`",
      "`fill`"
    ],
    "reponse": [
      "`background`"
    ],
    "explication": "La super-propriété `background` permet de définir toutes les propriétés de l'arrière-plan en une seule ligne de code."
  },
  {
    "id": 3083,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle propriété de transition spécifie le délai avant le début de l'animation ?",
    "options": [
      "`transition-duration`",
      "`transition-property`",
      "`transition-delay`",
      "`transition-start`"
    ],
    "reponse": [
      "`transition-delay`"
    ],
    "explication": "La propriété `transition-delay` est utilisée pour retarder le démarrage d'une transition, créant un effet d'attente."
  },
  {
    "id": 3084,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle fonction de `filter` applique un effet de flou à un élément ?",
    "options": [
      "`grayscale()`",
      "`blur()`",
      "`invert()`",
      "`shadow()`"
    ],
    "reponse": [
      "`blur()`"
    ],
    "explication": "La fonction `filter: blur(5px);` applique un flou gaussien à l'élément. Plus la valeur est élevée, plus le flou est important."
  },
  {
    "id": 3085,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle fonction de `filter` convertit un élément en niveaux de gris ?",
    "options": [
      "`grayscale()`",
      "`blur()`",
      "`invert()`",
      "`black-and-white()`"
    ],
    "reponse": [
      "`grayscale()`"
    ],
    "explication": "La fonction `filter: grayscale(100%);` retire toutes les couleurs d'un élément, le rendant en noir et blanc."
  },
  {
    "id": 3086,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle fonction de `transform` fait tourner un élément ?",
    "options": [
      "`skew()`",
      "`scale()`",
      "`rotate()`",
      "`translate()`"
    ],
    "reponse": [
      "`rotate()`"
    ],
    "explication": "La fonction `transform: rotate(45deg);` fait pivoter un élément de 45 degrés dans le sens des aiguilles d'une montre."
  },
  {
    "id": 3087,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle fonction de `transform` déplace un élément horizontalement et verticalement ?",
    "options": [
      "`skew()`",
      "`scale()`",
      "`rotate()`",
      "`translate()`"
    ],
    "reponse": [
      "`translate()`"
    ],
    "explication": "La fonction `transform: translate(50px, 20px);` déplace un élément de 50 pixels vers la droite et de 20 pixels vers le bas."
  },
  {
    "id": 3088,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle fonction de `transform` change la taille d'un élément ?",
    "options": [
      "`skew()`",
      "`scale()`",
      "`rotate()`",
      "`translate()`"
    ],
    "reponse": [
      "`scale()`"
    ],
    "explication": "La fonction `transform: scale(1.5);` agrandit un élément de 50%. Une valeur inférieure à 1 le rétrécit."
  },
  {
    "id": 3089,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelle fonction de `transform` incline un élément ?",
    "options": [
      "`skew()`",
      "`scale()`",
      "`rotate()`",
      "`translate()`"
    ],
    "reponse": [
      "`skew()`"
    ],
    "explication": "La fonction `transform: skew(10deg);` incline un élément le long de l'axe X."
  },
  {
    "id": 3090,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Quelles sont les valeurs possibles pour `overflow` ?",
    "options": [
      "`visible`",
      "`hidden`",
      "`scroll`",
      "`auto`"
    ],
    "reponse": [
      "`visible`",
      "`hidden`",
      "`scroll`",
      "`auto`"
    ],
    "explication": "Ces quatre valeurs contrôlent comment le contenu qui dépasse de la boîte d'un élément est géré : `visible` (par défaut), `hidden` (coupé), `scroll` (barres de défilement), `auto` (barres si nécessaire)."
  },
  {
    "id": 3091,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Que signifie la règle `padding: 10px 5%;` ?",
    "options": [
      "Un padding de 10px en haut/bas et de 5% de la largeur du parent à gauche/droite",
      "Un padding de 10px à gauche/droite et 5% en haut/bas",
      "La syntaxe est invalide car on mélange `px` et `%`",
      "Un padding de 10px en haut/gauche et 5% en bas/droite"
    ],
    "reponse": [
      "Un padding de 10px en haut/bas et de 5% de la largeur du parent à gauche/droite"
    ],
    "explication": "On peut mixer les unités. La première valeur s'applique au `padding` vertical (haut/bas) et la seconde au `padding` horizontal (gauche/droite)."
  },
  {
    "id": 3092,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Quelle est la différence principale entre `padding` et `margin` ?",
    "options": [
      "`padding` est l'espace extérieur, `margin` l'espace intérieur",
      "`padding` est l'espace intérieur, `margin` l'espace extérieur",
      "Les deux sont identiques",
      "`padding` ne peut pas avoir de valeurs négatives, `margin` si"
    ],
    "reponse": [
      "`padding` est l'espace intérieur, `margin` l'espace extérieur"
    ],
    "explication": "`padding` est l'espace entre le contenu et la bordure. `margin` est l'espace entre la bordure et les éléments voisins."
  },
  {
    "id": 3093,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "```css\np {\n  font-family: Arial, sans-serif;\n}\n```\nQue signifie cette règle ?",
    "options": [
      "Le navigateur essaiera d'abord d'utiliser la police Arial",
      "Si Arial n'est pas disponible, il utilisera une police `sans-serif` par défaut",
      "Le texte sera obligatoirement en Arial",
      "Cette règle ne s'applique qu'au premier paragraphe"
    ],
    "reponse": [
      "Le navigateur essaiera d'abord d'utiliser la police Arial",
      "Si Arial n'est pas disponible, il utilisera une police `sans-serif` par défaut"
    ],
    "explication": "C'est un système de 'fallback'. On fournit une liste de polices par ordre de préférence pour assurer un affichage correct sur un maximum d'appareils."
  },
  {
    "id": 3094,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "En observant ce code, où sera positionné le `div` avec la classe `.enfant` ?\n```html\n<div class=\"parent\">\n  <div class=\"enfant\"></div>\n</div>\n```\n```css\n.parent {\n  position: relative;\n  height: 100px;\n  width: 100px;\n}\n.enfant {\n  position: absolute;\n  top: 10px;\n  left: 10px;\n}\n```",
    "options": [
      "À 10px du coin supérieur gauche de la page.",
      "À 10px du coin supérieur gauche de l'élément `.parent`.",
      "Au centre de l'élément `.parent`.",
      "Le code ne fonctionnera pas."
    ],
    "reponse": [
      "À 10px du coin supérieur gauche de l'élément `.parent`."
    ],
    "explication": "Un élément avec `position: absolute;` se positionne par rapport à son plus proche ancêtre 'positionné'. Comme `.parent` a `position: relative;`, il sert de référentiel pour le positionnement de son enfant."
  },
  {
    "id": 3095,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Pour `list-style-position`, que signifie la valeur `inside` ?",
    "options": [
      "La puce est placée à l'intérieur de la boîte de l'élément de liste",
      "La liste est affichée à l'intérieur de son conteneur",
      "Seules les listes imbriquées sont affectées",
      "La puce est à gauche"
    ],
    "reponse": [
      "La puce est placée à l'intérieur de la boîte de l'élément de liste"
    ],
    "explication": "Avec `inside`, le marqueur de liste (puce ou numéro) fait partie du contenu textuel de l'élément `<li>` et sera donc aligné avec le texte s'il passe à la ligne."
  },
  {
    "id": 3096,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Quelles sont les affirmations correctes concernant le sélecteur `element.class` ?",
    "options": [
      "Il ne doit pas y avoir d'espace entre `element` et `.class`",
      "Il est plus spécifique qu'un sélecteur `element` seul",
      "Il est moins spécifique qu'un sélecteur `#id`",
      "Il sélectionne les enfants de `element` qui ont la classe"
    ],
    "reponse": [
      "Il ne doit pas y avoir d'espace entre `element` et `.class`",
      "Il est plus spécifique qu'un sélecteur `element` seul",
      "Il est moins spécifique qu'un sélecteur `#id`"
    ],
    "explication": "Ce sélecteur combine la spécificité du type d'élément et de la classe. Il est plus fort qu'un simple sélecteur de type ou de classe, mais reste moins prioritaire qu'un ID."
  },
  {
    "id": 3097,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Que fait la règle `border-collapse: collapse;` sur un tableau ?",
    "options": [
      "Elle cache toutes les bordures",
      "Elle arrondit les bordures",
      "Elle fusionne les bordures des cellules adjacentes en une seule",
      "Elle rend le tableau responsive"
    ],
    "reponse": [
      "Elle fusionne les bordures des cellules adjacentes en une seule"
    ],
    "explication": "C'est la méthode la plus courante pour styliser les tableaux, passant d'un affichage avec des bordures doubles (par défaut, `separate`) à des lignes simples et nettes."
  },
  {
    "id": 3098,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Dans quel cas utiliseriez-vous `overflow: auto;` ?",
    "options": [
      "Pour toujours afficher les barres de défilement",
      "Pour cacher tout contenu qui dépasse",
      "Pour laisser le navigateur décider d'afficher les barres de défilement uniquement si nécessaire",
      "Pour agrandir la boîte pour qu'elle contienne tout"
    ],
    "reponse": [
      "Pour laisser le navigateur décider d'afficher les barres de défilement uniquement si nécessaire"
    ],
    "explication": "`auto` est une valeur intelligente : les barres de défilement n'apparaissent que si le contenu est effectivement plus grand que le conteneur, ce qui est souvent le comportement souhaité."
  },
  {
    "id": 3099,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "```css\n.important {\n  font-weight: bold;\n}\np.important {\n  font-weight: lighter;\n}\n```\nComment sera un `<p class='important'>` ?",
    "options": [
      "En gras (`bold`)",
      "Plus fin (`lighter`)",
      "Normal",
      "Dépend de l'ordre dans le HTML"
    ],
    "reponse": [
      "Plus fin (`lighter`)"
    ],
    "explication": "Le sélecteur `p.important` est plus spécifique que `.important` seul, car il cible un type d'élément ET une classe. Sa règle l'emporte donc."
  },
  {
    "id": 3100,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Pour `border-radius: 10px 20px;`, quels coins seront affectés ?",
    "options": [
      "Coin supérieur gauche et inférieur droit : 10px",
      "Coin supérieur droit et inférieur gauche : 20px",
      "Tous les coins : 10px",
      "Tous les coins : 20px"
    ],
    "reponse": [
      "Coin supérieur gauche et inférieur droit : 10px",
      "Coin supérieur droit et inférieur gauche : 20px"
    ],
    "explication": "Avec deux valeurs, la première s'applique aux coins haut-gauche/bas-droit et la seconde aux coins haut-droit/bas-gauche."
  },
  {
    "id": 3101,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Un `div` a `position: relative; left: 20px;`. Comment sera-t-il positionné ?",
    "options": [
      "Décalé de 20px vers la gauche par rapport à sa position d'origine",
      "Décalé de 20px vers la droite par rapport à sa position d'origine",
      "Décalé de 20px par rapport au bord gauche de la page",
      "Le code n'aura aucun effet"
    ],
    "reponse": [
      "Décalé de 20px vers la droite par rapport à sa position d'origine"
    ],
    "explication": "Avec `position: relative`, `left`, `right`, `top` et `bottom` décalent l'élément par rapport à sa position normale dans le flux, sans affecter les autres éléments."
  },
  {
    "id": 3102,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "```css\nimg {\n  filter: grayscale(100%);\n  transition: filter 0.5s;\n}\nimg:hover {\n  filter: grayscale(0%);\n}\n```\nQuel est l'effet produit ?",
    "options": [
      "L'image passe du noir et blanc à la couleur au survol",
      "L'image passe de la couleur au noir et blanc au survol",
      "L'image devient floue au survol",
      "L'effet est instantané"
    ],
    "reponse": [
      "L'image passe du noir et blanc à la couleur au survol"
    ],
    "explication": "Initialement, l'image est en noir et blanc (`grayscale(100%)`). Au survol, le filtre est retiré (`grayscale(0%)`). La `transition` rend ce changement progressif sur 0.5 seconde."
  },
  {
    "id": 3103,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Que signifie `padding: 10px 0;` ?",
    "options": [
      "10px en haut et en bas, 0 à gauche et à droite",
      "10px à gauche et à droite, 0 en haut et en bas",
      "10px en haut, 0 partout ailleurs",
      "La syntaxe est invalide"
    ],
    "reponse": [
      "10px en haut et en bas, 0 à gauche et à droite"
    ],
    "explication": "C'est un raccourci commun. La première valeur s'applique au vertical (haut/bas), la seconde à l'horizontal (gauche/droite)."
  },
  {
    "id": 3104,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "```css\nh1 {\n  text-shadow: 2px 2px 5px #000;\n}\n```\nQuel effet aura ce code sur le titre `<h1>` ?",
    "options": [
      "Le texte sera noir",
      "Le texte aura une ombre portée noire, décalée en bas à droite et floue",
      "Le texte aura une bordure de 2px",
      "Le texte sera en relief"
    ],
    "reponse": [
      "Le texte aura une ombre portée noire, décalée en bas à droite et floue"
    ],
    "explication": "Les valeurs de `text-shadow` sont : décalage horizontal, décalage vertical, rayon de flou (optionnel), et couleur."
  },
  {
    "id": 3105,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Quelles affirmations sont correctes à propos de la spécificité des sélecteurs ?",
    "options": [
      "Un `id` est plus fort qu'une `classe`",
      "Une `classe` est plus forte qu'un `type d'élément`",
      "Le style `en ligne` est le plus fort de tous",
      "L'ordre dans le fichier CSS n'a jamais d'importance"
    ],
    "reponse": [
      "Un `id` est plus fort qu'une `classe`",
      "Une `classe` est plus forte qu'un `type d'élément`",
      "Le style `en ligne` est le plus fort de tous"
    ],
    "explication": "La hiérarchie de spécificité est : style en ligne > ID > Classe/Attribut/Pseudo-classe > Type d'élément. L'ordre n'importe qu'en cas de spécificité égale."
  },
  {
    "id": 3106,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "```css\n.box {\n  background-image: url('fond.png');\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n```\nQuel sera l'aspect de l'arrière-plan ?",
    "options": [
      "L'image 'fond.png' se répétera",
      "L'image sera entièrement visible, avec des espaces vides possibles",
      "L'image couvrira toute la surface de la boîte, quitte à être rognée",
      "Seule une couleur de fond sera visible"
    ],
    "reponse": [
      "L'image couvrira toute la surface de la boîte, quitte à être rognée"
    ],
    "explication": "`background-size: cover` redimensionne l'image pour qu'elle remplisse complètement le conteneur tout en conservant ses proportions. `no-repeat` empêche sa répétition."
  },
  {
    "id": 3107,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "En observant ce code, quel est l'espace total occupé horizontalement par l'élément `.boite`, en incluant ses marges ?\n```css\n.boite {\n  width: 200px;\n  padding: 10px;\n  border: 5px solid black;\n  margin: 15px;\n}\n```",
    "options": [
      "`200px`",
      "`230px`",
      "`250px`",
      "`260px`"
    ],
    "reponse": [
      "`260px`"
    ],
    "explication": "L'espace total occupé est la somme de la largeur (`width`), des marges intérieures (`padding`), des bordures (`border`), et des marges extérieures (`margin`) des deux côtés. Le calcul est : `200px (width) + 2*10px (padding) + 2*5px (border) + 2*15px (margin) = 260px`."
  },
  {
    "id": 3108,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "```css\n.spinner {\n  animation: spin 2s 0s infinite;\n}\n@keyframes spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n```\nQue fait ce code ?",
    "options": [
      "Il fait tourner l'élément `.spinner` sur lui-même en continu",
      "Il fait tourner l'élément une seule fois",
      "Il agrandit l'élément",
      "L'animation est statique"
    ],
    "reponse": [
      "Il fait tourner l'élément `.spinner` sur lui-même en continu"
    ],
    "explication": "L'animation `spin` applique une rotation complète. Elle est appliquée à `.spinner` avec une durée de 2s, une vitesse constante (`linear`) et une répétition infinie (`infinite`)."
  },
  {
    "id": 3109,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Complétez le code ci-dessous pour que l’animation `glisse` dure 3 secondes et se répète indéfiniment :\n```css\n.box {\n  animation: glisse 3s ____;\n}\n```",
    "options": [],
    "reponse": [
      "infinite"
    ],
    "explication": "La valeur `infinite` appliquée à `animation-iteration-count` permet à l’animation de se répéter sans fin."
  },
  {
    "id": 3110,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Si un élément a `position: absolute; top: 0; left: 0;`, où sera-t-il placé dans son conteneur positionné ?",
    "options": [
      "Au centre du conteneur",
      "Dans le coin supérieur gauche du conteneur",
      "Dans le coin inférieur droit du conteneur",
      "Le code est invalide"
    ],
    "reponse": [
      "Dans le coin supérieur gauche du conteneur"
    ],
    "explication": "En CSS, avec `position: absolute; top: 0; left: 0;`, l’élément est placé dans le coin supérieur gauche de son ancêtre positionné (c’est-à-dire un parent ayant `position: relative`, `absolute`, `fixed` ou `sticky`)."
  },
  {
    "id": 3111,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Complétez le code pour donner une marge de 10px en haut et à gauche, et 0px ailleurs :\n```css\n.box {\n  margin: ____;\n}\n```",
    "options": [],
    "reponse": [
      "10px 0 0 10px"
    ],
    "explication": "Avec la super-propriété `margin`, l’ordre des valeurs est : haut, droite, bas, gauche (TRBL). Ici : `10px` en haut, `0` à droite, `0` en bas, `10px` à gauche."
  },
  {
    "id": 3112,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Que fait la propriété `animation-direction: alternate;` ?",
    "options": [
      "L'animation se joue normalement",
      "L'animation se joue à l'envers",
      "L'animation se joue en avant, puis en arrière, puis en avant, etc.",
      "L'animation alterne entre deux `@keyframes`"
    ],
    "reponse": [
      "L'animation se joue en avant, puis en arrière, puis en avant, etc."
    ],
    "explication": "La direction `alternate` est utile pour créer des effets de pulsation ou de va-et-vient fluides, car elle inverse le sens de l'animation à chaque itération."
  },
  {
    "id": 3113,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Quelle est la syntaxe de la super-propriété `padding` pour avoir 10px en haut, 20px à droite et à gauche, et 30px en bas ?",
    "options": [],
    "reponse": [
      "`padding: 10px 20px 30px;`"
    ],
    "explication": "Avec trois valeurs, la première est pour le haut, la deuxième pour la gauche et la droite, et la troisième pour le bas."
  },
  {
    "id": 3114,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Complétez le code pour ajouter une ombre rouge décalée de 2px vers la droite, 2px vers le bas, avec un flou de 3px :\n```css\n.box {\n  box-shadow: ____;\n}\n```",
    "options": [],
    "reponse": [
      "2px 2px 3px red"
    ],
    "explication": "La syntaxe de `box-shadow` est : décalage horizontal (x), décalage vertical (y), rayon de flou, couleur. Ici : `2px 2px 3px red`."
  },
  {
    "id": 3115,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Quelle est la syntaxe pour faire tourner un élément de 30 degrés dans le sens horaire ?",
    "options": [],
    "reponse": [
      "`transform: rotate(30deg);`"
    ],
    "explication": "La fonction `rotate()` de la propriété `transform` accepte des degrés (`deg`). Une valeur négative indique une rotation dans le sens anti-horaire."
  },
  {
    "id": 3116,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Complétez le code pour donner à un élément une bordure pointillée verte de 2px :\n```css\n.box {\n  border: ____;\n}\n```",
    "options": [],
    "reponse": [
      "2px dotted green"
    ],
    "explication": "La super-propriété `border` combine largeur, style et couleur. Ici : `2px` (largeur), `dotted` (style pointillé), et `green` (couleur)."
  },
  {
    "id": 3117,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "```css\n* {\n  margin: 0;\n  padding: 0;\n}\n```\nPourquoi cette règle est-elle souvent utilisée au début d'un fichier CSS ?",
    "options": [
      "Pour améliorer la performance",
      "Pour réinitialiser les styles par défaut qui varient d'un navigateur à l'autre",
      "Pour définir une marge et un padding de base pour tous les éléments",
      "C'est une bonne pratique pour une base de style cohérente"
    ],
    "reponse": [
      "Pour réinitialiser les styles par défaut qui varient d'un navigateur à l'autre",
      "C'est une bonne pratique pour une base de style cohérente"
    ],
    "explication": "C'est la base d'un 'CSS Reset'. Les navigateurs appliquent des marges par défaut différentes. Cette règle assure une base neutre et cohérente sur laquelle construire son propre style."
  },
  {
    "id": 3118,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Quelle est la super-propriété qui permet de définir en une seule fois la durée, la propriété et le délai d'une transition ?",
    "options": [],
    "reponse": [
      "`transition`"
    ],
    "explication": "La super-propriété `transition` est un raccourci pour `transition-property`, `transition-duration`, `transition-timing-function` et `transition-delay`."
  },
  {
    "id": 3119,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "debutant",
    "question": "Complétez le code pour appliquer un filtre de flou de 5px à une image :\n```css\nimg {\n  filter: ____;\n}\n```",
    "options": [],
    "reponse": [
      "blur(5px)"
    ],
    "explication": "La propriété `filter` permet d’appliquer des effets visuels. Ici, `blur(5px)` applique un flou gaussien de 5 pixels sur l’image."
  },
  {
    "id": 3120,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Quelle fonction de `transform` faut-il utiliser pour agrandir un élément de 20% sur l'axe X et le rétrécir de 10% sur l'axe Y ?",
    "options": [],
    "reponse": [
      "`scale(1.2, 0.9)`"
    ],
    "explication": "La fonction `scale()` peut prendre deux valeurs : la première pour le redimensionnement horizontal (1.2 = 120%) et la seconde pour le vertical (0.9 = 90%)."
  },
  {
    "id": 3121,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "```html\n<p id=\"texte\" style=\"color: green;\">Bonjour</p>\n```\n```css\n#texte {\n  color: red;\n}\n```\nQuelle sera la couleur du texte affiché ?",
    "options": [
      "Rouge",
      "Vert",
      "Noir",
      "Cela dépend de l'ordre des règles"
    ],
    "reponse": [
      "Vert"
    ],
    "explication": "Le style en ligne (`style=\"color: green;\"`) a la plus forte spécificité et l’emporte sur la règle CSS liée à l’ID. Le texte s’affiche donc en vert."
  },
  {
    "id": 3122,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Que signifie `padding: 10px 0;` ?",
    "options": [
      "`10px` en haut et en bas, `0` à gauche et à droite",
      "`10px` à gauche et à droite, `0` en haut et en bas",
      "`10px` en haut, `0` partout ailleurs",
      "La syntaxe est invalide"
    ],
    "reponse": [
      "`10px` en haut et en bas, `0` à gauche et à droite"
    ],
    "explication": "C'est un raccourci commun. La première valeur s'applique au vertical (haut/bas), la seconde à l'horizontal (gauche/droite)."
  },
  {
    "id": 3123,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Un élément avec `float: left;` est-il toujours dans le flux normal de la page ?",
    "options": [
      "Oui, sa position ne change pas",
      "Non, il est retiré du flux normal et les autres éléments s'enroulent autour de lui",
      "Oui, mais seulement s'il a une largeur définie",
      "Non, il se comporte comme un élément en position absolue"
    ],
    "reponse": [
      "Non, il est retiré du flux normal et les autres éléments s'enroulent autour de lui"
    ],
    "explication": "Le 'flottement' est une technique de mise en page où un élément est sorti du flux pour se placer à gauche ou à droite, permettant au texte de l'entourer."
  },
  {
    "id": 3124,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Quelle est la différence principale entre `padding` et `margin` ?",
    "options": [
      "`padding` est à l'extérieur des bordures, `margin` à l'intérieur",
      "`padding` est à l'intérieur des bordures, `margin` à l'extérieur",
      "Les deux sont identiques",
      "`padding` n'accepte que des pixels, `margin` des pourcentages"
    ],
    "reponse": [
      "`padding` est à l'intérieur des bordures, `margin` à l'extérieur"
    ],
    "explication": "`padding` est l'espace entre le contenu et la bordure. `margin` est l'espace entre la bordure et les éléments voisins."
  },
  {
    "id": 3125,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "```css\n.box {\n  width: 100px;\n  height: 50px;\n  overflow: hidden;\n}\n```\nSi le contenu à l'intérieur de `.box` est plus grand que `100x50px`, que se passera-t-il ?",
    "options": [
      "La boîte s'agrandira pour tout contenir",
      "Des barres de défilement apparaîtront",
      "Le contenu qui dépasse sera coupé et invisible",
      "Le contenu qui dépasse sera visible"
    ],
    "reponse": [
      "Le contenu qui dépasse sera coupé et invisible"
    ],
    "explication": "La valeur `hidden` pour la propriété `overflow` cache tout contenu qui déborde des dimensions de l'élément."
  },
  {
    "id": 3126,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Pour `border-radius: 10px 20px 30px 40px;`, à quels coins s'applique la valeur `20px` ?",
    "options": [
      "Supérieur gauche",
      "Supérieur droit",
      "Inférieur droit",
      "Inférieur gauche"
    ],
    "reponse": [
      "Supérieur droit"
    ],
    "explication": "Avec quatre valeurs, l'ordre est `haut-gauche`, `haut-droit`, `bas-droit`, `bas-gauche`."
  },
  {
    "id": 3127,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "```css\n.element {\n  transform: translate(100%,0);\n}\n```\nComment cet élément sera-t-il déplacé ?",
    "options": [
      "De 100% de la largeur de la fenêtre vers la droite",
      "De 100% de sa propre largeur vers la droite",
      "De 100 pixels vers la droite",
      "Vers le centre de la page"
    ],
    "reponse": [
      "De 100% de sa propre largeur vers la droite"
    ],
    "explication": "Lorsque `translate` utilise des pourcentages, ils sont relatifs à la taille de l'élément lui-même, pas à celle du parent ou de la fenêtre."
  },
  {
    "id": 3128,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Que fait la règle `list-style: none;` ?",
    "options": [
      "Elle supprime la liste",
      "Elle cache le texte de la liste",
      "Elle supprime les puces ou les numéros de la liste",
      "Elle met les puces en blanc"
    ],
    "reponse": [
      "Elle supprime les puces ou les numéros de la liste"
    ],
    "explication": "C'est une utilisation très courante de la super-propriété `list-style` pour enlever les marqueurs par défaut, souvent pour les remplacer par des styles personnalisés."
  },
  {
    "id": 3129,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Quelles affirmations sont vraies concernant `position: relative;` ?",
    "options": [
      "L'élément est retiré du flux normal du document",
      "On peut utiliser `top` et `left` pour le décaler de sa position d'origine",
      "Il peut servir de contexte de positionnement pour un enfant en `position: absolute`",
      "L'espace d'origine de l'élément est conservé même s'il est décalé"
    ],
    "reponse": [
      "On peut utiliser `top` et `left` pour le décaler de sa position d'origine",
      "Il peut servir de contexte de positionnement pour un enfant en `position: absolute`",
      "L'espace d'origine de l'élément est conservé même s'il est décalé"
    ],
    "explication": "Un élément en `position: relative` reste dans le flux. Le décalage ne perturbe pas les autres éléments et il peut servir de point de référence pour ses enfants absolus."
  },
  {
    "id": 3130,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Si un élément a `display: none;`, est-il toujours présent dans le DOM ?",
    "options": [
      "Oui, il est juste invisible mais occupe sa place",
      "Oui, il est invisible et n'occupe aucune place, mais il est dans le DOM",
      "Non, il est complètement retiré du DOM",
      "Non, il est transformé en commentaire HTML"
    ],
    "reponse": [
      "Oui, il est invisible et n'occupe aucune place, mais il est dans le DOM"
    ],
    "explication": "L'élément est bien présent dans la structure HTML (DOM) et accessible en JavaScript, mais il est retiré du flux de rendu visuel."
  },
  {
    "id": 3131,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Complétez le sélecteur manquant pour que tous les paragraphes changent de couleur en rouge lorsque la souris les survole.\n```css\n... {\n  color: red;\n}\n```",
    "options": [],
    "reponse": [
      "p:hover"
    ],
    "explication": "La pseudo-classe `:hover` s'applique à un élément (ici, `p`) uniquement lorsque le curseur de l'utilisateur est dessus. C'est la méthode standard pour créer des effets de survol."
  },
  {
    "id": 3132,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "```css\n.box {\n  width: 100px; height: 100px;\n  margin: auto;\n}\n```\nDans quel cas cette règle ne centrera-t-elle PAS horizontalement la boîte ?",
    "options": [
      "Si la boîte est un élément de type `block`",
      "Si la boîte est un élément `inline-block`",
      "Si la boîte est un élément `inline`",
      "Si la boîte a un parent"
    ],
    "reponse": [
      "Si la boîte est un élément `inline`"
    ],
    "explication": "`margin: auto;` ne fonctionne pour le centrage horizontal que sur les éléments de type bloc qui ont une largeur (`width`) définie."
  },
  {
    "id": 3133,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Quelle est la syntaxe pour une transition de 0.4 seconde sur la propriété `opacity`, avec un délai de 0.1 seconde ?",
    "options": [],
    "reponse": [
      "`transition: opacity 0.4s 0.1s;`"
    ],
    "explication": "Dans la super-propriété `transition`, l'ordre est généralement : `propriété`, `durée`, `fonction de temporisation` (optionnel), `délai`."
  },
  {
    "id": 3134,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Si une balise a `id='A'` et `class='B'`, et que le CSS contient `#A {color:red;}` et `.B {color:blue;}`, de quelle couleur sera le texte ?",
    "options": [
      "Rouge",
      "Bleu",
      "Noir (défaut)",
      "Cela dépend de l'ordre"
    ],
    "reponse": [
      "Rouge"
    ],
    "explication": "La spécificité d'un sélecteur d'ID est supérieure à celle d'un sélecteur de classe, donc le style de l'ID l'emporte."
  },
  {
    "id": 3135,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Complétez la règle CSS manquante pour centrer horizontalement un élément de type bloc qui a une largeur définie.\n```css\n.boite-centree {\n  width: 50%;\n  margin: ...;\n}\n```",
    "options": [],
    "reponse": [
      "auto"
    ],
    "explication": "La valeur `auto` pour les marges gauche et droite demande au navigateur de distribuer équitablement l'espace horizontal disponible, ce qui a pour effet de centrer un élément de type bloc possédant une largeur définie."
  },
  {
    "id": 3136,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Complétez le code CSS manquant pour qu'un élément devienne semi-transparent lorsque l'utilisateur passe sa souris dessus.\n```css\n.element:hover {\n  ...\n}\n```",
    "options": [],
    "reponse": [
      "opacity: 0.5;"
    ],
    "explication": "La pseudo-classe `:hover` est utilisée pour styliser un élément au survol de la souris. La propriété `opacity` avec une valeur de `0.5` rend l'élément transparent à 50%."
  },
  {
    "id": 3137,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Quelle est la syntaxe pour une ombre de texte (`text-shadow`) décalée de 2px horizontalement, 2px verticalement, avec un flou de 5px et une couleur noire ?",
    "options": [],
    "reponse": [
      "`text-shadow: 2px 2px 5px black;`"
    ],
    "explication": "La propriété `text-shadow` accepte dans l'ordre le décalage horizontal, le décalage vertical, le rayon du flou (optionnel) et la couleur."
  },
  {
    "id": 3138,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Par défaut, la balise `<span>` est un élément de type `inline`. Quelles affirmations à son sujet sont correctes en CSS ?",
    "options": [
      "On ne peut pas lui appliquer directement une `width` ou une `height`.",
      "Elle crée un retour à la ligne avant et après elle.",
      "Elle prend uniquement la largeur de son contenu.",
      "On peut lui appliquer `margin-top` pour créer de l'espace au-dessus."
    ],
    "reponse": [
      "On ne peut pas lui appliquer directement une `width` ou une `height`.",
      "Elle prend uniquement la largeur de son contenu."
    ],
    "explication": "En tant qu'élément `inline`, une balise `<span>` s'insère dans le flux du texte sans créer de rupture. Les propriétés de dimensionnement de bloc comme `width`, `height`, `margin-top`, et `margin-bottom` n'ont pas d'effet sur elle par défaut."
  },
  {
    "id": 3139,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "En observant ce code, quelle est la distance totale entre la bordure gauche de l'élément `.parent` et la bordure gauche de l'élément `.enfant` ?\n```html\n<div class=\"parent\">\n  <div class=\"enfant\"></div>\n</div>\n```\n```css\n.parent {\n  padding-left: 20px;\n  border: 1px solid white;\n}\n.enfant {\n  margin-left: 30px;\n  border: 1px solid white;\n  height: 50px;\n}\n```",
    "options": [
      "`20px`",
      "`30px`",
      "`10px`",
      "`50px`"
    ],
    "reponse": [
      "`50px`"
    ],
    "explication": "La distance est la somme du `padding-left` du parent et du `margin-left` de l'enfant. Le `padding` crée un espace à l'intérieur de la bordure du parent, et le `margin` crée un espace à l'extérieur de la bordure de l'enfant. Ces deux espaces s'additionnent. Calcul : `20px + 30px = 50px`."
  },
  {
    "id": 3140,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Écrivez un sélecteur qui cible tous les éléments `<a>` qui ont un attribut `href`.",
    "options": [],
    "reponse": [
      "`a[href]`"
    ],
    "explication": "Le sélecteur d'attribut de présence `[attr]` est utile pour cibler des éléments qui ont un attribut spécifique, quelle que soit sa valeur."
  },
  {
    "id": 3141,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Quelle est la différence entre un sélecteur `#titre` et un sélecteur `.titre` ?",
    "options": [
      "`#titre` cible un élément unique, `.titre` peut en cibler plusieurs",
      "`.titre` est plus prioritaire que `#titre`",
      "`#titre` est pour le texte, `.titre` pour les boîtes",
      "Il n'y a pas de différence fonctionnelle"
    ],
    "reponse": [
      "`#titre` cible un élément unique, `.titre` peut en cibler plusieurs"
    ],
    "explication": "Un `id` doit être unique dans une page HTML, c'est un identifiant. Une `class` est une étiquette qui peut être appliquée à de multiples éléments pour leur donner un style commun."
  },
  {
    "id": 3142,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "```css\n.box {\n  width: 100px;\n  height: 50px;\n  overflow: scroll;\n}\n```\nQue se passera-t-il si le contenu est plus petit que la boîte ?",
    "options": [
      "La boîte s'adaptera au contenu",
      "Les barres de défilement seront quand même visibles (mais désactivées)",
      "Les barres de défilement n'apparaîtront pas",
      "Le contenu sera centré"
    ],
    "reponse": [
      "Les barres de défilement seront quand même visibles (mais désactivées)"
    ],
    "explication": "La valeur `scroll` pour `overflow` force l'affichage permanent des barres de défilement, que le contenu dépasse ou non."
  },
  {
    "id": 3143,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Pour `border-radius: 10px 20px 30px;`, à quels coins s'applique la valeur `20px` ?",
    "options": [
      "Supérieur gauche",
      "Supérieur droit",
      "Inférieur droit",
      "Inférieur gauche"
    ],
    "reponse": [
      "Supérieur droit",
      "Inférieur gauche"
    ],
    "explication": "Avec trois valeurs, la première s'applique au coin `haut-gauche`, la seconde aux coins `haut-droit` et `bas-gauche`, et la troisième au coin `bas-droit`."
  },
  {
    "id": 3144,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "```css\n.element {\n  transform: translate(50px,0);\n}\n```\nComment cet élément sera-t-il déplacé ?",
    "options": [
      "De 50% de sa largeur vers la droite",
      "De 50 pixels vers le haut",
      "De 50 pixels vers la droite",
      "De 50 pixels vers la gauche"
    ],
    "reponse": [
      "De 50 pixels vers la droite"
    ],
    "explication": "La fonction `translateX()` déplace un élément horizontalement. Une valeur positive le déplace vers la droite."
  },
  {
    "id": 3145,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Quelles affirmations sont vraies concernant `position: absolute;` ?",
    "options": [
      "L'élément est retiré du flux normal du document",
      "Il se positionne par rapport au `<body>` s'il n'a pas de parent positionné",
      "Il ne peut pas avoir de marges (`margin`)",
      "L'espace qu'il occupait dans le flux est libéré"
    ],
    "reponse": [
      "L'élément est retiré du flux normal du document",
      "Il se positionne par rapport au `<body>` s'il n'a pas de parent positionné",
      "L'espace qu'il occupait dans le flux est libéré"
    ],
    "explication": "Un élément en `position: absolute` est sorti du flux, n'occupe plus d'espace dans la mise en page normale, et se positionne par rapport à son plus proche ancêtre positionné."
  },
{
  "id": 3146,
  "type": "choix_simple",
  "theme": "CSS",
  "niveau": "intermediaire",
  "question": "Quelle est la particularité de `display: inline-block;` par rapport à `display: inline;` ?",
  "options": [
    "Il force l’élément à occuper toute la largeur disponible",
    "Il permet de définir largeur et hauteur tout en restant dans le flux en ligne",
    "Il supprime complètement l’élément du flux",
    "Il rend l’élément invisible mais présent dans le DOM"
  ],
  "reponse": [
    "Il permet de définir largeur et hauteur tout en restant dans le flux en ligne"
  ],
  "explication": "Un élément avec `display: inline-block` se comporte comme un élément en ligne (il ne force pas le retour à la ligne) mais, contrairement à `display: inline`, il accepte les propriétés de dimensions (`width`, `height`)."
},
  {
    "id": 3147,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "```css\n.element {\n  animation-direction: reverse;\n}\n```\nComment l'animation se comportera-t-elle ?",
    "options": [
      "Elle se jouera normalement",
      "Elle se jouera à l'envers (de `to` vers `from`)",
      "Elle alternera entre avant et arrière",
      "Elle ne se jouera qu'une seule fois"
    ],
    "reponse": [
      "Elle se jouera à l'envers (de `to` vers `from`)"
    ],
    "explication": "La valeur `reverse` pour `animation-direction` inverse le sens de lecture des `@keyframes`."
  },
  {
    "id": 3148,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "```css\n.card {\n  filter: blur(5px);\n}\n```\nQuel sera l'effet sur l'élément `.card` ?",
    "options": [
      "Il sera plus grand",
      "Il sera en noir et blanc",
      "Il sera flou",
      "Il sera inversé"
    ],
    "reponse": [
      "Il sera flou"
    ],
    "explication": "La fonction `blur()` de la propriété `filter` applique un effet de flou gaussien. La valeur en pixels (`px`) contrôle l'intensité du flou."
  },
  {
    "id": 3149,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "En observant le code HTML et CSS, quelles affirmations sont correctes concernant l'affichage final ?\n```html\n<p>Ce paragraphe est visible.</p>\n<p class=\"mas\">Ce paragraphe est masqué.</p>\n<p>Celui-ci est aussi visible.</p>\n```\n```css\n.mas {\n  display: none;\n}\n```",
    "options": [
      "Le deuxième paragraphe sera complètement invisible.",
      "Tous les paragraphes seront masqués.",
      "L'espace occupé par le deuxième paragraphe sera libéré (les autres paragraphes se rapprocheront).",
      "Le deuxième paragraphe sera visible mais transparent."
    ],
    "reponse": [
      "Le deuxième paragraphe sera complètement invisible.",
      "L'espace occupé par le deuxième paragraphe sera libéré (les autres paragraphes se rapprocheront)."
    ],
    "explication": "La règle CSS `.mas { display: none; }` cible tous les éléments avec la classe `mas`. La propriété `display: none;` retire complètement l'élément de la page ; il devient invisible et n'occupe plus aucun espace."
  },
  {
    "id": 3150,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Quelles sont des valeurs valides pour `animation-direction` ?",
    "options": [
      "`normal`",
      "`reverse`",
      "`alternate`",
      "`alternate-reverse`"
    ],
    "reponse": [
      "`normal`",
      "`reverse`",
      "`alternate`",
      "`alternate-reverse`"
    ],
    "explication": "Ces quatre valeurs contrôlent la direction et le cycle de lecture de l'animation."
  },
  {
    "id": 3151,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "En observant la règle CSS ci-dessous, quelles affirmations sont correctes concernant les éléments `<p class=\"special\">` ?\n```css\np.special {\n  font: bold 16px Arial;\n  text-align: center;\n}\n```",
    "options": [
      "Le texte sera en gras.",
      "Le texte sera centré horizontalement.",
      "La police utilisée sera Arial.",
      "La taille de la police sera de 16%."
    ],
    "reponse": [
      "Le texte sera en gras.",
      "Le texte sera centré horizontalement.",
      "La police utilisée sera Arial."
    ],
    "explication": "La super-propriété `font` définit ici le `font-weight` (`bold`), la `font-size` (`16px`) et la `font-family` (`Arial`). La propriété `text-align` centre le contenu de l'élément."
  },
  {
    "id": 3152,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "En observant le code ci-dessous, quelles affirmations sont vraies concernant le style du paragraphe ?\n```html\n<p class=\"important\">Texte d'avertissement.</p>\n<p>Texte normal.</p>\n```\n```css\np {\n  color: blue;\n}\n.important {\n  font-weight: bold;\n}\n```",
    "options": [
      "Le premier paragraphe sera en gras.",
      "Tous les paragraphes seront en gras.",
      "Le premier paragraphe sera bleu et en gras.",
      "Le deuxième paragraphe sera bleu et pas en gras."
    ],
    "reponse": [
      "Le premier paragraphe sera en gras.",
      "Le premier paragraphe sera bleu et en gras.",
      "Le deuxième paragraphe sera bleu et pas en gras."
    ],
    "explication": "La règle `p` s'applique à tous les paragraphes, leur donnant la couleur bleue. La règle `.important` s'ajoute uniquement au premier paragraphe, le mettant en gras. Le premier paragraphe hérite donc des deux styles."
  },
  {
    "id": 3153,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Complétez la règle CSS avec la valeur correcte pour que les bordures des cellules d'un tableau soient fusionnées en une seule.\n```css\ntable {\n  border-collapse: ...;\n}\n```",
    "options": [],
    "reponse": [
      "collapse"
    ],
    "explication": "La propriété `border-collapse` avec la valeur `collapse` est utilisée pour que les cellules de tableau partagent une seule et même bordure, ce qui donne un aspect plus net et moderne."
  },
  {
    "id": 3154,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Un `div` a `width: 50%;`. De quoi cette largeur dépend-elle ?",
    "options": [
      "De la largeur de la fenêtre du navigateur",
      "De la largeur de son contenu",
      "De la largeur de son élément parent",
      "De la hauteur de l'élément"
    ],
    "reponse": [
      "De la largeur de son élément parent"
    ],
    "explication": "Les pourcentages pour `width` et `height` sont calculés par rapport aux dimensions du bloc conteneur parent."
  },
  {
    "id": 3155,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Complétez la règle d'animation pour que l'animation `mon-effet` ne se joue qu'une seule fois.\n```css\n.element {\n  animation-name: mon-effet;\n  animation-duration: 2s;\n  animation-iteration-count: ...;\n}\n```",
    "options": [],
    "reponse": [
      "1"
    ],
    "explication": "La propriété `animation-iteration-count` contrôle le nombre de fois qu'une animation se répète. La valeur `1`, qui est aussi la valeur par défaut, indique que l'animation ne doit se jouer qu'une seule fois."
  },
{
  "id": 3156,
  "type": "zone_saisie",
  "theme": "CSS",
  "niveau": "avance",
  "question": "Quelle est la syntaxe pour appliquer une transition de 3 secondes sur la propriété `background-color` ?",
  "options": [],
  "reponse": [
    "`transition: background-color 3s;`"
  ],
  "explication": "La propriété raccourcie `transition` s’écrit en général : `propriété`, `durée`, puis éventuellement `fonction de temporisation` et `délai`. Ici, seule la durée (3s) est définie."
},
  {
    "id": 3157,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "En observant le code ci-dessous, comment le texte sera-t-il affiché ?\n```html\n<div class=\"boite\">\n  Ce texte est délibérément très long pour illustrer l'effet de la propriété overflow.\n</div>\n```\n```css\n.boite {\n  width: 150px;\n  height: 50px;\n  border: 1px solid white;\n  overflow: hidden;\n}\n```",
    "options": [
      "Le texte entier sera visible et la boîte va s'agrandir.",
      "Des barres de défilement apparaîtront pour lire tout le texte.",
      "Seule la partie du texte qui rentre dans la boîte de 150x50px sera visible, le reste sera coupé.",
      "Le texte débordera et sera visible à l'extérieur des bordures de la boîte."
    ],
    "reponse": [
      "Seule la partie du texte qui rentre dans la boîte de 150x50px sera visible, le reste sera coupé."
    ],
    "explication": "La propriété `overflow` avec la valeur `hidden` instruit le navigateur de masquer tout contenu qui dépasse les dimensions (`width` et `height`) de l'élément. Le contenu qui déborde est donc coupé et rendu invisible."
  },
  {
    "id": 3158,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Complétez la règle CSS manquante pour que les liens hypertextes (`<a>`) déjà visités par l'utilisateur soient complètement masqués et n'occupent plus d'espace.\n```css\na:visited {\n  ...\n}\n```",
    "options": [],
    "reponse": [
      "display: none;"
    ],
    "explication": "La pseudo-classe `:visited` cible les liens que l'utilisateur a déjà consultés. En lui appliquant la propriété `display: none;`, on retire complètement ces liens de l'affichage de la page."
  },
  {
    "id": 3159,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Écrivez le sélecteur CSS manquant pour cibler uniquement les paragraphes (`<p>`) qui ont la classe `important`.\n```css\n... {\n  font-weight: bold;\n}\n```",
    "options": [],
    "reponse": [
      "p.important"
    ],
    "explication": "Pour cibler un élément spécifique qui possède une classe donnée, on accole le nom de l'élément (`p`) au sélecteur de classe (`.important`) sans aucun espace entre les deux."
  },
  {
    "id": 3160,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Pour qu'une ombre noire, sans décalage, avec un flou de `10px` apparaisse au survol d'un élément `.boite`, complétez la règle CSS manquante.\n```css\n.boite:hover {\n  ...\n}\n```",
    "options": [],
    "reponse": [
      "box-shadow: 0 0 10px black;"
    ],
    "explication": "La pseudo-classe `:hover` applique le style au survol. Pour créer une ombre diffuse sans décalage, on utilise `box-shadow` avec des décalages horizontal et vertical à `0`, suivis du rayon de flou (ici `10px`) et de la couleur."
  },
  {
    "id": 3161,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Complétez la règle CSS manquante pour que les couleurs de l'image soient totalement inversées.\n```css\nimg.inverted {\n  filter: ...;\n}\n```",
    "options": [],
    "reponse": [
      "invert(100%)"
    ],
    "explication": "La fonction `invert()` de la propriété `filter` est utilisée pour inverser les couleurs d'un élément. Une valeur de `100%` (ou `1`) correspond à une inversion complète des couleurs."
  },
  {
    "id": 3162,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Complétez la règle CSS manquante pour appliquer une bordure inférieure double, rouge, et de 4 pixels d'épaisseur à tous les paragraphes.\n```css\np {\n  border-bottom: ...;\n}\n```",
    "options": [],
    "reponse": [
      "4px double red"
    ],
    "explication": "La super-propriété `border-bottom` (non listée mais une extension directe des propriétés de bordure) permet de définir la largeur (`4px`), le style (`double`) et la couleur (`red`) de la bordure inférieure en une seule déclaration."
  },
  {
    "id": 3163,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Écrivez la syntaxe pour une `box-shadow` qui est une lueur bleue de 10px, sans décalage.",
    "options": [],
    "reponse": [
      "`box-shadow: 0 0 10px blue;`"
    ],
    "explication": "En mettant les décalages horizontal et vertical à `0`, l'ombre est centrée. La troisième valeur est le rayon de flou, ce qui crée l'effet de lueur."
  },
  {
    "id": 3164,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "```css\n.element {\n  animation: ma-super-animation 3s infinite alternate;\n}\n```\nComment se déroulera l'animation ?",
    "options": [
      "Elle se jouera une fois en 3 secondes",
      "Elle se jouera à l'infini, toujours dans le même sens",
      "Elle se jouera à l'infini, en alternant le sens (avant, arrière, avant...)",
      "Le code est invalide"
    ],
    "reponse": [
      "Elle se jouera à l'infini, en alternant le sens (avant, arrière, avant...)"
    ],
    "explication": "La valeur `infinite` assure la répétition sans fin, et `alternate` inverse la direction de l'animation à chaque cycle."
  },
  {
    "id": 3165,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Comment cibler un élément `<input>` qui est de type `text` et qui est actuellement focus ?",
    "options": [],
    "reponse": [
      "`input[type=text]:focus`"
    ],
    "explication": "On peut chaîner un sélecteur d'attribut (`[type=text]`) avec une pseudo-classe (`:focus`) pour cibler un état très spécifique."
  },
  {
    "id": 3166,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Si un `div` parent a `font-size: 20px;`, et son enfant `p` a `width: 50%;`, quelle sera la largeur calculée du paragraphe ?",
    "options": [
      "`10px`",
      "`50%` de la largeur de la fenêtre",
      "`50%` de la largeur du `div` parent",
      "La `font-size` n'a pas d'impact"
    ],
    "reponse": [
      "`50%` de la largeur du `div` parent"
    ],
    "explication": "La largeur en pourcentage (`%`) est toujours calculée par rapport à la largeur du bloc conteneur parent, pas par rapport à la taille de la police."
  },
  {
    "id": 3167,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Étant donné le code suivant, quelles affirmations sont correctes concernant l'affichage des deux boîtes ?\n```html\n<div class=\"boite\">A</div>\n<div class=\"boite\">B</div>\n```\n```css\n.boite {\n  display: inline-block;\n  margin: 10px;\n  width: 50px;\n}\n```",
    "options": [
      "L'espace horizontal total entre les deux boîtes sera de `20px`.",
      "Les deux boîtes s'afficheront l'une en dessous de l'autre.",
      "L'espace horizontal entre les deux boîtes sera de `10px` (à cause de la fusion des marges).",
      "Les deux boîtes s'afficheront sur la même ligne, côte à côte."
    ],
    "reponse": [
      "L'espace horizontal total entre les deux boîtes sera de `20px`.",
      "Les deux boîtes s'afficheront sur la même ligne, côte à côte."
    ],
    "explication": "La propriété `display: inline-block` permet aux éléments de se placer sur la même ligne. Contrairement aux marges verticales, les marges horizontales entre éléments adjacents ne fusionnent pas ; elles s'additionnent. L'espace total est donc la marge droite du premier (`10px`) + la marge gauche du second (`10px`), soit `20px`."
  },
  {
    "id": 3168,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Écrivez la règle CSS pour que tous les liens visités (`<a>`) apparaissent en gris (`gray`).",
    "options": [],
    "reponse": [
      "`a:visited { color: gray; }`"
    ],
    "explication": "La pseudo-classe `:visited` permet de styliser les liens qui ont déjà été cliqués par l'utilisateur."
  },
  {
    "id": 3169,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Un `div` a `position: absolute;`. Il n'a aucun parent positionné. `top: 0; left: 0;` le placera où ?",
    "options": [
      "En haut à gauche de son parent direct",
      "Au centre de la page",
      "En haut à gauche de la fenêtre du navigateur",
      "Le code n'aura pas d'effet"
    ],
    "reponse": [
      "En haut à gauche de la fenêtre du navigateur"
    ],
    "explication": "Si un élément en `position: absolute` ne trouve aucun ancêtre positionné (`relative`, `absolute`, ou `fixed`), son référentiel de positionnement devient le bloc conteneur initial, c'est-à-dire le `<html>` ou le viewport."
  },
  {
    "id": 3170,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Complétez la règle CSS manquante pour que l'image de fond `fond.jpg` s'affiche une seule fois, sans se répéter.\n```css\nbody {\n  background-image: url('fond.jpg');\n  background-repeat: ...;\n}\n```",
    "options": [],
    "reponse": [
      "no-repeat"
    ],
    "explication": "La propriété `background-repeat` avec la valeur `no-repeat` est essentielle pour s'assurer qu'une image d'arrière-plan ne se duplique pas pour remplir l'espace."
  },
  {
    "id": 3171,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Étant donné le code suivant, quelle sera la largeur calculée en pixels de l'élément `.enfant` ?\n```html\n<div class=\"parent\">\n  <div class=\"enfant\"></div>\n</div>\n```\n```css\n.parent {\n  width: 100px;\n}\n.enfant {\n  width: 75%;\n}\n```",
    "options": [
      "`100px`",
      "`75px`",
      "`75%`",
      "Cela dépend de la taille de la fenêtre"
    ],
    "reponse": [
      "`75px`"
    ],
    "explication": "Une largeur définie en pourcentage (`%`) est toujours calculée par rapport à la largeur de l'élément parent. Ici, 75% de 100px est égal à 75px."
  },
  {
    "id": 3172,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Un `<span>` est `inline` par défaut. Si on lui applique la règle `display: inline-block;`, quelles affirmations deviennent vraies ?\n```css\n.mon-span {\n  display: inline-block;\n}\n```",
    "options": [
      "On peut maintenant lui définir une `width` et une `height`.",
      "Il se comportera comme un `<div>` et créera un retour à la ligne.",
      "Il restera sur la même ligne que le texte adjacent.",
      "On peut maintenant lui appliquer `text-align` pour centrer son propre texte."
    ],
    "reponse": [
      "On peut maintenant lui définir une `width` et une `height`.",
      "Il restera sur la même ligne que le texte adjacent."
    ],
    "explication": "La valeur `inline-block` est un hybride : l'élément reste 'en ligne' (ne crée pas de retour à la ligne), mais il acquiert la capacité d'avoir des dimensions (`width`, `height`) et des marges verticales, comme un élément de type `block`."
  },
  {
    "id": 3173,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Complétez le sélecteur CSS manquant pour que la couleur de fond d'un lien (`<a>`) passe au rouge uniquement pendant le bref instant où l'utilisateur clique dessus.\n```css\n... {\n  background-color: red;\n}\n```",
    "options": [],
    "reponse": [
      "a:active"
    ],
    "explication": "La pseudo-classe `:active` s'applique à un élément, comme un lien, uniquement pendant la durée de son activation (par exemple, entre le clic et le relâchement du bouton de la souris)."
  },
  {
    "id": 3174,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "intermediaire",
    "question": "Étant donné le code suivant, quelles affirmations sont correctes ?\n```html\n<div class=\"boite\"></div>\n<div class=\"boite\"></div>\n```\n```css\n.boite {\n  width: 100px;\n  height: 100px;\n  background-color: blue;\n}\n```",
    "options": [
      "Chaque `div` sera un carré bleu de 100px de côté.",
      "Les deux `div` s'afficheront l'un en dessous de l'autre.",
      "Seul le premier `div` sera bleu.",
      "Les deux `div` s'afficheront sur la même ligne."
    ],
    "reponse": [
      "Chaque `div` sera un carré bleu de 100px de côté.",
      "Les deux `div` s'afficheront l'un en dessous de l'autre."
    ],
    "explication": "La classe `.boite` applique un style à tous les éléments qui la possèdent. Par défaut, un `<div>` est un élément de type `block`, ce qui signifie qu'il occupe toute la largeur disponible et crée un retour à la ligne avant et après lui."
  },
  {
    "id": 3175,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "En utilisant la super-propriété `margin`, complétez la règle pour appliquer une marge de `30px` en haut et en bas, et de `10px` à gauche et à droite.\n```css\n.element {\n  margin: ...;\n}\n```",
    "options": [],
    "reponse": [
      "30px 10px"
    ],
    "explication": "Lorsque deux valeurs sont utilisées pour `margin` ou `padding`, la première valeur s'applique aux marges verticales (haut et bas) et la seconde aux marges horizontales (gauche et droite)."
  },
  {
    "id": 3176,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Étant donné le code suivant, comment le texte du paragraphe sera-t-il affiché ?\n```html\n<p class=\"code\">Hello World</p>\n```\n```css\n.code {\n  font-family: monospace;\n}\n```",
    "options": [
      "Avec une police à espacement proportionnel (standard)",
      "Avec une police à espacement fixe (toutes les lettres ont la même largeur)",
      "En gras et en italique",
      "Le code est invalide et le style ne s'appliquera pas"
    ],
    "reponse": [
      "Avec une police à espacement fixe (toutes les lettres ont la même largeur)"
    ],
    "explication": "La valeur `monospace` pour `font-family` est un nom de famille générique. Elle demande au navigateur d'utiliser la police à espacement fixe par défaut du système, où chaque caractère occupe la même largeur, ce qui est idéal pour afficher du code."
  },
  {
    "id": 3177,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "```css\n@keyframes pulse {\n  50% { transform: scale(1.1); }\n}\n.item {\n  animation: pulse 2s infinite;\n}\n```\nQuelles sont les affirmations correctes ?",
    "options": [
      "L'élément grandira de 10% au milieu de l'animation",
      "L'élément reviendra à sa taille normale à la fin de chaque cycle",
      "L'animation se répètera à l'infini",
      "L'élément restera agrandi à la fin"
    ],
    "reponse": [
      "L'élément grandira de 10% au milieu de l'animation",
      "L'élément reviendra à sa taille normale à la fin de chaque cycle",
      "L'animation se répètera à l'infini"
    ],
    "explication": "Les keyframes `0%` (ou `from`) et `100%` (ou `to`) sont implicitement à l'état initial (pas de transformation). L'animation va donc de `scale(1)` à `scale(1.1)` puis revient à `scale(1)` en boucle."
  },
  {
    "id": 3178,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Écrivez le sélecteur CSS pour cibler tous les paragraphes (`p`) ayant la classe `article`.",
    "options": [],
    "reponse": [
      "`p.article`"
    ],
    "explication": "Le sélecteur descendant `article p` cible tous les paragraphes qui sont des descendants d'un élément `<article>`."
  },
  {
    "id": 3179,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Complétez la règle CSS manquante pour que tous les liens hypertextes (`<a>`) de la page apparaissent en gras.\n```css\na {\n  ...\n}\n```",
    "options": [],
    "reponse": [
      "font-weight: bold;"
    ],
    "explication": "Le sélecteur de type `a` cible tous les liens. La propriété `font-weight` avec la valeur `bold` est la méthode standard pour mettre un texte en gras."
  },
  {
    "id": 3180,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Complétez la règle CSS manquante pour changer la couleur de fond en `lightgray` pour tous les éléments de liste (`<li>`) lorsqu'ils sont survolés par la souris.\n```css\nli:hover {\n  ...\n}\n```",
    "options": [],
    "reponse": [
      "background-color: lightgray;"
    ],
    "explication": "La pseudo-classe `:hover` applique le style au survol. La propriété `background-color` est utilisée pour changer la couleur d'arrière-plan de l'élément."
  },
  {
    "id": 3181,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Étant donné le code suivant, quelle sera la taille visuelle finale de l'élément `.boite` ?\n```css\n.boite {\n  width: 100px;\n  height: 50px;\n  transform: scale(1.5);\n}\n```",
    "options": [
      "Largeur 100px, Hauteur 50px",
      "Largeur 150px, Hauteur 75px",
      "Largeur 101.5px, Hauteur 51.5px",
      "La taille ne changera pas, l'élément sera juste déplacé."
    ],
    "reponse": [
      "Largeur 150px, Hauteur 75px"
    ],
    "explication": "La fonction `transform: scale(1.5);` agrandit l'élément de 50% sur tous les axes. Ses dimensions visuelles deviennent donc `100px * 1.5 = 150px` en largeur et `50px * 1.5 = 75px` en hauteur."
  },
  {
    "id": 3182,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Étant donné la règle CSS suivante, quelles affirmations sont correctes concernant un élément `<div class=\"boite\">` ?\n```css\n.boite {\n  width: 100px;\n  border: 5px solid blue;\n}\n```",
    "options": [
      "La largeur totale visible de l'élément sera de `110px`.",
      "La largeur visible de l'élément restera de `100px`.",
      "L'élément aura une bordure bleue pleine sur tous les côtés.",
      "La bordure sera à l'intérieur de la `width` de 100px."
    ],
    "reponse": [
      "La largeur totale visible de l'élément sera de `110px`.",
      "L'élément aura une bordure bleue pleine sur tous les côtés."
    ],
    "explication": "Par défaut, la `border` est ajoutée à l'extérieur de la `width` de l'élément. La largeur totale visible est donc la somme de la `width` (`100px`) plus la `border-left` (`5px`) et la `border-right` (`5px`), soit `110px`."
  },
  {
    "id": 3183,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Étant donné la règle CSS suivante, quelles affirmations sont correctes concernant le comportement du tableau ?\n```css\ntable {\n  table-layout: fixed;\n  width: 100%;\n}\n```",
    "options": [
      "La largeur des colonnes s'adaptera dynamiquement au contenu de la cellule la plus large.",
      "La largeur des colonnes sera calculée une seule fois, en se basant sur la largeur des en-têtes ou de la première ligne.",
      "Le tableau pourrait s'afficher plus rapidement.",
      "Cette propriété ne fonctionne que si les bordures sont fusionnées (`border-collapse: collapse`)."
    ],
    "reponse": [
      "La largeur des colonnes sera calculée une seule fois, en se basant sur la largeur des en-têtes ou de la première ligne.",
      "Le tableau pourrait s'afficher plus rapidement."
    ],
    "explication": "La propriété `table-layout: fixed;` utilise un algorithme de mise en page plus rapide. La largeur du tableau et de ses colonnes est déterminée par les largeurs définies et non par le contenu des cellules, ce qui accélère le temps d'affichage."
  },
  {
    "id": 3184,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "En observant cette règle, quelles affirmations sont correctes concernant les animations qui se produisent au survol de l'élément `.bouton` ?\n```css\n.bouton:hover {\n  /* transition: <propriété> <durée> <délai> */\n  transition: background-color 2s 0s, transform 1s 0.5s;\n}\n```",
    "options": [
      "L'animation de la couleur de fond démarre avant l'animation de la transformation.",
      "L'animation de la transformation se termine avant l'animation de la couleur de fond.",
      "Les deux animations durent 2 secondes.",
      "L'animation de la transformation démarre immédiatement, sans délai."
    ],
    "reponse": [
      "L'animation de la couleur de fond démarre avant l'animation de la transformation.",
      "L'animation de la transformation se termine avant l'animation de la couleur de fond."
    ],
    "explication": "On peut définir plusieurs transitions en les séparant par une virgule. Le changement de couleur commence immédiatement (`0s` de délai) et dure `2s`. La transformation commence après `0.5s` et dure `1s`, se terminant donc à `1.5s` (0.5s + 1s)."
  },
  {
    "id": 3185,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Complétez la règle CSS avec la valeur de `position` correcte pour qu'un élément se comporte normalement jusqu'à ce qu'il atteigne 10px du haut de la fenêtre, où il restera 'collé' lors du défilement.\n```css\n.menu-collant {\n  position: ...;\n  top: 10px;\n}\n```",
    "options": [],
    "reponse": [
      "sticky"
    ],
    "explication": "La valeur `sticky` pour la propriété `position` crée un positionnement hybride : l'élément reste dans le flux normal de la page jusqu'à ce qu'il atteigne le seuil spécifié par `top`, `bottom`, etc., moment où il se fixe à l'écran."
  },
  {
    "id": 3186,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "En observant ces règles CSS, quelles affirmations sur le comportement d'un lien hypertexte sont correctes ?\n```css\na:link { color: blue; }\na:visited { color: purple; }\na:active { color: red; }\n```",
    "options": [
      "Un lien non visité apparaîtra en bleu.",
      "Pendant l'instant précis du clic, le lien deviendra rouge.",
      "Le lien deviendra violet au survol de la souris.",
      "Après avoir été cliqué, le lien s'affichera en violet lors des prochaines visites."
    ],
    "reponse": [
      "Un lien non visité apparaîtra en bleu.",
      "Pendant l'instant précis du clic, le lien deviendra rouge.",
      "Après avoir été cliqué, le lien s'affichera en violet lors des prochaines visites."
    ],
    "explication": "Les pseudo-classes `:link`, `:visited`, et `:active` permettent de styliser les différents états d'un lien : son état initial (`:link`), son état après visite (`:visited`), et son état pendant le clic (`:active`)."
  },
{
  "id": 3187,
  "type": "choix_multiple",
  "theme": "CSS",
  "niveau": "avance",
  "question": "```css\n@keyframes tilt {\n  30% { transform: skewX(20deg); }\n  60% { transform: skewX(-20deg); }\n}\n.item {\n  animation: tilt 3s infinite;\n}\n```\nQuelles sont les affirmations correctes ?",
  "options": [
    "L'élément sera incliné de 20° vers la droite à 30% de l'animation",
    "L'élément sera incliné de 20° vers la gauche à 60% de l'animation",
    "L'élément reviendra à sa position initiale à la fin de chaque cycle",
    "L'animation s’exécutera une seule fois"
  ],
  "reponse": [
    "L'élément sera incliné de 20° vers la droite à 30% de l'animation",
    "L'élément sera incliné de 20° vers la gauche à 60% de l'animation",
    "L'élément reviendra à sa position initiale à la fin de chaque cycle"
  ],
  "explication": "Les keyframes implicites `0%` et `100%` correspondent à l’état initial (`transform: none`). L’élément passe de sa position normale à une inclinaison de +20° à 30%, puis -20° à 60%, et revient à sa position normale en boucle grâce à `infinite`."
}
,
  {
    "id": 3188,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Complétez la règle CSS manquante pour que le texte des paragraphes à l'intérieur d'un `<article>` soit justifié (aligné sur les deux marges).\n```css\narticle p {\n  text-align: ...;\n}\n```",
    "options": [],
    "reponse": [
      "justify"
    ],
    "explication": "La valeur `justify` pour la propriété `text-align` étire les lignes de texte pour que les bords gauche et droit soient alignés, créant des blocs de texte nets."
  },
  {
    "id": 3189,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Étant donné le code suivant, quelles affirmations sont correctes concernant l'élément `.boite` lorsqu'on le survole avec la souris ?\n```html\n<div class=\"boite\"></div>\n```\n```css\n.boite {\n  width: 100px;\n  height: 100px;\n  background-color: blue;\n  transition: all 0.5s;\n}\n.boite:hover {\n  background-color: red;\n  transform: rotate(45deg);\n}\n```",
    "options": [
      "La couleur de fond passera instantanément du bleu au rouge.",
      "La boîte tournera de 45 degrés en 0.5 seconde.",
      "La couleur de fond passera du bleu au rouge en 0.5 seconde.",
      "Le changement de couleur et la rotation se produiront en même temps."
    ],
    "reponse": [
      "La boîte tournera de 45 degrés en 0.5 seconde.",
      "La couleur de fond passera du bleu au rouge en 0.5 seconde.",
      "Le changement de couleur et la rotation se produiront en même temps."
    ],
    "explication": "La propriété `transition: all 0.5s;` sur la classe `.boite` s'applique à toutes les propriétés qui changent sur l'état `:hover`. Par conséquent, `background-color` et `transform` s'animeront toutes les deux sur une durée de 0.5 seconde."
  },
  {
    "id": 3190,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Écrivez la règle CSS qui change la couleur de fond en `lightgray` pour tous les `li` survolés par la souris.",
    "options": [],
    "reponse": [
      "`li:hover { background-color: lightgray; }`"
    ],
    "explication": "En combinant le sélecteur de type `li` avec la pseudo-classe `:hover`, on peut créer des effets interactifs sur les éléments d'une liste."
  },
  {
    "id": 3191,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Étant donné la règle CSS suivante, quelles affirmations sont correctes ?\n```css\n.transparent {\n  opacity: 0.5;\n}\n```",
    "options": [
      "L'élément et tout son contenu (texte, images) deviendront transparents à 50%.",
      "Seul l'arrière-plan de l'élément deviendra transparent.",
      "L'élément sera complètement invisible.",
      "La valeur `0.5` est équivalente à la valeur `50%`."
    ],
    "reponse": [
      "L'élément et tout son contenu (texte, images) deviendront transparents à 50%."
    ],
    "explication": "La propriété `opacity` affecte l'élément dans son intégralité, y compris son contenu et ses bordures. Une valeur de `0` le rend complètement invisible, et `1` le rend complètement opaque."
  },
  {
    "id": 3192,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Complétez le code avec la super-propriété correcte pour définir à la fois la couleur de fond et l'image de fond en une seule règle.\n```css\nbody {\n  ...: #000 url('image.jpg');\n}\n```",
    "options": [],
    "reponse": [
      "background"
    ],
    "explication": "La super-propriété `background` est un raccourci qui permet de définir plusieurs propriétés d'arrière-plan (comme `background-color` et `background-image`) en une seule déclaration."
  },
  {
    "id": 3193,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Complétez la règle CSS avec la valeur qui fera jouer l'animation d'abord en avant, puis en arrière, puis en avant, etc.\n```css\n.element {\n  animation-name: rebond;\n  animation-duration: 2s;\n  animation-iteration-count: infinite;\n  animation-direction: ...;\n}\n```",
    "options": [],
    "reponse": [
      "alternate"
    ],
    "explication": "La valeur `alternate` pour la propriété `animation-direction` est utilisée pour que l'animation inverse son sens à chaque cycle, créant un effet de va-et-vient fluide."
  },
  {
    "id": 3194,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Quelle est la différence entre `display: inline-block` et `float: left` ?",
    "options": [
      "Aucune, le résultat est le même",
      "`inline-block` place l'élément dans le flux comme un mot, `float` le sort du flux",
      "`float` ne permet pas de définir de `width`",
      "`inline-block` ne fonctionne que pour les images"
    ],
    "reponse": [
      "`inline-block` place l'élément dans le flux comme un mot, `float` le sort du flux"
    ],
    "explication": "`inline-block` est plus prévisible pour créer des grilles simples car les éléments restent dans le flux normal. `float` est une technique plus ancienne qui sort l'élément du flux, ce qui peut compliquer la gestion des éléments suivants."
  },
  {
    "id": 3195,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Quelle règle CSS est la plus appropriée pour qu'une image de fond (`fond.jpg`) couvre entièrement l'arrière-plan de la page, sans se répéter et en conservant ses proportions (même si une partie de l'image est coupée) ?",
    "options": [
      "`background: url('fond.jpg') repeat-x;`",
      "`background: url('fond.jpg') no-repeat; background-size: contain;`",
      "`background: url('fond.jpg') no-repeat; background-size: 100% 100%;`",
      "`background: url('fond.jpg') no-repeat; background-size: cover;`"
    ],
    "reponse": [
      "`background: url('fond.jpg') no-repeat; background-size: cover;`"
    ],
    "explication": "La propriété `background-size` avec la valeur `cover` redimensionne l'image pour qu'elle remplisse complètement le conteneur tout en conservant son ratio, ce qui peut la rogner. La valeur `contain` assure que toute l'image est visible, et `100% 100%` peut la déformer."
  },
  {
    "id": 3196,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Complétez la règle CSS manquante pour que les couleurs d'une image soient inversées à 50%.\n```css\nimg.demi-inverse {\n  filter: ...;\n}\n```",
    "options": [],
    "reponse": [
      "invert(50%)"
    ],
    "explication": "La propriété `filter` avec la fonction `invert()` inverse les couleurs d'un élément. Une valeur de `50%` correspond à une inversion partielle, tandis que `100%` serait une inversion totale."
  },
  {
    "id": 3197,
    "type": "choix_simple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Un élément parent a `overflow: hidden`. Un de ses enfants en `position: absolute` dépasse les bords du parent. L'enfant sera-t-il visible ?",
    "options": [
      "Oui, car la position absolue ignore l'overflow du parent",
      "Non, l'enfant sera coupé par les bords du parent",
      "Seulement si le parent a une position `relative`",
      "Oui, mais seulement la partie qui dépasse horizontalement"
    ],
    "reponse": [
      "Non, l'enfant sera coupé par les bords du parent"
    ],
    "explication": "`overflow: hidden` crée un contexte de formatage qui coupe tout ce qui en dépasse, y compris les enfants positionnés de manière absolue."
  },
  {
    "id": 3198,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Quelle est la syntaxe pour appliquer une rotation de 45 degrés ET un agrandissement de 50% en même temps à un élément ?",
    "options": [],
    "reponse": [
      "`transform: rotate(45deg) scale(1.5);`"
    ],
    "explication": "On peut combiner plusieurs fonctions de `transform` en les listant les unes après les autres, séparées par un espace, dans la même déclaration."
  },
  {
    "id": 3199,
    "type": "choix_multiple",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Étant donné le code suivant, quelles affirmations sont correctes ?\n```css\n.cercle {\n  width: 100px;\n  height: 100px;\n  border: 2px solid red;\n  border-radius: 50%;\n}\n```",
    "options": [
      "L'élément sera un carré aux coins arrondis.",
      "L'élément sera un cercle parfait.",
      "La bordure sera rouge et solide.",
      "La largeur totale de l'élément sera de 104px."
    ],
    "reponse": [
      "L'élément sera un cercle parfait.",
      "La bordure sera rouge et solide.",
      "La largeur totale de l'élément sera de 104px."
    ],
    "explication": "Appliquer un `border-radius` de `50%` à un élément carré (même `width` et `height`) le transforme en cercle. La bordure (`2px` de chaque côté) s'ajoute à la `width` pour une largeur totale de `100px + 2*2px = 104px`."
  },
  {
    "id": 3200,
    "type": "zone_saisie",
    "theme": "CSS",
    "niveau": "avance",
    "question": "Écrivez un sélecteur qui cible uniquement les `input` de type `text` qui sont désactivés (`disabled`).",
    "options": [],
    "reponse": [
      "`input[type=text][disabled]`"
    ],
    "explication": "On peut chaîner plusieurs sélecteurs d'attributs pour créer des conditions très précises et cibler des éléments dans un état particulier."
  }
]