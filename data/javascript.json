[
  {
    "id": 4001,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle méthode est utilisée pour afficher un message dans une boîte de dialogue simple ?",
    "options": [
      "`document.write()`",
      "`prompt()`",
      "`alert()`",
      "`innerHTML`"
    ],
    "reponse": [
      "`alert()`"
    ],
    "explication": "La fonction `alert()` affiche une boîte de dialogue modale avec un message et un bouton OK."
  },
  {
    "id": 4002,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle méthode affiche une boîte de dialogue demandant à l'utilisateur de saisir une information ?",
    "options": [
      "`alert()`",
      "`prompt()`",
      "`document.write()`",
      "`confirm()`"
    ],
    "reponse": [
      "`prompt()`"
    ],
    "explication": "La fonction `prompt()` affiche une boîte de dialogue avec un message et une zone de saisie pour que l'utilisateur puisse entrer des données."
  },
  {
    "id": 4003,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle méthode permet de sélectionner un élément HTML unique par son identifiant ?",
    "options": [
      "`getElementsByName()`",
      "`getElementById()`",
      "`querySelector()`",
      "`getElement()`"
    ],
    "reponse": [
      "`getElementById()`"
    ],
    "explication": "La méthode `document.getElementById()` est utilisée pour sélectionner un seul élément en se basant sur la valeur de son attribut `id`."
  },
  {
    "id": 4004,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quel opérateur est utilisé pour la concaténation de chaînes de caractères ?",
    "options": [
      "`&`",
      "`&&`",
      "`.`",
      "`+`"
    ],
    "reponse": [
      "`+`"
    ],
    "explication": "L'opérateur `+` est utilisé à la fois pour l'addition arithmétique et pour la concaténation (assemblage) de chaînes."
  },
  {
    "id": 4005,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle propriété d'une chaîne de caractères retourne son nombre de caractères ?",
    "options": [
      "`size`",
      "`count`",
      "`length`",
      "`longueur`"
    ],
    "reponse": [
      "`length`"
    ],
    "explication": "La propriété `length` donne la longueur totale (le nombre de caractères) d'une chaîne."
  },
  {
    "id": 4006,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle propriété d'un tableau retourne son nombre d'éléments ?",
    "options": [
      "`size`",
      "`count`",
      "`length`",
      "`elements`"
    ],
    "reponse": [
      "`length`"
    ],
    "explication": "Comme pour les chaînes, la propriété `length` d'un tableau donne le nombre d'éléments qu'il contient."
  },
  {
    "id": 4007,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quel opérateur est le 'ET' logique ?",
    "options": [
      "`||`",
      "`!`",
      "`&`",
      "`&&`"
    ],
    "reponse": [
      "`&&`"
    ],
    "explication": "L'opérateur `&&` (ET logique) retourne `true` uniquement si les deux conditions qu'il relie sont vraies."
  },
  {
    "id": 4008,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quel opérateur est le 'OU' logique ?",
    "options": [
      "`&&`",
      "`||`",
      "`|`",
      "`or`"
    ],
    "reponse": [
      "`||`"
    ],
    "explication": "L'opérateur `||` (OU logique) retourne `true` si au moins l'une des deux conditions qu'il relie est vraie."
  },
  {
    "id": 4009,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quel opérateur est le 'NON' logique ?",
    "options": [
      "`~`",
      "`not`",
      "`!`",
      "`<>`"
    ],
    "reponse": [
      "`!`"
    ],
    "explication": "L'opérateur `!` (NON logique) inverse la valeur booléenne d'une expression : `!true` devient `false`, et `!false` devient `true`."
  },
  {
    "id": 4010,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quel opérateur est utilisé pour vérifier l'égalité de valeur ?",
    "options": [
      "`=`",
      "`===`",
      "`==`",
      "`is`"
    ],
    "reponse": [
      "`==`"
    ],
    "explication": "L'opérateur de comparaison `==` vérifie si deux valeurs sont égales, après avoir tenté de les convertir à un type commun."
  },
  {
    "id": 4011,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quel opérateur arithmétique retourne le reste d'une division euclidienne ?",
    "options": [
      "`/`",
      "`rem`",
      "`mod`",
      "`%`"
    ],
    "reponse": [
      "`%`"
    ],
    "explication": "L'opérateur modulo `%` est utilisé pour obtenir le reste d'une division entière (par exemple, `10 % 3` retourne 1)."
  },
  {
    "id": 4012,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle fonction convertit une chaîne de caractères en un nombre entier ?",
    "options": [
      "`Number()`",
      "`parseFloat()`",
      "`parseInt()`",
      "`isInteger()`"
    ],
    "reponse": [
      "`parseInt()`"
    ],
    "explication": "La fonction `parseInt()` analyse une chaîne et retourne un entier. Elle peut aussi prendre une base en second argument (ex: binaire, hexadécimal)."
  },
  {
    "id": 4013,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle fonction convertit une chaîne de caractères en un nombre à virgule flottante (réel) ?",
    "options": [
      "`Number()`",
      "`parseInt()`",
      "`parseFloat()`",
      "`isFloat()`"
    ],
    "reponse": [
      "`parseFloat()`"
    ],
    "explication": "La fonction `parseFloat()` analyse une chaîne et retourne un nombre à virgule flottante."
  },
  {
    "id": 4014,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle méthode de l'objet `Math` retourne la racine carrée d'un nombre ?",
    "options": [
      "`Math.sqrt()`",
      "`Math.pow()`",
      "`Math.root()`",
      "`Math.squareRoot()`"
    ],
    "reponse": [
      "`Math.sqrt()`"
    ],
    "explication": "La méthode `Math.sqrt(x)` est utilisée pour calculer la racine carrée de `x`."
  },
  {
    "id": 4015,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle méthode de l'objet `Math` retourne l'entier le plus proche d'un nombre ?",
    "options": [
      "`Math.trunc()`",
      "`Math.floor()`",
      "`Math.round()`",
      "`Math.ceil()`"
    ],
    "reponse": [
      "`Math.round()`"
    ],
    "explication": "La méthode `Math.round(x)` arrondit `x` à l'entier le plus proche selon les règles mathématiques standards."
  },
  {
    "id": 4016,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle méthode d'une chaîne de caractères la convertit entièrement en minuscules ?",
    "options": [
      "`toLowerCase()`",
      "`toLower()`",
      "`lowerCase()`",
      "`case('lower')`"
    ],
    "reponse": [
      "`toLowerCase()`"
    ],
    "explication": "La méthode `ch.toLowerCase()` retourne une nouvelle chaîne avec tous les caractères de `ch` en minuscules."
  },
  {
    "id": 4017,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle méthode d'une chaîne de caractères la convertit entièrement en majuscules ?",
    "options": [
      "`toUpperCase()`",
      "`toUpper()`",
      "`upperCase()`",
      "`case('upper')`"
    ],
    "reponse": [
      "`toUpperCase()`"
    ],
    "explication": "La méthode `ch.toUpperCase()` retourne une nouvelle chaîne avec tous les caractères de `ch` en majuscules."
  },
  {
    "id": 4018,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle méthode supprime les espaces au début et à la fin d'une chaîne ?",
    "options": [
      "`trim()`",
      "`strip()`",
      "`clean()`",
      "`removeSpaces()`"
    ],
    "reponse": [
      "`trim()`"
    ],
    "explication": "La méthode `ch.trim()` est très utile pour nettoyer les entrées utilisateur en enlevant les espaces superflus avant et après le texte."
  },
  {
    "id": 4019,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Comment créer un objet représentant la date et l'heure actuelles ?",
    "options": [
      "`Date.now()`",
      "`new Date()`",
      "`getDate()`",
      "`Date()`"
    ],
    "reponse": [
      "`new Date()`"
    ],
    "explication": "L'instruction `new Date()` crée un nouvel objet `Date` initialisé avec la date et l'heure courantes du système."
  },
  {
    "id": 4020,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Si `d` est un objet Date, quelle méthode retourne l'année sur 4 chiffres ?",
    "options": [
      "`d.getYear()`",
      "`d.getFullYear()`",
      "`d.getYearFourDigits()`",
      "`d.getCompleteYear()`"
    ],
    "reponse": [
      "`d.getFullYear()`"
    ],
    "explication": "La méthode `d.getFullYear()` retourne la valeur de l'année complète (par exemple, 2024)."
  },
  {
    "id": 4021,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Si `d` est un objet Date, quelle méthode retourne le jour du mois (1-31) ?",
    "options": [
      "`d.getDay()`",
      "`d.getDate()`",
      "`d.getDayOfMonth()`",
      "`d.getNumber()`"
    ],
    "reponse": [
      "`d.getDate()`"
    ],
    "explication": "La méthode `d.getDate()` retourne le numéro du jour dans le mois, de 1 à 31."
  },
  {
    "id": 4022,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle propriété est utilisée pour modifier dynamiquement le contenu HTML d'un élément ?",
    "options": [
      "`textContent`",
      "`content`",
      "`html`",
      "`innerHTML`"
    ],
    "reponse": [
      "`innerHTML`"
    ],
    "explication": "La propriété `innerHTML` permet de lire ou de remplacer le contenu HTML à l'intérieur d'un élément."
  },
  {
    "id": 4023,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Comment démarrer la lecture d'un élément vidéo ou audio en JavaScript ?",
    "options": [
      "`element.start()`",
      "`element.run()`",
      "`element.play()`",
      "`element.begin()`"
    ],
    "reponse": [
      "`element.play()`"
    ],
    "explication": "La méthode `play()` est utilisée sur les éléments multimédias pour commencer la lecture."
  },
  {
    "id": 4024,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Comment mettre en pause un élément vidéo ou audio en JavaScript ?",
    "options": [
      "`element.stop()`",
      "`element.hold()`",
      "`element.pause()`",
      "`element.wait()`"
    ],
    "reponse": [
      "`element.pause()`"
    ],
    "explication": "La méthode `pause()` est utilisée sur les éléments multimédias pour interrompre la lecture."
  },
  {
    "id": 4025,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quel opérateur de comparaison signifie 'différent de' ?",
    "options": [
      "`<>`",
      "`!==`",
      "`!=`",
      "`not`"
    ],
    "reponse": [
      "`!=`"
    ],
    "explication": "L'opérateur `!=` retourne `true` si les deux opérandes ne sont pas égaux."
  },
  {
    "id": 4026,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quel opérateur de comparaison signifie 'supérieur ou égal à' ?",
    "options": [
      "`=>`",
      "`>=`",
      "`>`",
      "`>==`"
    ],
    "reponse": [
      "`>=`"
    ],
    "explication": "L'opérateur `>=` retourne `true` si l'opérande de gauche est supérieur ou égal à l'opérande de droite."
  },
  {
    "id": 4027,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle fonction permet de vérifier si un argument n'est pas un nombre (Not-a-Number) ?",
    "options": [
      "`isNumber()`",
      "`isNotNumber()`",
      "`isNaN()`",
      "`Number.is()`"
    ],
    "reponse": [
      "`isNaN()`"
    ],
    "explication": "La fonction `isNaN(valeur)` retourne `true` si la `valeur` ne peut pas être convertie en un nombre, et `false` sinon."
  },
  {
    "id": 4028,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Comment changer la valeur de l'attribut `src` d'une image `imgElement` ?",
    "options": [
      "`imgElement.src = 'new.jpg'`",
      "`imgElement.setAttribute('src', 'new.jpg')`",
      "`imgElement.changeSrc('new.jpg')`",
      "`imgElement.value = 'new.jpg'`"
    ],
    "reponse": [
      "`imgElement.src = 'new.jpg'`"
    ],
    "explication": "On peut directement accéder et modifier la plupart des attributs HTML comme s'ils étaient des propriétés de l'objet élément."
  },
  {
    "id": 4029,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Comment changer la couleur du texte d'un élément `elem` en rouge ?",
    "options": [
      "`elem.color = 'red'`",
      "`elem.style.color = 'red'`",
      "`elem.css('color', 'red')`",
      "`elem.style = 'color:red'`"
    ],
    "reponse": [
      "`elem.style.color = 'red'`"
    ],
    "explication": "Pour modifier une propriété CSS en JavaScript, on accède à l'objet `style` de l'élément, puis à la propriété souhaitée (en camelCase)."
  },
  {
    "id": 4030,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle méthode de l'objet `Math` retourne un nombre réel aléatoire entre 0 (inclus) et 1 (exclus) ?",
    "options": [
      "`Math.rand()`",
      "`Math.random()`",
      "`Math.aleatoire()`",
      "`Math.nextFloat()`"
    ],
    "reponse": [
      "`Math.random()`"
    ],
    "explication": "La méthode `Math.random()` est la base pour générer des nombres aléatoires en JavaScript."
  },
  {
    "id": 4031,
    "type": "choix_multiple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quels sont des opérateurs arithmétiques valides en JavaScript ?",
    "options": [
      "`+`",
      "`*`",
      "`%`",
      "`^`"
    ],
    "reponse": [
      "`+`",
      "`*`",
      "`%`"
    ],
    "explication": "JavaScript utilise `+` (addition), `*` (multiplication), et `%` (modulo). L'opérateur `^` est pour le OU exclusif binaire (XOR), pas l'exponentiation."
  },
  {
    "id": 4032,
    "type": "choix_multiple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelles sont des méthodes de l'objet `Math` ?",
    "options": [
      "`Math.abs()`",
      "`Math.sqrt()`",
      "`Math.round()`",
      "`Math.parseInt()`"
    ],
    "reponse": [
      "`Math.abs()`",
      "`Math.sqrt()`",
      "`Math.round()`"
    ],
    "explication": "`abs`, `sqrt`, et `round` sont des méthodes de `Math`. `parseInt` est une fonction globale, pas une méthode de `Math`."
  },
  {
    "id": 4033,
    "type": "choix_multiple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelles sont les méthodes pour afficher une sortie à l'utilisateur ?",
    "options": [
      "`alert()`",
      "`document.write()`",
      "`prompt()`",
      "`innerHTML`"
    ],
    "reponse": [
      "`alert()`",
      "`document.write()`",
      "`innerHTML`"
    ],
    "explication": "`alert()` et `document.write()` sont des méthodes d'affichage. `innerHTML` est une propriété qui permet d'afficher/modifier du contenu. `prompt()` est pour la saisie."
  },
  {
    "id": 4034,
    "type": "choix_multiple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelles sont des méthodes pour convertir une valeur en chaîne de caractères ?",
    "options": [
      "`String()`",
      "`toString()`",
      "`parseInt()`",
      "`Number()`"
    ],
    "reponse": [
      "`String()`",
      "`toString()`"
    ],
    "explication": "La fonction `String(valeur)` et la méthode `valeur.toString()` (pour les dates par exemple) convertissent une valeur en chaîne."
  },
  {
    "id": 4035,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle méthode permet de sélectionner tous les éléments ayant le même attribut `name` ?",
    "options": [
      "`getElementById()`",
      "`getElementsByClass()`",
      "`getElementsByName()`",
      "`queryElementsByName()`"
    ],
    "reponse": [
      "`getElementsByName()`"
    ],
    "explication": "La méthode `document.getElementsByName()` retourne une collection de tous les éléments (comme des boutons radio) qui partagent le même `name`."
  },
  {
    "id": 4036,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle méthode de chaîne retourne la position de la première occurrence d'un caractère ?",
    "options": [
      "`indexOf()`",
      "`search()`",
      "`positionOf()`",
      "`find()`"
    ],
    "reponse": [
      "`indexOf()`"
    ],
    "explication": "La méthode `ch.indexOf(ch1)` recherche `ch1` dans `ch` et retourne l'index de sa première apparition, ou -1 si elle n'est pas trouvée."
  },
  {
    "id": 4037,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle méthode de chaîne retourne la position de la dernière occurrence d'un caractère ?",
    "options": [
      "`indexOf()`",
      "`lastIndexOf()`",
      "`lastPositionOf()`",
      "`searchLast()`"
    ],
    "reponse": [
      "`lastIndexOf()`"
    ],
    "explication": "La méthode `ch.lastIndexOf(ch1)` fonctionne comme `indexOf` mais commence la recherche depuis la fin de la chaîne."
  },
  {
    "id": 4038,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle méthode de chaîne permet d'extraire une partie d'une chaîne entre deux positions ?",
    "options": [
      "`slice()`",
      "`substr()`",
      "`substring()`",
      "`split()`"
    ],
    "reponse": [
      "`substring()`"
    ],
    "explication": "La méthode `ch.substring(debut, fin)` retourne une nouvelle chaîne contenant les caractères de la position `debut` jusqu'à `fin` (non incluse)."
  },
  {
    "id": 4039,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle méthode de chaîne remplace la première occurrence d'une sous-chaîne par une autre ?",
    "options": [
      "`replaceAll()`",
      "`replace()`",
      "`change()`",
      "`substitute()`"
    ],
    "reponse": [
      "`replace()`"
    ],
    "explication": "La méthode `ch.replace(ch1, ch2)` recherche `ch1` dans `ch` et la remplace par `ch2`."
  },
  {
    "id": 4040,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle méthode de l'objet `Math` retourne la valeur absolue d'un nombre ?",
    "options": [
      "`abs()`",
      "`absolute()`",
      "`positive()`",
      "`absoluteValue()`"
    ],
    "reponse": [
      "`abs()`"
    ],
    "explication": "La méthode `Math.abs(x)` retourne la valeur de `x` sans son signe (par exemple, `Math.abs(-5)` retourne 5)."
  },
  {
    "id": 4041,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quelle méthode de l'objet `Math` retourne la partie entière d'un nombre en supprimant sa partie décimale ?",
    "options": [
      "`round()`",
      "`floor()`",
      "`trunc()`",
      "`integer()`"
    ],
    "reponse": [
      "`trunc()`"
    ],
    "explication": "La méthode `Math.trunc(x)` (troncature) supprime simplement les chiffres après la virgule (par exemple, `Math.trunc(3.9)` retourne 3)."
  },
  {
    "id": 4042,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Comment accéder à la valeur d'un champ de texte `inputElement` ?",
    "options": [
      "`inputElement.text`",
      "`inputElement.content`",
      "`inputElement.value`",
      "`inputElement.innerHTML`"
    ],
    "reponse": [
      "`inputElement.value`"
    ],
    "explication": "La propriété `value` contient le texte actuellement saisi par l'utilisateur dans un champ `<input>`."
  },
  {
    "id": 4043,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Comment vérifier si une case `checkboxElement` est cochée ?",
    "options": [
      "`checkboxElement.value`",
      "`checkboxElement.checked`",
      "`checkboxElement.selected`",
      "`checkboxElement.state`"
    ],
    "reponse": [
      "`checkboxElement.checked`"
    ],
    "explication": "La propriété `checked` est un booléen (`true` ou `false`) qui indique l'état d'une case à cocher ou d'un bouton radio."
  },
  {
    "id": 4044,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Comment désactiver un bouton `buttonElement` en JavaScript ?",
    "options": [
      "`buttonElement.disabled = true`",
      "`buttonElement.disable()`",
      "`buttonElement.readonly = true`",
      "`buttonElement.enabled = false`"
    ],
    "reponse": [
      "`buttonElement.disabled = true`"
    ],
    "explication": "La propriété booléenne `disabled` permet d'activer ou de désactiver un élément de formulaire."
  },
  {
    "id": 4045,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Si `d` est un objet Date, que retourne `d.getMonth()` pour le mois de Janvier ?",
    "options": [
      "`1`",
      "`'Janvier'`",
      "`0`",
      "`null`"
    ],
    "reponse": [
      "`0`"
    ],
    "explication": "Attention, la méthode `d.getMonth()` retourne le mois sur une base de 0 (0 pour Janvier, 1 pour Février, etc., jusqu'à 11 pour Décembre)."
  },
  {
    "id": 4046,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Pour obtenir l'indice de l'option choisie dans une liste déroulante `selectElement`, quelle propriété utiliser ?",
    "options": [
      "`selectElement.value`",
      "`selectElement.selectedIndex`",
      "`selectElement.checked`",
      "`selectElement.index`"
    ],
    "reponse": [
      "`selectElement.selectedIndex`"
    ],
    "explication": "La propriété `selectedIndex` retourne l'index (commençant à 0) de l'élément `<option>` actuellement sélectionné dans la liste."
  },
  {
    "id": 4047,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Comment écrire du texte directement dans le document HTML à l'emplacement du script ?",
    "options": [
      "`alert()`",
      "`innerHTML`",
      "`console.log()`",
      "`document.write()`"
    ],
    "reponse": [
      "`document.write()`"
    ],
    "explication": "La méthode `document.write()` insère du contenu HTML directement dans le flux du document."
  },
  {
    "id": 4048,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Comment déclarer un tableau vide en utilisant les littéraux ?",
    "options": [
      "`new Array()`",
      "`[]`",
      "`{}`",
      "`Array.new()`"
    ],
    "reponse": [
      "`[]`"
    ],
    "explication": "L'utilisation des crochets `[]` est la manière la plus moderne et concise de créer un tableau en JavaScript."
  },
  {
    "id": 4049,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quel est le résultat de `5 > 10` ?",
    "options": [
      "`true`",
      "`false`",
      "`5`",
      "`10`"
    ],
    "reponse": [
      "`false`"
    ],
    "explication": "L'opérateur de comparaison `>` (supérieur à) retourne une valeur booléenne. Ici, 5 n'est pas supérieur à 10, donc le résultat est `false`."
  },
  {
    "id": 4050,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "debutant",
    "question": "Quel est le résultat de `10 == '10'` ?",
    "options": [
      "`true`",
      "`false`",
      "`NaN`",
      "`error`"
    ],
    "reponse": [
      "`true`"
    ],
    "explication": "L'opérateur `==` effectue une comparaison après conversion de type. La chaîne `'10'` est convertie en nombre `10`, donc l'égalité est vraie."
  },
  {
    "id": 4051,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet x = '5' + 3;\nalert(x);\n```\nQu'est-ce qui sera affiché ?",
    "options": [
      "`8`",
      "`53`",
      "`NaN`",
      "Une erreur"
    ],
    "reponse": [
      "`53`"
    ],
    "explication": "Lorsque l'opérateur `+` est utilisé avec une chaîne de caractères (`'5'`), il effectue une concaténation et non une addition. Le nombre `3` est converti en chaîne `'3'`."
  },
  {
    "id": 4052,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet y = Number('10.5');\nlet z = parseInt('10.5');\nalert(y + ' ' + z);\n```\nQu'est-ce qui sera affiché ?",
    "options": [
      "`10.5 10.5`",
      "`10 10`",
      "`10.5 10`",
      "`11 11`"
    ],
    "reponse": [
      "`10.5 10`"
    ],
    "explication": "`Number()` convertit la chaîne en nombre, en conservant la partie décimale. `parseInt()` s'arrête au premier caractère non numérique et ignore la partie décimale."
  },
  {
    "id": 4053,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nalert(Math.round(7.5));\n```\nQuel sera le résultat ?",
    "options": [
      "`7`",
      "`8`",
      "`7.5`",
      "`'7.5'`"
    ],
    "reponse": [
      "`8`"
    ],
    "explication": "La méthode `Math.round()` arrondit à l'entier le plus proche. Les nombres se terminant par `.5` sont arrondis à l'entier supérieur."
  },
  {
    "id": 4054,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet ch = 'Bonjour';\nalert(ch.substring(1, 4));\n```\nQu'est-ce qui sera affiché ?",
    "options": [
      "`'onj'`",
      "`'onjo'`",
      "`'B'`",
      "`'jour'`"
    ],
    "reponse": [
      "`'onj'`"
    ],
    "explication": "`substring(debut, fin)` extrait la chaîne de l'index `debut` jusqu'à l'index `fin` non inclus. Ici, les caractères aux index 1 ('o'), 2 ('n'), et 3 ('j')."
  },
  {
    "id": 4055,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet r = Math.random();\n```\nQuelle affirmation est toujours vraie concernant la variable `r` ?",
    "options": [
      "`r` est un entier",
      "`r >= 0` et `r < 1`",
      "`r >= 0` et `r <= 1`",
      "`r` est supérieur à 1"
    ],
    "reponse": [
      "`r >= 0` et `r < 1`"
    ],
    "explication": "`Math.random()` retourne un nombre à virgule flottante dans l'intervalle [0, 1[, ce qui signifie que 0 est inclus mais 1 est exclus."
  },
  {
    "id": 4056,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nalert(isNaN('Hello'));\n```\nQuel sera le résultat ?",
    "options": [
      "`true`",
      "`false`",
      "`NaN`",
      "Une erreur"
    ],
    "reponse": [
      "`true`"
    ],
    "explication": "La chaîne 'Hello' ne peut pas être convertie en un nombre. Par conséquent, `isNaN()` (Est-ce que ce n'est pas un nombre ?) retourne `true`."
  },
  {
    "id": 4057,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nalert(isNaN('123'));\n```\nQuel sera le résultat ?",
    "options": [
      "`true`",
      "`false`",
      "`123`",
      "Une erreur"
    ],
    "reponse": [
      "`false`"
    ],
    "explication": "La chaîne '123' peut être convertie en un nombre. Par conséquent, `isNaN()` (Est-ce que ce n'est pas un nombre ?) retourne `false`."
  },
  {
    "id": 4058,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet date = new Date();\nlet mois = date.getMonth() + 1;\n```\nPourquoi ajoute-t-on `+ 1` au résultat de `getMonth()` ?",
    "options": [
      "Pour obtenir le mois suivant",
      "Parce que les mois sont indexés de 0 à 11",
      "C'est une erreur, il ne faut pas le faire",
      "Pour arrondir le résultat"
    ],
    "reponse": [
      "Parce que les mois sont indexés de 0 à 11"
    ],
    "explication": "La méthode `getMonth()` retourne un index de 0 (Janvier) à 11 (Décembre). Pour obtenir une représentation humaine (1-12), il faut ajouter 1."
  },
  {
    "id": 4059,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet elem = document.getElementById('titre');\nelem.style.backgroundColor = 'yellow';\n```\nQue fait ce code ?",
    "options": [
      "Il change la couleur du texte en jaune",
      "Il change la couleur de fond en jaune",
      "Il ajoute une bordure jaune",
      "Il recherche un élément avec la classe 'titre'"
    ],
    "reponse": [
      "Il change la couleur de fond en jaune"
    ],
    "explication": "La propriété `backgroundColor` (en camelCase) en JavaScript correspond à la propriété CSS `background-color`. Ce code modifie donc le style de l'élément en ligne."
  },
  {
    "id": 4060,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Quelle est la différence entre `document.getElementById()` et `document.getElementsByName()` ?",
    "options": [
      "`getElementById` retourne un seul élément, `getElementsByName` retourne une collection",
      "`getElementById` est pour les `div`, `getElementsByName` pour les `input`",
      "Il n'y a pas de différence",
      "`getElementById` est plus rapide"
    ],
    "reponse": [
      "`getElementById` retourne un seul élément, `getElementsByName` retourne une collection"
    ],
    "explication": "Un `id` doit être unique, donc `getElementById` retourne au plus un élément. Plusieurs éléments peuvent partager le même `name`, donc `getElementsByName` retourne une liste (collection) d'éléments."
  },
  {
    "id": 4061,
    "type": "choix_multiple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet ch = '  Test  ';\nlet ch2 = ch.replace('T', 'B');\nlet ch3 = ch.trim();\n```\nQuelles sont les valeurs de `ch`, `ch2` et `ch3` ?",
    "options": [
      "`ch` est `'  Test  '`",
      "`ch2` est `'  Best  '`",
      "`ch3` est `'Test'`",
      "`ch` est `'Test'`"
    ],
    "reponse": [
      "`ch` est `'  Test  '`",
      "`ch2` est `'  Best  '`",
      "`ch3` est `'Test'`"
    ],
    "explication": "Les méthodes de chaîne en JavaScript sont immuables : elles ne modifient pas la chaîne d'origine mais en retournent une nouvelle. `ch` reste donc inchangée."
  },
  {
    "id": 4062,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nalert(10 / 0);\n```\nQuel sera le résultat ?",
    "options": [
      "`0`",
      "`null`",
      "`Infinity`",
      "Une erreur"
    ],
    "reponse": [
      "`Infinity`"
    ],
    "explication": "En JavaScript, la division par zéro ne provoque pas d'erreur mais retourne la valeur spéciale `Infinity`."
  },
  {
    "id": 4063,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet ch = 'abc';\nalert(ch.indexOf('d'));\n```\nQuel sera le résultat ?",
    "options": [
      "`0`",
      "`null`",
      "`3`",
      "`-1`"
    ],
    "reponse": [
      "`-1`"
    ],
    "explication": "La méthode `indexOf()` retourne `-1` lorsque la sous-chaîne recherchée n'est pas trouvée dans la chaîne principale."
  },
  {
    "id": 4064,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet tab = ['a', 'b', 'c'];\nalert(tab.length);\n```\nQuel sera le résultat ?",
    "options": [
      "`2`",
      "`3`",
      "`'abc'`",
      "`undefined`"
    ],
    "reponse": [
      "`3`"
    ],
    "explication": "La propriété `length` d'un tableau retourne le nombre total d'éléments qu'il contient."
  },
  {
    "id": 4065,
    "type": "choix_multiple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet val = prompt('Age ?');\n```\nQuelles affirmations sur `val` sont vraies si l'utilisateur tape '20' et clique sur OK ?",
    "options": [
      "`val` sera le nombre `20`",
      "`val` sera la chaîne `'20'`",
      "Il faudra utiliser `parseInt(val)` pour faire des calculs",
      "`val` sera `null`"
    ],
    "reponse": [
      "`val` sera la chaîne `'20'`",
      "Il faudra utiliser `parseInt(val)` pour faire des calculs"
    ],
    "explication": "La fonction `prompt()` retourne toujours une chaîne de caractères. Pour l'utiliser comme un nombre, une conversion explicite avec `parseInt()` ou `Number()` est nécessaire."
  },
  {
    "id": 4066,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet audio = document.getElementById('player');\naudio.muted = true;\n```\nQuel est l'effet de ce code ?",
    "options": [
      "Met l'audio en pause",
      "Coupe le son de l'audio",
      "Augmente le volume",
      "Supprime l'élément audio"
    ],
    "reponse": [
      "Coupe le son de l'audio"
    ],
    "explication": "L'attribut booléen `muted` permet de contrôler si le son d'un élément média est activé ou coupé."
  },
  {
    "id": 4067,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet champ = document.getElementById('nom');\nchamp.readonly = true;\n```\nQuelle est la conséquence pour l'utilisateur ?",
    "options": [
      "Le champ est invisible",
      "L'utilisateur ne peut pas modifier la valeur du champ",
      "Le champ est désactivé et sa valeur ne sera pas envoyée",
      "Le champ est vidé"
    ],
    "reponse": [
      "L'utilisateur ne peut pas modifier la valeur du champ"
    ],
    "explication": "La propriété `readonly` empêche l'édition du champ, mais sa valeur est toujours lisible et sera soumise avec le formulaire."
  },
  {
    "id": 4068,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Quelle est la différence entre `Number(ch)` et `parseInt(ch)` ?",
    "options": [
      "Aucune",
      "`Number` gère les décimaux, `parseInt` les ignore",
      "`parseInt` est plus rapide",
      "`Number` retourne une erreur si la conversion échoue, `parseInt` retourne `NaN`"
    ],
    "reponse": [
      "`Number` gère les décimaux, `parseInt` les ignore"
    ],
    "explication": "`Number('12.5')` donne `12.5`, tandis que `parseInt('12.5')` donne `12`. `parseInt` s'arrête au premier caractère qu'il ne reconnaît pas comme un entier."
  },
  {
    "id": 4069,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Si `d = new Date('2024-01-15')`, que retournera `d.toString()` ?",
    "options": [
      "Une chaîne représentant la date, formatée par le navigateur",
      "`2024-01-15`",
      "Un nombre (timestamp)",
      "Une erreur"
    ],
    "reponse": [
      "Une chaîne représentant la date, formatée par le navigateur"
    ],
    "explication": "La méthode `toString()` convertit l'objet Date en une chaîne de caractères lisible par un humain. Le format exact peut varier légèrement entre les navigateurs."
  },
  {
    "id": 4070,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nalert(String.fromCharCode(65, 66, 67));\n```\nQu'est-ce qui sera affiché ?",
    "options": [
      "`'65, 66, 67'`",
      "`198`",
      "`'ABC'`",
      "`'abc'`"
    ],
    "reponse": [
      "`'ABC'`"
    ],
    "explication": "La méthode statique `String.fromCharCode()` convertit une série de codes ASCII en caractères. 65 est le code pour 'A', 66 pour 'B', et 67 pour 'C'."
  },
  {
    "id": 4071,
    "type": "choix_multiple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Étant donné un élément HTML sélectionné dans une variable `elem`, lesquelles de ces syntaxes sont correctes pour modifier son style en JavaScript ?\n```javascript\nlet elem = document.getElementById('mon-element');\n```",
    "options": [
      "`elem.style.color = 'blue';`",
      "`elem.style.background = 'yellow';`",
      "`elem.style.border = '1px solid black';`",
      "`elem.css('margin', '10px');`"
    ],
    "reponse": [
      "`elem.style.color = 'blue';`",
      "`elem.style.background = 'yellow';`",
      "`elem.style.border = '1px solid black';`"
    ],
    "explication": "L'objet `style` d'un élément permet de modifier directement ses propriétés CSS. Les noms de propriétés CSS de plusieurs mots (comme `background-color`) sont écrits en camelCase (`backgroundColor`). La syntaxe `elem.css()` n'est pas du JavaScript natif, mais est utilisée par des bibliothèques comme jQuery."
  },
  {
    "id": 4072,
    "type": "choix_multiple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Quels attributs d'éléments de formulaire peuvent être modifiés via JavaScript selon le document ?",
    "options": [
      "`value`",
      "`checked`",
      "`disabled`",
      "`type`"
    ],
    "reponse": [
      "`value`",
      "`checked`",
      "`disabled`"
    ],
    "explication": "Le document mentionne la manipulation de `value`, `checked`, `disabled`, `readonly`, `src`, et `muted`."
  },
  {
    "id": 4073,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\ndocument.write('<h1>Titre</h1>');\n```\nQuand est-il déconseillé d'utiliser `document.write()` ?",
    "options": [
      "Jamais, c'est toujours sûr",
      "Après que la page a fini de se charger",
      "Dans la balise `<head>`",
      "Pour écrire de courtes chaînes"
    ],
    "reponse": [
      "Après que la page a fini de se charger"
    ],
    "explication": "Si `document.write()` est appelé après le chargement complet de la page (par exemple, dans un `onclick`), il effacera tout le contenu existant de la page avant d'écrire."
  },
  {
    "id": 4074,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet resultat = Number('abc');\n```\nQuelle sera la valeur de `resultat` ?",
    "options": [
      "`'abc'`",
      "`0`",
      "`null`",
      "`NaN`"
    ],
    "reponse": [
      "`NaN`"
    ],
    "explication": "Lorsque la conversion d'une chaîne en nombre est impossible, les fonctions comme `Number()` ou `parseInt()` retournent la valeur spéciale `NaN` (Not-a-Number)."
  },
  {
    "id": 4075,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet ch = '2024-01-01';\nlet pos = ch.indexOf('-');\n```\nQuelle sera la valeur de `pos` ?",
    "options": [
      "`4`",
      "`5`",
      "`3`",
      "`-1`"
    ],
    "reponse": [
      "`4`"
    ],
    "explication": "La méthode `indexOf()` retourne l'index (la position) de la première occurrence du caractère recherché. Le premier '-' se trouve à l'index 4 (le 5ème caractère, car l'indexation commence à 0)."
  },
  {
    "id": 4076,
    "type": "zone_saisie",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "```javascript\n// Obtenir un entier aléatoire entre 0 et 10 (inclus)\nlet alea = Math.trunc(Math.random() * ...);\n```\nComplétez le code.",
    "options": [],
    "reponse": [
      "11"
    ],
    "explication": "`Math.random()` donne un nombre dans [0, 1[. En multipliant par 11, on obtient un nombre dans [0, 11[. `Math.trunc()` arrondit à l'inférieur, donnant un entier de 0 à 10."
  },
  {
    "id": 4077,
    "type": "zone_saisie",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "```javascript\nlet ch = 'Bienvenue';\n// Extraire la sous-chaîne 'Bien'\nlet sub = ch.substring(..., ...);\n```\nComplétez les deux arguments manquants, séparés par une virgule.",
    "options": [],
    "reponse": [
      "0, 4"
    ],
    "explication": "`substring(debut, fin)` extrait les caractères de l'index `debut` (inclus) à `fin` (exclus). Pour 'Bien', il faut les caractères aux index 0, 1, 2 et 3."
  },
  {
    "id": 4078,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "```javascript\nlet radios = document.getElementsByName('choix');\n// Comment vérifier la valeur du radio coché ?\n```\nQuelle est la meilleure approche ?",
    "options": [
      "`radios.value`",
      "Il faut boucler sur `radios` et vérifier la propriété `checked` de chaque élément",
      "`radios[0].value`",
      "`radios.checked.value`"
    ],
    "reponse": [
      "Il faut boucler sur `radios` et vérifier la propriété `checked` de chaque élément"
    ],
    "explication": "`getElementsByName` retourne une collection. Pour trouver l'élément sélectionné, il faut itérer sur cette collection et tester quel élément a sa propriété `checked` à `true`."
  },
  {
    "id": 4079,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "```javascript\nalert(parseInt('1A', 16));\n```\nQuel sera le résultat ?",
    "options": [
      "`1`",
      "`NaN`",
      "`26`",
      "`16`"
    ],
    "reponsse": [
      "`26`"
    ],
    "explication": "Le deuxième argument de `parseInt` spécifie la base de conversion. En base 16 (hexadécimal), '1' vaut 16 et 'A' vaut 10. Le résultat est 16 + 10 = 26."
  },
  {
    "id": 4080,
    "type": "zone_saisie",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "Écrivez une instruction pour afficher une boîte de dialogue qui demande 'Votre nom ?' et stocke le résultat dans une variable `nom`.",
    "options": [],
    "reponse": [
      "`let nom = prompt('Votre nom ?');`"
    ],
    "explication": "La fonction `prompt()` prend en paramètre le message à afficher et retourne la saisie de l'utilisateur sous forme de chaîne de caractères."
  },
  {
    "id": 4081,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "```javascript\nlet ch = 'Le chat est sur le toit';\nalert(ch.replace('le', 'un'));\n```\nQuel sera le résultat ?",
    "options": [
      "`'Le chat est sur un toit'`",
      "`'un chat est sur le toit'`",
      "`'un chat est sur un toit'`",
      "Une erreur"
    ],
    "reponse": [
      "`'un chat est sur le toit'`"
    ],
    "explication": "La méthode `replace()` ne remplace que la première occurrence de la sous-chaîne trouvée."
  },
  {
    "id": 4082,
    "type": "zone_saisie",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "Complétez le code manquant pour stocker l'**index** (la position numérique) de l'option actuellement sélectionnée dans la variable `indice`.\n```javascript\nlet menu = document.getElementById('pays');\nlet indice = menu....;\n```",
    "options": [],
    "reponse": [
      "selectedIndex"
    ],
    "explication": "La propriété `selectedIndex` d'un élément `<select>` retourne directement l'index (un nombre commençant à 0) de l'`<option>` qui est actuellement sélectionnée."
  },
  {
    "id": 4083,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "```javascript\nlet x = (true && false) || (true && !false);\nalert(x);\n```\nQuel sera le résultat ?",
    "options": [
      "`true`",
      "`false`",
      "`undefined`",
      "Une erreur"
    ],
    "reponse": [
      "`true`"
    ],
    "explication": "L'évaluation se fait comme suit : `(false) || (true && true)` -> `false || true` -> `true`."
  },
  {
    "id": 4084,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "Si `prompt()` est annulé par l'utilisateur (clic sur Annuler), quelle est la valeur retournée ?",
    "options": [
      "Une chaîne vide (`''`)",
      "`undefined`",
      "`null`",
      "`false`"
    ],
    "reponse": [
      "`null`"
    ],
    "explication": "Cliquer sur 'Annuler' dans une boîte `prompt()` retourne la valeur `null`, ce qui permet de distinguer une annulation d'une saisie vide."
  },
  {
    "id": 4085,
    "type": "zone_saisie",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "Quelle est la syntaxe pour créer un tableau contenant les nombres 1, 5 et 10 ?",
    "options": [],
    "reponse": [
      "`[1, 5, 10]`"
    ],
    "explication": "La syntaxe littérale `[]` est la manière standard de créer et d'initialiser des tableaux en JavaScript."
  },
  {
    "id": 4086,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "```javascript\nalert(Math.abs(10 - 20));\n```\nQuel sera le résultat ?",
    "options": [
      "`-10`",
      "`10`",
      "`NaN`",
      "Une erreur"
    ],
    "reponse": [
      "`10`"
    ],
    "explication": "L'expression `10 - 20` est évaluée à -10. `Math.abs(-10)` retourne la valeur absolue, qui est 10."
  },
  {
    "id": 4087,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "```javascript\nlet elem = document.getElementById('box');\nelem.style.border = '2px solid red';\n```\nQue fait ce code ?",
    "options": [
      "Il change la couleur de fond",
      "Il ajoute une bordure rouge, solide, de 2px",
      "Il change la couleur du texte",
      "Il ajoute une ombre"
    ],
    "reponse": [
      "Il ajoute une bordure rouge, solide, de 2px"
    ],
    "explication": "On peut utiliser la super-propriété `border` directement dans `element.style` pour définir tous les aspects de la bordure en une seule fois."
  },
  {
    "id": 4088,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "Comment générer un nombre entier aléatoire entre 1 et 6 (simulant un dé) ?",
    "options": [
      "`Math.trunc(Math.random() * 6) + 1`",
      "`Math.round(Math.random() * 6)`",
      "`Math.random(1, 6)`",
      "`parseInt(Math.random() * 7)`"
    ],
    "reponse": [
      "`Math.trunc(Math.random() * 6) + 1`"
    ],
    "explication": "`Math.random() * 6` donne un réel dans [0, 6[. `Math.trunc()` donne un entier de 0 à 5. Ajouter 1 donne bien un entier de 1 à 6."
  },
  {
    "id": 4089,
    "type": "zone_saisie",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "Écrivez le code pour obtenir l'année actuelle et l'afficher dans une alerte.",
    "options": [],
    "reponse": [
      "`alert(new Date().getFullYear());`"
    ],
    "explication": "On crée un nouvel objet `Date` pour le moment présent, puis on appelle directement la méthode `getFullYear()` sur cet objet."
  },
  {
    "id": 4090,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "Que retourne `document.getElementById('inexistant')` si l'élément n'existe pas ?",
    "options": [
      "`undefined`",
      "`false`",
      "Une erreur",
      "`null`"
    ],
    "reponse": [
      "`null`"
    ],
    "explication": "Si aucun élément avec l'ID spécifié n'est trouvé dans le document, la méthode `getElementById` retourne la valeur `null`."
  },
  {
    "id": 4091,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet x = 10;\nlet y = '10';\nalert(x == y);\n```\nQuel est le résultat ?",
    "options": [
      "`true`",
      "`false`",
      "`NaN`",
      "Une erreur"
    ],
    "reponse": [
      "`true`"
    ],
    "explication": "L'opérateur `==` compare les valeurs après une conversion de type. La chaîne `'10'` est convertie en nombre `10`, ce qui rend la comparaison vraie."
  },
  {
    "id": 4092,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet ch = 'JavaScript';\nalert(ch.indexOf('script'));\n```\nQuel est le résultat ?",
    "options": [
      "`4`",
      "`5`",
      "`-1`",
      "`true`"
    ],
    "reponse": [
      "`4`"
    ],
    "explication": "La méthode `indexOf()` retourne l'index de début de la première occurrence de la sous-chaîne. 'script' commence à l'index 4."
  },
  {
    "id": 4093,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet date = new Date('2025-10-05');\nalert(date.getMonth());\n```\nQuel est le résultat ?",
    "options": [
      "`10`",
      "`9`",
      "`'Octobre'`",
      "`5`"
    ],
    "reponse": [
      "`9`"
    ],
    "explication": "La méthode `getMonth()` retourne un index basé sur 0. Octobre étant le 10ème mois, son index est 9."
  },
  {
    "id": 4094,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet resultat = Math.sqrt(-9);\nalert(resultat);\n```\nQuel est le résultat ?",
    "options": [
      "`3`",
      "`-3`",
      "`NaN`",
      "Une erreur"
    ],
    "reponse": [
      "`NaN`"
    ],
    "explication": "La racine carrée d'un nombre négatif n'est pas un nombre réel. JavaScript retourne `NaN` (Not-a-Number) dans ce cas."
  },
  {
    "id": 4095,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet ch = '  hello  ';\nalert(ch.trim().length);\n```\nQuel est le résultat ?",
    "options": [
      "`9`",
      "`7`",
      "`5`",
      "`'hello'`"
    ],
    "reponse": [
      "`5`"
    ],
    "explication": "`ch.trim()` retourne une nouvelle chaîne `'hello'`. La propriété `length` de cette nouvelle chaîne est 5."
  },
  {
    "id": 4096,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet x = (5 > 3) && (10 < 5);\nalert(x);\n```\nQuel est le résultat ?",
    "options": [
      "`true`",
      "`false`",
      "`undefined`",
      "`1`"
    ],
    "reponse": [
      "`false`"
    ],
    "explication": "La première condition `(5 > 3)` est vraie, mais la seconde `(10 < 5)` est fausse. L'opérateur ET (`&&`) requiert que les deux conditions soient vraies."
  },
  {
    "id": 4097,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet y = (5 != 5) || (10 >= 10);\nalert(y);\n```\nQuel est le résultat ?",
    "options": [
      "`true`",
      "`false`",
      "`undefined`",
      "`0`"
    ],
    "reponse": [
      "`true`"
    ],
    "explication": "La première condition `(5 != 5)` est fausse, mais la seconde `(10 >= 10)` est vraie. L'opérateur OU (`||`) ne requiert qu'une seule des deux conditions pour être vraie."
  },
  {
    "id": 4098,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet elems = document.getElementsByName('option');\n// 'elems' est une collection de 3 boutons radio\nalert(elems.length);\n```\nQuel est le résultat ?",
    "options": [
      "`1`",
      "`2`",
      "`3`",
      "`undefined`"
    ],
    "reponse": [
      "`3`"
    ],
    "explication": "`getElementsByName` retourne une collection (similaire à un tableau) de tous les éléments correspondants. Sa propriété `length` donne leur nombre."
  },
  {
    "id": 4099,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet ch = 'abcde';\nalert(ch.replace('x', 'y'));\n```\nQuel est le résultat ?",
    "options": [
      "`'y'`",
      "`'abcde'`",
      "`null`",
      "Une erreur"
    ],
    "reponse": [
      "`'abcde'`"
    ],
    "explication": "Si la sous-chaîne à remplacer n'est pas trouvée, `replace()` retourne simplement la chaîne originale sans modification."
  },
  {
    "id": 4100,
    "type": "choix_multiple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet val = prompt('Entrez un nombre', '0');\n```\nQuelles sont les affirmations correctes ?",
    "options": [
      "'Entrez un nombre' est le message affiché",
      "'0' est la valeur par défaut dans le champ de saisie",
      "`val` sera un nombre si l'utilisateur entre '12'",
      "`val` sera `null` si l'utilisateur clique sur Annuler"
    ],
    "reponse": [
      "'Entrez un nombre' est le message affiché",
      "'0' est la valeur par défaut dans le champ de saisie",
      "`val` sera `null` si l'utilisateur clique sur Annuler"
    ],
    "explication": "`prompt()` peut prendre un deuxième argument optionnel pour la valeur par défaut. Il retourne toujours une chaîne ou `null`, jamais un nombre directement."
  },
  {
    "id": 4101,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet elem = document.getElementById('msg');\nelem.innerHTML = '<h1>Attention !</h1>';\n```\nQuel est l'effet de ce code ?",
    "options": [
      "Le texte de `elem` devient `<h1>Attention !</h1>`",
      "Le contenu de `elem` est remplacé par un titre `<h1>`",
      "Le code causera une erreur",
      "Le style de `elem` est modifié"
    ],
    "reponse": [
      "Le contenu de `elem` est remplacé par un titre `<h1>`"
    ],
    "explication": "La propriété `innerHTML` interprète la chaîne comme du code HTML, créant ainsi de nouveaux éléments dans le DOM."
  },
  {
    "id": 4102,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nalert(parseInt('A5'));\n```\nQuel est le résultat ?",
    "options": [
      "`'A5'`",
      "`NaN`",
      "`5`",
      "Une erreur"
    ],
    "reponse": [
      "`NaN`"
    ],
    "explication": "`parseInt()` arrête sa lecture au premier caractère qu'il ne reconnaît pas comme un chiffre dans la base spécifiée (par défaut 10). Comme 'A' n'est pas un chiffre, la conversion échoue et retourne `NaN`."
  },
  {
    "id": 4103,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Quel sera le résultat du code suivant ?\n```javascript\nalert(Math.trunc(-5.9));\n```",
    "options": [
      "`-5`",
      "`-6`",
      "`5`",
      "`-5.9`"
    ],
    "reponse": [
      "`-5`"
    ],
    "explication": "La méthode `Math.trunc()` supprime simplement la partie décimale d'un nombre, sans arrondir. Pour `-5.9`, elle retourne donc `-5`."
  },
  {
    "id": 4104,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Quelle méthode est l'opposé de `toLowerCase()` ?",
    "options": [
      "`toUpperCase()`",
      "`capitalize()`",
      "`defaultCase()`",
      "`originalCase()`"
    ],
    "reponse": [
      "`toUpperCase()`"
    ],
    "explication": "`toUpperCase()` convertit tous les caractères d'une chaîne en leur équivalent majuscule."
  },
  {
    "id": 4105,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Quel sera le résultat du code suivant ?\n```javascript\nlet ch = 'Bonjour tout le monde';\nalert(ch.lastIndexOf('o'));\n```",
    "options": [
      "`1`",
      "`4`",
      "`15`",
      "`-1`"
    ],
    "reponse": [
      "`15`"
    ],
    "explication": "La méthode `lastIndexOf()` retourne l'index de la **dernière** occurrence d'un caractère. Dans la chaîne, le dernier 'o' se trouve dans le mot 'monde' à la position 15."
  },
  {
    "id": 4106,
    "type": "choix_multiple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Quelles sont les affirmations vraies à propos de `document.getElementById('test')` ?",
    "options": [
      "Il sélectionne un élément unique.",
      "Il retourne `null` si aucun élément n'est trouvé.",
      "Il retourne une collection d'éléments.",
      "Il est sensible à la casse."
    ],
    "reponse": [
      "Il sélectionne un élément unique.",
      "Il retourne `null` si aucun élément n'est trouvé.",
      "Il est sensible à la casse."
    ],
    "explication": "L'ID est censé être unique. La méthode retourne un seul objet élément ou `null`. La valeur de l'ID est sensible à la casse."
  },
  {
    "id": 4107,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Comment accéder au premier élément d'un tableau `T` ?",
    "options": [
      "`T(0)`",
      "`T.first()`",
      "`T[0]`",
      "`T.get(0)`"
    ],
    "reponse": [
      "`T[0]`"
    ],
    "explication": "Les éléments d'un tableau sont accessibles via leur index (position) entre crochets. L'indexation commence à 0."
  },
  {
    "id": 4108,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Comment accéder au dernier élément d'un tableau `T` ?",
    "options": [
      "`T[length]`",
      "`T[T.length - 1]`",
      "`T.last()`",
      "`T[-1]`"
    ],
    "reponse": [
      "`T[T.length - 1]`"
    ],
    "explication": "L'index du dernier élément est toujours `length - 1` car l'indexation commence à 0."
  },
  {
    "id": 4109,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet T = [];\nT[2] = 'a';\nalert(T.length);\n```\nQuel est le résultat ?",
    "options": [
      "`1`",
      "`2`",
      "`3`",
      "`0`"
    ],
    "reponse": [
      "`3`"
    ],
    "explication": "En assignant une valeur à l'index 2, JavaScript étend automatiquement le tableau. Les index 0 et 1 sont créés mais ont la valeur `undefined`. La longueur devient 3."
  },
  {
    "id": 4110,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Quelle est la différence entre `parseInt()` et `parseFloat()` ?",
    "options": [
      "Aucune",
      "`parseInt()` retourne un entier, `parseFloat()` un réel",
      "`parseFloat()` est plus précis",
      "`parseInt()` accepte une base, `parseFloat()` non"
    ],
    "reponse": [
      "`parseInt()` retourne un entier, `parseFloat()` un réel"
    ],
    "explication": "`parseInt()` ignore tout ce qui suit la partie entière, tandis que `parseFloat()` inclut la partie décimale."
  },
  {
    "id": 4111,
    "type": "zone_saisie",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "En utilisant `Math.trunc`, complétez le code pour obtenir un entier aléatoire entre 0 et 10 (inclus).\n```javascript\nlet alea = Math.trunc(Math.random() * ...);\n```",
    "options": [],
    "reponse": [
      "11"
    ],
    "explication": "`Math.random()` retourne un nombre dans l'intervalle [0, 1[. En le multipliant par 11, on obtient un nombre dans [0, 11[. La méthode `Math.trunc()` supprime la partie décimale, ce qui donne un entier de 0 à 10. Pour les nombres positifs, son résultat est identique à `Math.floor()`."
  },
  {
    "id": 4112,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "Quel sera le résultat final affiché par ce code ?\n```javascript\nlet email = '  Test@Email.COM  ';\nlet emailPropre = email.trim().toLowerCase();\nalert(emailPropre);\n```",
    "options": [
      "`'  test@email.com  '`",
      "`'Test@Email.COM'`",
      "`'test@email.com'`",
      "Le code va générer une erreur."
    ],
    "reponse": [
      "`'test@email.com'`"
    ],
    "explication": "Le code enchaîne deux méthodes : `trim()` supprime d'abord les espaces au début et à la fin pour donner `'Test@Email.COM'`, puis `toLowerCase()` convertit cette nouvelle chaîne en minuscules pour donner `'test@email.com'`."
  },
{
  "id": 4113,
  "type": "choix_simple",
  "theme": "JavaScript",
  "niveau": "avance",
  "question": "```javascript\nlet video = document.getElementById('maVideo');\nvideo.pause();\n```\nQue se passe-t-il lorsque la méthode `pause()` est appelée sur un élément `<video>` ?",
  "options": [
    "La vidéo est supprimée du DOM",
    "La vidéo s'arrête et revient au début",
    "La lecture de la vidéo est mise en pause à l'image actuelle",
    "La vidéo devient invisible"
  ],
  "reponse": [
    "La lecture de la vidéo est mise en pause à l'image actuelle"
  ],
  "explication": "La méthode `pause()` interrompt la lecture de la vidéo mais conserve l'image courante. La vidéo reste dans le DOM et peut être reprise avec `video.play()`."
}
,
  {
    "id": 4114,
    "type": "choix_multiple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "Étant donné le code suivant, quelles affirmations sont correctes ?\n```javascript\nlet fichier = '  DOCUMENT.PDF  ';\nlet fichierPropre = fichier.trim().toLowerCase();\nlet estValide = fichierPropre.indexOf('.pdf') > -1;\n```",
    "options": [
      "La variable `fichierPropre` contiendra la valeur `'document.pdf'`.",
      "La variable `estValide` sera `true`.",
      "La variable `estValide` sera `false`.",
      "Le code génèrera une erreur car `.pdf` n'est pas au début."
    ],
    "reponse": [
      "La variable `fichierPropre` contiendra la valeur `'document.pdf'`.",
      "La variable `estValide` sera `true`."
    ],
    "explication": "Le code nettoie d'abord la chaîne avec `trim()` et `toLowerCase()`. Ensuite, `indexOf('.pdf')` cherche la sous-chaîne '.pdf'. Comme elle est trouvée, `indexOf` retourne un index supérieur à -1, rendant la condition et donc la variable `estValide` vraies."
  },
{
  "id": 4115,
  "type": "zone_saisie",
  "theme": "JavaScript",
  "niveau": "avance",
  "question": "Complétez le code pour extraire la sous-chaîne de la variable `texte` qui commence à l'index 0 et s'arrête au premier `.`.\n```javascript\nlet texte = \"une chaine de test.\";\nlet sousChaine = texte.substring(0, texte ... );\n```",
  "options": [],
  "reponse": [
    ".indexOf('.')"
  ],
  "explication": "La méthode `indexOf('.')` retourne la position du premier point dans la chaîne. Ici, il faut l’ajouter après `texte` pour obtenir `texte.indexOf('.')`."
}
,
{
  "id": 4116,
  "type": "choix_simple",
  "theme": "JavaScript",
  "niveau": "avance",
  "question": "```javascript\nlet ch = 'L’élève est dans la classe';\nalert(ch.replace('la', 'une'));\n```\nQuel sera le résultat ?",
  "options": [
    "`'L’élève est dans une classe'`",
    "`'une élève est dans la classe'`",
    "`'une élève est dans une classe'`",
    "Une erreur"
  ],
  "reponse": [
    "`'L’élève est dans une classe'`"
  ],
  "explication": "La méthode `replace()` ne remplace que la première occurrence de la sous-chaîne trouvée. Ici, seul le premier `'la'` (dans `'la classe'`) est remplacé par `'une'`."
}
,
  {
    "id": 4117,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "Quel sera le résultat du code suivant ?\n```javascript\nlet ch = 'Bonjour';\nalert(ch.substring(3));\n```",
    "options": [
      "`'Bon'`",
      "`'jour'`",
      "`'jon'`",
      "Une erreur"
    ],
    "reponse": [
      "`'jour'`"
    ],
    "explication": "Si un seul argument (un index de début) est fourni à `substring()`, la méthode extrait la sous-chaîne depuis cet index jusqu'à la fin de la chaîne d'origine."
  },
  {
    "id": 4118,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "Quel sera le résultat final affiché par ce code ?\n```javascript\nlet a = (5 == '5'); // true\nlet b = (5 > 10);   // false\nalert( !a || b );\n```",
    "options": [
      "`true`",
      "`false`",
      "`undefined`",
      "Une erreur"
    ],
    "reponse": [
      "`false`"
    ],
    "explication": "L'évaluation se fait comme suit : `!true || false` ce qui devient `false || false`. Le résultat final de l'expression est donc `false`."
  },
  {
    "id": 4119,
    "type": "choix_multiple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "En observant le code suivant qui lit la valeur d'un champ de saisie, quelles affirmations sont correctes ?\n```html\n<input id=\"age\" value=\" 25 \">\n```\n```javascript\nlet age_str = document.getElementById('age').value;\nlet age_num = parseInt(age_str.trim());\n\nlet estMajeur = (age_num >= 18);\nlet estSenior = (age_num > 65);\n```",
    "options": [
      "La variable `age_num` contiendra le nombre `25`.",
      "La variable `estMajeur` aura la valeur `true`.",
      "La variable `estSenior` aura la valeur `true`.",
      "Le code générera une erreur à cause de `.trim()`."
    ],
    "reponse": [
      "La variable `age_num` contiendra le nombre `25`.",
      "La variable `estMajeur` aura la valeur `true`."
    ],
    "explication": "Le code lit la valeur (`' 25 '`) qui est une chaîne. La méthode `trim()` la nettoie (`'25'`), puis `parseInt()` la convertit en nombre (`25`). La comparaison `25 >= 18` est donc vraie, mais `25 > 65` est fausse."
  },
{
  "id": 4120,
  "type": "zone_saisie",
  "theme": "JavaScript",
  "niveau": "avance",
  "question": "Complétez le code suivant pour afficher tous les éléments du tableau :\n```javascript\nlet tab = [1, 5, 10];\nfor (let i = 0; i < ...; i++) {\n  console.log(tab[i]);\n}\n```",
  "options": [],
  "reponse": [
    "tab.length"
  ],
  "explication": "La propriété `tab.length` retourne le nombre d’éléments dans le tableau. Ici, elle vaut `3`, ce qui permet à la boucle `for` d’afficher les éléments `1`, `5` et `10`."
}
,
  {
    "id": 4121,
    "type": "zone_saisie",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "Complétez la propriété manquante pour insérer du code HTML dans le `div`.\n```javascript\nlet div = document.getElementById('message');\ndiv.... = '<h1>Titre</h1>';\n```",
    "options": [],
    "reponse": [
      "innerHTML"
    ],
    "explication": "La propriété `innerHTML` permet de définir ou d'obtenir la syntaxe HTML contenue dans un élément. Elle interprète les chaînes de caractères comme du code HTML."
  },
  {
    "id": 4122,
    "type": "zone_saisie",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "Complétez la méthode manquante pour enlever les espaces au début et à la fin de la chaîne.\n```javascript\nlet ch = '  Bonjour  ';\nlet chPropre = ch....(); // vaut 'Bonjour'\n```",
    "options": [],
    "reponse": [
      "trim"
    ],
    "explication": "La méthode `trim()` retourne une nouvelle chaîne de caractères sans les espaces de début et de fin."
  },
  {
    "id": 4123,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "```javascript\nlet code = String.fromCharCode(97);\nalert(code);\n```\nQue va afficher ce code ?",
    "options": [
      "`'A'`",
      "`'a'`",
      "`97`",
      "`undefined`"
    ],
    "reponse": [
      "`'a'`"
    ],
    "explication": "La méthode statique `String.fromCharCode()` convertit un code ASCII (ou Unicode) en son caractère correspondant. Le code 97 correspond à la lettre 'a' minuscule."
  },
  {
    "id": 4124,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "```javascript\nlet ch = 'bac';\nalert(ch.replace('b', 'p'));\n```\nQuel est le résultat ?",
    "options": [
      "`'bac'`",
      "`'pac'`",
      "`'bap'`",
      "Une erreur"
    ],
    "reponse": [
      "`'pac'`"
    ],
    "explication": "La méthode `replace()` recherche la première occurrence du premier argument et la remplace par le second."
  },
  {
    "id": 4125,
    "type": "choix_multiple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "En JavaScript, quelles affirmations sont vraies concernant le tableau suivant ?\n```javascript\nlet t = ['a', 'b'];\n```",
    "options": [
      "La propriété `t.length` vaut `2`.",
      "L'élément `t[0]` vaut `'a'`.",
      "L'élément `t[2]` vaut `undefined`.",
      "On peut ajouter un élément avec `t[2] = 'c';`."
    ],
    "reponse": [
      "La propriété `t.length` vaut `2`.",
      "L'élément `t[0]` vaut `'a'`.",
      "L'élément `t[2]` vaut `undefined`.",
      "On peut ajouter un élément avec `t[2] = 'c';`."
    ],
    "explication": "Les tableaux en JavaScript ont une longueur (`length`), sont indexés à partir de 0, et retournent `undefined` pour un index inexistant. On peut leur ajouter des éléments en assignant une valeur à un nouvel index."
  },
  {
    "id": 4126,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet resultat = Math.trunc(-3.9);\nalert(resultat);\n```\nQuel est le résultat ?",
    "options": [
      "`-3`",
      "`-4`",
      "`3`",
      "`-3.9`"
    ],
    "reponse": [
      "`-3`"
    ],
    "explication": "La méthode `Math.trunc()` supprime la partie décimale d'un nombre, qu'il soit positif ou négatif, sans arrondir."
  },
  {
    "id": 4127,
    "type": "zone_saisie",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Complétez le code pour changer la couleur de fond de l'élément en bleu.\n```javascript\nlet elem = document.getElementById('banniere');\nelem.style.... = 'blue';\n```",
    "options": [],
    "reponse": [
      "background",
      "backgroundColor"
    ],
    "explication": "La propriété `style.background` en JavaScript permet de modifier la super-propriété CSS `background` d'un élément."
  },
  {
    "id": 4128,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet dateStr = '2025-12-25';\nlet d = new Date(dateStr);\nalert(d.getFullYear());\n```\nQuel est le résultat ?",
    "options": [
      "`2025`",
      "`2024`",
      "`12`",
      "Une erreur"
    ],
    "reponse": [
      "`2025`"
    ],
    "explication": "Le constructeur `new Date()` peut interpréter une chaîne de caractères au format `AAAA-MM-JJ`. La méthode `getFullYear()` extrait ensuite l'année de l'objet date créé."
  },
  {
    "id": 4129,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet resultat = Math.sqrt(16);\nalert(resultat);\n```\nQuel est le résultat ?",
    "options": [
      "`4`",
      "`8`",
      "`256`",
      "`16`"
    ],
    "reponse": [
      "`4`"
    ],
    "explication": "La méthode `Math.sqrt(x)` retourne la racine carrée de `x`. La racine carrée de 16 est 4."
  },
  {
    "id": 4130,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet ch = '  hello  ';\nalert('!' + ch + '!');\n```\nQuel est le résultat ?",
    "options": [
      "`!hello!`",
      "`!  hello  !`",
      "`!hello !`",
      "`! hello!`"
    ],
    "reponse": [
      "`!  hello  !`"
    ],
    "explication": "Sans la méthode `trim()`, les espaces au début et à la fin de la chaîne sont conservés lors de la concaténation."
  },
  {
    "id": 4131,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "```javascript\nalert(Number(true) + Number(false));\n```\nQuel est le résultat ?",
    "options": [
      "`1`",
      "`truefalse`",
      "`NaN`",
      "`2`"
    ],
    "reponse": [
      "`1`"
    ],
    "explication": "Lorsqu'ils sont convertis en nombre, le booléen `true` devient `1` et le booléen `false` devient `0`. L'opération est donc `1 + 0`, ce qui donne `1`."
  },
  {
    "id": 4132,
    "type": "zone_saisie",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "Complétez le code pour que la bordure de l'élément devienne rouge.\n```javascript\nlet elem = document.getElementById('avertissement');\nelem.style.border = ...;\n```",
    "options": [],
    "reponse": [
      "'1px solid red'"
    ],
    "explication": "La propriété `style.border` accepte une chaîne de caractères contenant la largeur, le style et la couleur de la bordure, comme en CSS."
  },
  {
    "id": 4133,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "```javascript\nlet val = prompt('Age ?'); // L'utilisateur clique sur Annuler\nif (val === null) {\n  alert('Annulé');\n}\n```\nQu'est-ce qui sera affiché ?",
    "options": [
      "Rien",
      "Une erreur",
      "`Annulé`",
      "Une boîte `prompt` vide"
    ],
    "reponse": [
      "`Annulé`"
    ],
    "explication": "La fonction `prompt()` retourne spécifiquement la valeur `null` lorsque l'utilisateur clique sur le bouton 'Annuler', ce qui permet de gérer ce cas."
  },
  {
    "id": 4134,
    "type": "zone_saisie",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "Quelle méthode de chaîne est utilisée pour trouver la position de la dernière occurrence d'un caractère ?\n```javascript\nlet ch = 'Bonjour le monde';\nlet pos = ch....('o'); // pos vaut 11\n```",
    "options": [],
    "reponse": [
      "lastIndexOf"
    ],
    "explication": "Contrairement à `indexOf()`, la méthode `lastIndexOf()` commence sa recherche à partir de la fin de la chaîne pour trouver la dernière occurrence."
  },
  {
    "id": 4135,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet ch = ' hello ';\nalert('!' + ch.trim() + '!');\n```\nQuel est le résultat ?",
    "options": [
      "`!  hello  !`",
      "`!hello!`",
      "`!hello !`",
      "`! hello!`"
    ],
    "reponse": [
      "`!hello!`"
    ],
    "explication": "`ch.trim()` retourne une nouvelle chaîne `'hello'` sans les espaces de début et de fin. La concaténation donne donc `!hello!`."
  },
  {
    "id": 4136,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet x = !(5 > 3);\nalert(x);\n```\nQuel est le résultat ?",
    "options": [
      "`true`",
      "`false`",
      "`-1`",
      "`1`"
    ],
    "reponse": [
      "`false`"
    ],
    "explication": "La condition `(5 > 3)` est `true`. L'opérateur de négation `!` inverse cette valeur, la transformant en `false`."
  },
  {
    "id": 4137,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet y = 5;\ny += 10;\nalert(y);\n```\nQuelle est la nouvelle valeur de `y` ?",
    "options": [
      "`10`",
      "`15`",
      "`5`",
      "Une erreur"
    ],
    "reponse": [
      "`15`"
    ],
    "explication": "L'opérateur d'assignation combinée `+=` est un raccourci pour `y = y + 10`."
  },
  {
    "id": 4138,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Quelle est la différence fondamentale entre `==` et `===` ?",
    "options": [
      "Aucune",
      "`==` compare la valeur, `===` compare la valeur ET le type",
      "`===` est plus rapide",
      "`==` est pour les nombres, `===` pour les chaînes"
    ],
    "reponse": [
      "`==` compare la valeur, `===` compare la valeur ET le type"
    ],
    "explication": "`1 == '1'` est vrai, mais `1 === '1'` est faux. La comparaison stricte (`===`) est généralement recommandée pour éviter les conversions de type inattendues."
  },
  {
    "id": 4139,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet ch = 'abcde';\nalert(ch.replace('a', 'x').toUpperCase());\n```\nQuel est le résultat ?",
    "options": [
      "`'xBCDE'`",
      "`'XBCDE'`",
      "`'xbcde'`",
      "Une erreur"
    ],
    "reponse": [
      "`'XBCDE'`"
    ],
    "explication": "Les méthodes peuvent être chaînées. `replace()` retourne `'xbcde'`, puis `toUpperCase()` est appliquée sur ce nouveau résultat pour donner `'XBCDE'`."
  },
  {
    "id": 4140,
    "type": "choix_multiple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet d = new Date(0);\n```\nQuelles sont les affirmations correctes à propos de `d` (en UTC) ?",
    "options": [
      "L'année sera 1970",
      "Le mois sera 0 (Janvier)",
      "Le jour du mois sera 1",
      "Le code génère une erreur"
    ],
    "reponse": [
      "L'année sera 1970",
      "Le mois sera 0 (Janvier)",
      "Le jour du mois sera 1"
    ],
    "explication": "`new Date(0)` crée un objet date correspondant au début de l'époque Unix (timestamp 0), qui est le 1er Janvier 1970 à minuit UTC."
  },
  {
    "id": 4141,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "```javascript\nlet elem = document.getElementById('msg');\nelem.innerHTML = 'Texte <strong>important</strong>';\n```\nComment le texte sera-t-il affiché ?",
    "options": [
      "Texte <strong>important</strong>",
      "Texte important (le mot 'important' en gras)",
      "Le code causera une erreur",
      "Le style de `elem` est modifié"
    ],
    "reponse": [
      "Texte important (le mot 'important' en gras)"
    ],
    "explication": "La propriété `innerHTML` interprète la chaîne comme du code HTML, créant ainsi de nouveaux éléments (ici, une balise `<strong>`) dans le DOM."
  },
  {
    "id": 4142,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Quel sera le résultat de ce code, qui convertit une chaîne binaire en nombre entier ?\n```javascript\nalert(parseInt('101', 2));\n```",
    "options": [
      "`101`",
      "`5`",
      "`NaN`",
      "`8`"
    ],
    "reponse": [
      "`5`"
    ],
    "explication": "Le deuxième argument de `parseInt()` est la base de conversion. `parseInt('101', 2)` interprète la chaîne '101' comme un nombre en base 2 (binaire) et le convertit en son équivalent décimal, qui est 5."
  },
  {
    "id": 4143,
    "type": "choix_multiple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "En observant le code suivant qui extrait le nom de domaine d'une adresse e-mail, quelles affirmations sont correctes ?\n```javascript\nlet email = 'nom@domaine.com';\nlet pos = email.indexOf('@');\nlet domaine = email.substring(pos + 1);\n```",
    "options": [
      "La variable `pos` contiendra la valeur `3`.",
      "La variable `domaine` contiendra la chaîne `'@domaine.com'`.",
      "Le code génèrera une erreur car `indexOf` ne trouve pas le '@'.",
      "La variable `domaine` contiendra la chaîne `'domaine.com'`."
    ],
    "reponse": [
      "La variable `pos` contiendra la valeur `3`.",
      "La variable `domaine` contiendra la chaîne `'domaine.com'`."
    ],
    "explication": "La méthode `indexOf('@')` trouve la position du symbole `@` (ici, l'index 3). On ajoute `1` à cette position pour commencer l'extraction juste après. Ensuite, `substring()` avec un seul argument extrait tout le reste de la chaîne pour isoler le nom de domaine."
  },
  {
    "id": 4144,
    "type": "choix_multiple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Étant donné le code suivant, quelles affirmations sont correctes ?\n```javascript\nlet nom = '  dupont  ';\nlet nomPropre = nom.trim().toUpperCase();\n```",
    "options": [
      "La variable `nomPropre` contiendra `'DUPONT'`.",
      "La variable `nom` sera modifiée et contiendra `'DUPONT'`.",
      "La méthode `trim()` est exécutée avant `toUpperCase()`.",
      "Le code va générer une erreur."
    ],
    "reponse": [
      "La variable `nomPropre` contiendra `'DUPONT'`.",
      "La méthode `trim()` est exécutée avant `toUpperCase()`."
    ],
    "explication": "Les méthodes sont enchaînées : `trim()` s'exécute en premier et retourne `'dupont'`, puis `toUpperCase()` est appliquée sur ce résultat pour donner `'DUPONT'`. Les méthodes de chaînes ne modifient pas la variable originale."
  },
  {
    "id": 4145,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Quel sera le résultat de l'opération suivante ?\n```javascript\nalert(10 / 2 * 5);\n```",
    "options": [
      "`1`",
      "`25`",
      "`10`",
      "Une erreur"
    ],
    "reponse": [
      "`25`"
    ],
    "explication": "Les opérateurs de multiplication (`*`) et de division (`/`) ont la même priorité. L'évaluation se fait donc de gauche à droite : d'abord `10 / 2` ce qui donne `5`, puis `5 * 5` ce qui donne `25`."
  },
{
  "id": 4146,
  "type": "choix_multiple",
  "theme": "JavaScript",
  "niveau": "intermediaire",
  "question": "Quelles affirmations sont vraies concernant les méthodes et propriétés disponibles sur un élément `<audio>` ou `<video>` en JavaScript ?",
  "options": [
    "La propriété `muted` permet de couper le son.",
    "La méthode `play()` lance la lecture du média.",
    "La méthode `pause()` met en pause la lecture.",
    "`play()` et `pause()` renvoient toujours le texte du média."
  ],
  "reponse": [
    "La propriété `muted` permet de couper le son.",
    "La méthode `play()` lance la lecture du média.",
    "La méthode `pause()` met en pause la lecture."
  ],
  "explication": "Les éléments `<audio>` et `<video>` possèdent la propriété booléenne `muted` ainsi que les méthodes `play()` et `pause()`. Celles-ci contrôlent directement la lecture du média. Elles ne renvoient pas le texte du média."
},
  {
    "id": 4147,
    "type": "zone_saisie",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Complétez la propriété manquante pour que la boucle `for` parcoure correctement tous les éléments du tableau.\n```javascript\nlet couleurs = ['rouge', 'vert', 'bleu'];\nfor (let i = 0; i < couleurs....; i++) {\n  // Affiche chaque couleur\n}\n```",
    "options": [],
    "reponse": [
      "length"
    ],
    "explication": "La propriété `length` d'un tableau retourne le nombre d'éléments qu'il contient. Elle est essentielle pour définir la condition d'arrêt d'une boucle `for` qui parcourt ce tableau."
  },
  {
    "id": 4148,
    "type": "choix_multiple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Étant donné le code suivant, quelles affirmations sont correctes ?\n```javascript\nlet resultat = Math.trunc(10 / 3);\n```",
    "options": [
      "La division est effectuée avant l'appel à la fonction `trunc()`.",
      "La variable `resultat` contiendra la valeur `3`.",
      "La variable `resultat` contiendra la valeur `3.33`.",
      "`Math.trunc()` arrondit le résultat à l'entier le plus proche."
    ],
    "reponse": [
      "La division est effectuée avant l'appel à la fonction `trunc()`.",
      "La variable `resultat` contiendra la valeur `3`."
    ],
    "explication": "L'opération de division `10 / 3` est exécutée en premier, donnant `3.333...`. Ensuite, la méthode `Math.trunc()` est appliquée à ce résultat, supprimant la partie décimale pour ne conserver que l'entier `3`."
  },
  {
    "id": 4149,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "Quel sera le résultat de la comparaison dans le code suivant ?\n```javascript\nlet str1 = 'Bonjour';\nlet str2 = 'bonjour';\nalert(str1 == str2);\n```",
    "options": [
      "`true`",
      "`false`",
      "Une erreur",
      "`undefined`"
    ],
    "reponse": [
      "`false`"
    ],
    "explication": "La comparaison de chaînes de caractères avec l'opérateur `==` en JavaScript est sensible à la casse. Comme la première lettre n'a pas la même casse dans les deux chaînes, elles sont considérées comme différentes."
  },
  {
    "id": 4150,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "intermediaire",
    "question": "Quel sera le résultat du code suivant ?\n```javascript\nalert(parseFloat('A12.5'));\n```",
    "options": [
      "`12.5`",
      "`12`",
      "`NaN`",
      "Une erreur"
    ],
    "reponse": [
      "`NaN`"
    ],
    "explication": "La fonction `parseFloat()` analyse une chaîne et s'arrête au premier caractère qu'elle ne peut pas interpréter comme faisant partie d'un nombre. Comme la chaîne commence ici par 'A', la conversion est impossible et la fonction retourne `NaN` (Not-a-Number)."
  },
  {
    "id": 4151,
    "type": "choix_multiple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "Étant donné le code suivant, quelles affirmations sont correctes concernant la variable `nombre` ?\n```javascript\nlet min = 10;\nlet max = 20;\nlet nombre = Math.trunc(Math.random() * (max - min + 1)) + min;\n```",
    "options": [
      "La valeur de `nombre` sera toujours supérieure ou égale à 10.",
      "La valeur de `nombre` sera toujours inférieure ou égale à 20.",
      "La valeur de `nombre` sera toujours un nombre entier.",
      "La valeur de `nombre` pourrait être `10.5`."
    ],
    "reponse": [
      "La valeur de `nombre` sera toujours supérieure ou égale à 10.",
      "La valeur de `nombre` sera toujours inférieure ou égale à 20.",
      "La valeur de `nombre` sera toujours un nombre entier."
    ],
    "explication": "Cette formule génère un entier aléatoire dans un intervalle. `(max - min + 1)` définit la plage, `Math.random()` choisit une valeur, `Math.trunc()` supprime la partie décimale pour la rendre entière, et `+ min` décale l'intervalle pour commencer à `min`."
  },
{
  "id": 4152,
  "type": "choix_simple",
  "theme": "JavaScript",
  "niveau": "avance",
  "question": "Quel sera le résultat affiché par ce code ?\n```javascript\nlet ch = \"#Ceci est un exemple de #chaine# plus longue#\";\nlet sub = ch.substring(ch.indexOf('#') + 1, ch.lastIndexOf('#'));\nconsole.log(sub);\n```",
  "options": [
    "`Ceci est un exemple de #chaine`",
    "`Ceci est un exemple de #chaine# plus longue`",
    "`Ceci est un exemple de #chaine# plus longue#`",
    "`#Ceci est un exemple de #chaine# plus longue#`"
  ],
  "reponse": [
    "`Ceci est un exemple de #chaine`"
  ],
  "explication": "`indexOf('#')` retourne l’index du premier `#`, et `lastIndexOf('#')` celui du dernier. Avec `substring()`, on extrait la portion comprise entre ces deux positions. Ici, on obtient : `Ceci est un exemple de #chaine`."
},
  {
    "id": 4153,
    "type": "zone_saisie",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "Complétez la méthode manquante pour sélectionner tous les boutons radio qui partagent le même nom 'civilite'.\n```html\n<input type=\"radio\" name=\"civilite\" value=\"Mme\">\n<input type=\"radio\" name=\"civilite\" value=\"M.\">\n```\n```javascript\nlet options = document....('civilite');\n```",
    "options": [],
    "reponse": [
      "getElementsByName"
    ],
    "explication": "La méthode `getElementsByName()` est utilisée pour récupérer une collection de tous les éléments (typiquement des champs de formulaire) qui partagent le même attribut `name`."
  },
  {
    "id": 4154,
    "type": "choix_simple",
    "theme": "JavaScript",
    "niveau": "avance",
    "question": "```javascript\nalert(parseInt('A', 16));\n```\nQuel sera le résultat ?",
    "options": [
      "`10`",
      "`NaN`",
      "`26`",
      "`16`"
    ],
    "reponse": [
      "`10`"
    ],
    "explication": "Le deuxième argument de `parseInt` spécifie la base de conversion. En base 16 (hexadécimal),  'A' vaut 10. Le résultat est 10."
  },
{
  "id": 4155,
  "type": "choix_simple",
  "theme": "JavaScript",
  "niveau": "avance",
  "question": "Quel sera le résultat affiché par ce code ?\n```javascript\nlet ch = \"   Bonjour le monde   \";\nlet res = ch.trim().replace(\"le\", \"un\");\nconsole.log(res);\n```",
  "options": [
    "`Bonjour un monde`",
    "`   Bonjour un monde   `",
    "`Bonjour le monde`",
    "`Bonjour monde`"
  ],
  "reponse": [
    "`Bonjour un monde`"
  ],
  "explication": "La méthode `trim()` supprime les espaces en début et fin de chaîne. Ensuite, `replace(\"le\", \"un\")` remplace seulement la première occurrence de `'le'` par `'un'`. Le résultat est donc `Bonjour un monde`."
}
]